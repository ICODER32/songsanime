{
  "openapi": "3.0.3",
  "info": {
    "title": "Video Endpoints",
    "version": "1.1.0",
    "description": "Talks",
    "license": {
      "name": "ISC"
    },
    "contact": {
      "name": "D-ID"
    }
  },
  "servers": [
    {
      "url": "https://api.d-id.com/"
    }
  ],
  "paths": {
    "/talks": {
      "post": {
        "operationId": "CreateTalk",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the talk"
                    },
                    "object": {
                      "type": "string",
                      "description": "An identifier of this talk"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "The user id of the user that created the talk"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Talk creation time as iso-8601 string"
                    },
                    "status": {
                      "description": "The status of the talk",
                      "enum": [
                        "created",
                        "done",
                        "error",
                        "started",
                        "rejected"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created_by",
                    "created_at",
                    "status"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "tlk_AbCs-xcz",
                      "object": "talk",
                      "created_at": "2020-09-03T13:56:54.995",
                      "created_by": "123",
                      "status": "created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "BadRequestError",
                      "description": "invalid actor url"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "InsufficientCreditsError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "InsufficientCreditsError",
                      "description": "not enough credits"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "PermissionError",
                      "description": "user has no permission for stitch"
                    }
                  }
                }
              }
            }
          },
          "451": {
            "description": "ImageModerationError | CelebrityRecognizedError | TextModerationError | AudioModerationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "ImageModerationError",
                      "description": "Automatic content moderation - contact support if you would like to submit for manual review"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a talk",
        "tags": [
          "Talks"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "It is possible to add external API key for TTS generation, to access the API programmatically. The x-api-key-external header must be added, the required value format is {\"elevenlabs\": \"your-api-key\"}. Note: Your ElevenLabs quota consumes. Example: x-api-key-external: \"{\"elevenlabs\": \"ABCDEFGH123456\"}\"",
            "in": "header",
            "name": "x-api-key-external",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "source_url": {
                    "description": "The URL of the source image to be animated by the driver video, or a selection from the list of provided\nstudio actors.",
                    "type": "string",
                    "example": "https://path.to.directory/image.jpg",
                    "pattern": "(https|s3):.*\\.(?:jpg|jpeg|png|JPG|JPEG|PNG)"
                  },
                  "driver_url": {
                    "description": "The URL of the driver video to drive the talk, or a selection from the list or provided drivers\nIf not provided a driver video will be selected for you from the predefined drivers bank",
                    "example": "bank://natural",
                    "type": "string",
                    "pattern": "(https|s3|bank):\\/\\/.+"
                  },
                  "script": {
                    "anyOf": [
                      {
                        "description": "Text script contains an input text to be spoken by the actor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "text"
                            ],
                            "nullable": false,
                            "description": "The type of the script."
                          },
                          "subtitles": {
                            "type": "boolean",
                            "description": "Should subtitles be generated for this script",
                            "default": "false"
                          },
                          "provider": {
                            "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                            "anyOf": [
                              {
                                "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "microsoft"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference//tts-microsoft",
                                    "example": "en-US-JennyNeural",
                                    "default": "en-US-JennyNeural"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options",
                                    "properties": {
                                      "style": {
                                        "type": "string",
                                        "description": "The style of the voice.\nAvailable styles change between voices."
                                      },
                                      "rate": {
                                        "type": "string",
                                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                        "example": "0.5"
                                      },
                                      "pitch": {
                                        "type": "string",
                                        "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                        "example": "+2st"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "description": "Elevenlabs provider details, contains the provider type and requested voice id",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "elevenlabs"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://api.elevenlabs.io/v1/voices",
                                    "example": "21m00Tcm4TlvDq8ikWAM",
                                    "default": "21m00Tcm4TlvDq8ikWAM"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options",
                                    "properties": {
                                      "stability": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The stability of the voice.",
                                        "example": "0.5",
                                        "minimum": 0,
                                        "maximum": 1
                                      },
                                      "similarity_boost": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The similarity boost of the voice.",
                                        "example": "0.75",
                                        "minimum": 0,
                                        "maximum": 1
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "model_id": {
                                    "type": "string",
                                    "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                                    "example": "eleven_multilingual_v2",
                                    "default": "eleven_multilingual_v2"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "description": "Amazon provider details, contains the provider type and requested voice id",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "amazon"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/tts-amazon",
                                    "example": "Joanna",
                                    "type": "string",
                                    "enum": [
                                      "Amy",
                                      "Aria",
                                      "Ayanda",
                                      "Bianca",
                                      "Brian",
                                      "Camila",
                                      "Emma",
                                      "Gabrielle",
                                      "Ivy",
                                      "Joanna",
                                      "Joey",
                                      "Justin",
                                      "Kendra",
                                      "Kevin",
                                      "Kimberly",
                                      "Lea",
                                      "Lucia",
                                      "Lupe",
                                      "Matthew",
                                      "Olivia",
                                      "Salli",
                                      "Seoyeon",
                                      "Takumi",
                                      "Vicki"
                                    ],
                                    "nullable": false
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "description": "Afflorithmics provider details, contains the provider type and requested voice id",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "afflorithmics"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.",
                                    "example": "1a2Bc4dE5fGh",
                                    "default": "1a2Bc4dE5fGh"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
                                    "properties": {
                                      "rate": {
                                        "type": "string",
                                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                        "example": "1.2",
                                        "default": "1"
                                      },
                                      "silencePadding": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                                      },
                                      "voiceIntelligence": {
                                        "type": "boolean",
                                        "description": "Flag to apply lexicographical text corrections"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "google"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.",
                                    "example": "he-IL-Wavenet-A",
                                    "default": "he-IL-Wavenet-A"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              }
                            ]
                          },
                          "input": {
                            "type": "string",
                            "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.\naudio duration is furhter limited in streaming to `01:30` minutes",
                            "example": "This is an example text",
                            "maxLength": 40000,
                            "minLength": 3
                          },
                          "ssml": {
                            "type": "boolean",
                            "description": "Is the text provided in `SSML` form"
                          }
                        },
                        "required": [
                          "type",
                          "input"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "description": "Audio script contains an audio file url to be spoken by the actor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "audio"
                            ],
                            "nullable": false,
                            "description": "The type of the script."
                          },
                          "subtitles": {
                            "type": "boolean",
                            "description": "Should subtitles be generated for this script",
                            "default": "false"
                          },
                          "audio_url": {
                            "description": "The URL of the audio file which will be used by the actor.\nFile size is limit to 15MB.",
                            "type": "string",
                            "example": "https://path.to/audio.mp3",
                            "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
                          },
                          "reduce_noise": {
                            "type": "boolean",
                            "description": "Use noise reduction to improve sync quality",
                            "default": "false"
                          }
                        },
                        "required": [
                          "type",
                          "audio_url"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    ]
                  },
                  "config": {
                    "description": "Advanced configuration options",
                    "properties": {
                      "logo": {
                        "anyOf": [
                          {
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                "pattern": "((https|s3):\\/\\/.+)"
                              },
                              "position": {
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "type": "array",
                                "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                "example": [
                                  0,
                                  500
                                ],
                                "minItems": 2,
                                "maxItems": 2
                              }
                            },
                            "required": [
                              "url",
                              "position"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      "align_driver": {
                        "type": "boolean",
                        "description": "Auto crops the driver face, ignored if using drivers bank"
                      },
                      "align_expand_factor": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of expansion % used for face cropping"
                      },
                      "auto_match": {
                        "type": "boolean",
                        "description": "Finds the best anchor match for the source in driver video"
                      },
                      "motion_factor": {
                        "type": "number",
                        "format": "double",
                        "description": "Amplifies or damps the animation movements"
                      },
                      "normalization_factor": {
                        "type": "number",
                        "format": "double",
                        "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
                        "minimum": 0,
                        "maximum": 1
                      },
                      "sharpen": {
                        "type": "boolean",
                        "description": "Sharpen results."
                      },
                      "stitch": {
                        "type": "boolean",
                        "description": "Stitch back the animated result to the original image"
                      },
                      "result_format": {
                        "description": "File format of the animated result",
                        "type": "string",
                        "enum": [
                          "mp4",
                          "gif",
                          "mov"
                        ]
                      },
                      "fluent": {
                        "type": "boolean",
                        "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
                        "default": "false"
                      },
                      "pad_audio": {
                        "type": "number",
                        "format": "double",
                        "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
                        "default": "0.0",
                        "minimum": 0,
                        "maximum": 60
                      },
                      "driver_expressions": {
                        "description": "timed expressions for animation, the current expression is not cleared until a new expression is defined.\nPossible expressions include `happy`, `neutral` and more.",
                        "properties": {
                          "expressions": {
                            "items": {
                              "properties": {
                                "start_frame": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The frame number for the expression start point.",
                                  "minimum": 0
                                },
                                "expression": {
                                  "description": "The expression to use",
                                  "enum": [
                                    "neutral",
                                    "happy",
                                    "serious",
                                    "surprise"
                                  ],
                                  "type": "string"
                                },
                                "intensity": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Controls the intensity you want for this expression (between 0 no expression, 1 maximum)",
                                  "minimum": 0,
                                  "maximum": 1
                                }
                              },
                              "required": [
                                "start_frame",
                                "expression",
                                "intensity"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array",
                            "description": "List of TimedExpression to use"
                          },
                          "transition_frames": {
                            "type": "number",
                            "format": "double",
                            "description": "Number of frames to use for the transition between expressions",
                            "minimum": 0
                          }
                        },
                        "required": [
                          "expressions"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "user_data": {
                    "description": "Non-sensitive custom data that will be added to the talk response and webhook",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500,
                    "pattern": "^(?!\\s*$).+$"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the talk video"
                  },
                  "webhook": {
                    "description": "A webhook URL for sending the payload including animate details\nIn a case of empty value, the webhook will not be triggered",
                    "example": "https://host.domain.tld/to/webhook",
                    "type": "string",
                    "pattern": "^(?:https):\\/\\/[\\S]+$"
                  },
                  "result_url": {
                    "description": "The URL of the talk video, if not provided use default destination.",
                    "example": "https://path.to.directory/",
                    "type": "string",
                    "pattern": "(https|s3):\\/\\/.+"
                  },
                  "face": {
                    "description": "The face to animate - otherwise detects the face automatically",
                    "example": {
                      "top_left": [
                        0,
                        0
                      ],
                      "size": 512
                    },
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Size of the square side",
                        "minimum": 0
                      },
                      "top_left": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "Top left location of the face in the frame - can be negative",
                        "minItems": 2,
                        "maxItems": 2
                      },
                      "overlap": {
                        "enum": [
                          "NO",
                          "PARTIAL",
                          "YES",
                          "UNKNOWN"
                        ],
                        "type": "string"
                      },
                      "face_id": {
                        "type": "string"
                      },
                      "detect_confidence": {
                        "type": "number",
                        "format": "double"
                      },
                      "sharpness": {
                        "type": "number",
                        "format": "double"
                      },
                      "face_occluded": {
                        "type": "boolean"
                      },
                      "face_occluded_confidence": {
                        "type": "number",
                        "format": "double"
                      },
                      "detection": {
                        "properties": {
                          "top": {
                            "type": "number",
                            "format": "double"
                          },
                          "left": {
                            "type": "number",
                            "format": "double"
                          },
                          "bottom": {
                            "type": "number",
                            "format": "double"
                          },
                          "right": {
                            "type": "number",
                            "format": "double"
                          }
                        },
                        "required": [
                          "top",
                          "left",
                          "bottom",
                          "right"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "size",
                      "top_left"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "persist": {
                    "type": "boolean",
                    "description": "Whether the video should remain in storage without TTL."
                  }
                },
                "required": [
                  "source_url",
                  "script"
                ],
                "type": "object",
                "additionalProperties": false
              }
            }
          }
        }
      },
      "get": {
        "operationId": "GetTalks",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "talks": {
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the object"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Unique identifier of the user that submitted the talk"
                          },
                          "source_url": {
                            "type": "string",
                            "description": "The URL of the source image to be animated by the driver video. Image type of .jpg | .png"
                          },
                          "driver_url": {
                            "type": "string",
                            "description": "The URL of the driver video to drive the talk, if not provided a driver video will be selected for you from the predefined DriversBank"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Talk creation time as iso-8601 string"
                          },
                          "created_by": {
                            "type": "string",
                            "description": "The user id of the user that created the talk"
                          },
                          "audio_url": {
                            "description": "The URL of the audio file which will be used by the actor",
                            "example": "https://path.to/audio.mp3",
                            "type": "string",
                            "pattern": "^(?:https):\\/\\/[\\S]+$"
                          },
                          "started_at": {
                            "type": "string",
                            "description": "Talk start time as iso-8601 string"
                          },
                          "modified_at": {
                            "type": "string",
                            "description": "last modified time as iso-8601 string"
                          },
                          "status": {
                            "description": "The status of the talk",
                            "enum": [
                              "created",
                              "done",
                              "error",
                              "started",
                              "rejected"
                            ],
                            "type": "string"
                          },
                          "result_url": {
                            "type": "string",
                            "description": "s3 uri to the resulting video"
                          },
                          "metadata": {
                            "description": "metadata that has been collected through the process",
                            "properties": {},
                            "type": "object"
                          },
                          "webhook": {
                            "type": "string",
                            "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                          },
                          "config": {
                            "description": "The configuration that used to process the talk",
                            "properties": {
                              "logo": {
                                "anyOf": [
                                  {
                                    "properties": {
                                      "url": {
                                        "type": "string",
                                        "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                        "pattern": "((https|s3):\\/\\/.+)"
                                      },
                                      "position": {
                                        "items": {
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "type": "array",
                                        "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                        "example": [
                                          0,
                                          500
                                        ],
                                        "minItems": 2,
                                        "maxItems": 2
                                      }
                                    },
                                    "required": [
                                      "url",
                                      "position"
                                    ],
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              },
                              "align_driver": {
                                "type": "boolean",
                                "description": "Auto crops the driver face, ignored if using drivers bank"
                              },
                              "align_expand_factor": {
                                "type": "number",
                                "format": "double",
                                "description": "The amount of expansion % used for face cropping"
                              },
                              "auto_match": {
                                "type": "boolean",
                                "description": "Finds the best anchor match for the source in driver video"
                              },
                              "motion_factor": {
                                "type": "number",
                                "format": "double",
                                "description": "Amplifies or damps the animation movements"
                              },
                              "normalization_factor": {
                                "type": "number",
                                "format": "double",
                                "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
                                "minimum": 0,
                                "maximum": 1
                              },
                              "sharpen": {
                                "type": "boolean",
                                "description": "Sharpen results."
                              },
                              "stitch": {
                                "type": "boolean",
                                "description": "Stitch back the animated result to the original image"
                              },
                              "result_format": {
                                "description": "File format of the animated result",
                                "type": "string",
                                "enum": [
                                  "mp4",
                                  "gif",
                                  "mov"
                                ]
                              },
                              "fluent": {
                                "type": "boolean",
                                "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
                                "default": "false"
                              },
                              "pad_audio": {
                                "type": "number",
                                "format": "double",
                                "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
                                "default": "0.0",
                                "minimum": 0,
                                "maximum": 60
                              },
                              "driver_expressions": {
                                "description": "timed expressions for animation, the current expression is not cleared until a new expression is defined.\nPossible expressions include `happy`, `neutral` and more.",
                                "properties": {
                                  "expressions": {
                                    "items": {
                                      "properties": {
                                        "start_frame": {
                                          "type": "number",
                                          "format": "double",
                                          "description": "The frame number for the expression start point.",
                                          "minimum": 0
                                        },
                                        "expression": {
                                          "description": "The expression to use",
                                          "enum": [
                                            "neutral",
                                            "happy",
                                            "serious",
                                            "surprise"
                                          ],
                                          "type": "string"
                                        },
                                        "intensity": {
                                          "type": "number",
                                          "format": "double",
                                          "description": "Controls the intensity you want for this expression (between 0 no expression, 1 maximum)",
                                          "minimum": 0,
                                          "maximum": 1
                                        }
                                      },
                                      "required": [
                                        "start_frame",
                                        "expression",
                                        "intensity"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "description": "List of TimedExpression to use"
                                  },
                                  "transition_frames": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Number of frames to use for the transition between expressions",
                                    "minimum": 0
                                  }
                                },
                                "required": [
                                  "expressions"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "id",
                          "user_id",
                          "source_url",
                          "created_at",
                          "modified_at",
                          "status"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "talks"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get talks",
        "tags": [
          "Talks"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "pagination - the amount of talks to return",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "pagination - the pagination token from the previous response, default = 100",
            "in": "query",
            "name": "token",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/talks/{id}": {
      "get": {
        "operationId": "GetTalk",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the object"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Unique identifier of the user that submitted the talk"
                    },
                    "source_url": {
                      "type": "string",
                      "description": "The URL of the source image to be animated by the driver video. Image type of .jpg | .png"
                    },
                    "driver_url": {
                      "type": "string",
                      "description": "The URL of the driver video to drive the talk, if not provided a driver video will be selected for you from the predefined DriversBank"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Talk creation time as iso-8601 string"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "The user id of the user that created the talk"
                    },
                    "audio_url": {
                      "description": "The URL of the audio file which will be used by the actor",
                      "example": "https://path.to/audio.mp3",
                      "type": "string",
                      "pattern": "^(?:https):\\/\\/[\\S]+$"
                    },
                    "started_at": {
                      "type": "string",
                      "description": "Talk start time as iso-8601 string"
                    },
                    "modified_at": {
                      "type": "string",
                      "description": "last modified time as iso-8601 string"
                    },
                    "status": {
                      "description": "The status of the talk",
                      "enum": [
                        "created",
                        "done",
                        "error",
                        "started",
                        "rejected"
                      ],
                      "type": "string"
                    },
                    "result_url": {
                      "type": "string",
                      "description": "s3 uri to the resulting video"
                    },
                    "metadata": {
                      "description": "metadata that has been collected through the process",
                      "properties": {},
                      "type": "object"
                    },
                    "webhook": {
                      "type": "string",
                      "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                    },
                    "config": {
                      "description": "The configuration that used to process the talk",
                      "properties": {
                        "logo": {
                          "anyOf": [
                            {
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                  "pattern": "((https|s3):\\/\\/.+)"
                                },
                                "position": {
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "type": "array",
                                  "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                  "example": [
                                    0,
                                    500
                                  ],
                                  "minItems": 2,
                                  "maxItems": 2
                                }
                              },
                              "required": [
                                "url",
                                "position"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        },
                        "align_driver": {
                          "type": "boolean",
                          "description": "Auto crops the driver face, ignored if using drivers bank"
                        },
                        "align_expand_factor": {
                          "type": "number",
                          "format": "double",
                          "description": "The amount of expansion % used for face cropping"
                        },
                        "auto_match": {
                          "type": "boolean",
                          "description": "Finds the best anchor match for the source in driver video"
                        },
                        "motion_factor": {
                          "type": "number",
                          "format": "double",
                          "description": "Amplifies or damps the animation movements"
                        },
                        "normalization_factor": {
                          "type": "number",
                          "format": "double",
                          "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
                          "minimum": 0,
                          "maximum": 1
                        },
                        "sharpen": {
                          "type": "boolean",
                          "description": "Sharpen results."
                        },
                        "stitch": {
                          "type": "boolean",
                          "description": "Stitch back the animated result to the original image"
                        },
                        "result_format": {
                          "description": "File format of the animated result",
                          "type": "string",
                          "enum": [
                            "mp4",
                            "gif",
                            "mov"
                          ]
                        },
                        "fluent": {
                          "type": "boolean",
                          "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
                          "default": "false"
                        },
                        "pad_audio": {
                          "type": "number",
                          "format": "double",
                          "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
                          "default": "0.0",
                          "minimum": 0,
                          "maximum": 60
                        },
                        "driver_expressions": {
                          "description": "timed expressions for animation, the current expression is not cleared until a new expression is defined.\nPossible expressions include `happy`, `neutral` and more.",
                          "properties": {
                            "expressions": {
                              "items": {
                                "properties": {
                                  "start_frame": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The frame number for the expression start point.",
                                    "minimum": 0
                                  },
                                  "expression": {
                                    "description": "The expression to use",
                                    "enum": [
                                      "neutral",
                                      "happy",
                                      "serious",
                                      "surprise"
                                    ],
                                    "type": "string"
                                  },
                                  "intensity": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Controls the intensity you want for this expression (between 0 no expression, 1 maximum)",
                                    "minimum": 0,
                                    "maximum": 1
                                  }
                                },
                                "required": [
                                  "start_frame",
                                  "expression",
                                  "intensity"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "description": "List of TimedExpression to use"
                            },
                            "transition_frames": {
                              "type": "number",
                              "format": "double",
                              "description": "Number of frames to use for the transition between expressions",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "expressions"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "id",
                    "user_id",
                    "source_url",
                    "created_at",
                    "modified_at",
                    "status"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFoundError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotFoundError",
                      "description": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a specific talk",
        "tags": [
          "Talks"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteTalk",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the object"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Unique identifier of the user that submitted the talk"
                    },
                    "source_url": {
                      "type": "string",
                      "description": "The URL of the source image to be animated by the driver video. Image type of .jpg | .png"
                    },
                    "driver_url": {
                      "type": "string",
                      "description": "The URL of the driver video to drive the talk, if not provided a driver video will be selected for you from the predefined DriversBank"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Talk creation time as iso-8601 string"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "The user id of the user that created the talk"
                    },
                    "audio_url": {
                      "description": "The URL of the audio file which will be used by the actor",
                      "example": "https://path.to/audio.mp3",
                      "type": "string",
                      "pattern": "^(?:https):\\/\\/[\\S]+$"
                    },
                    "started_at": {
                      "type": "string",
                      "description": "Talk start time as iso-8601 string"
                    },
                    "modified_at": {
                      "type": "string",
                      "description": "last modified time as iso-8601 string"
                    },
                    "status": {
                      "description": "The status of the talk",
                      "enum": [
                        "created",
                        "done",
                        "error",
                        "started",
                        "rejected"
                      ],
                      "type": "string"
                    },
                    "result_url": {
                      "type": "string",
                      "description": "s3 uri to the resulting video"
                    },
                    "metadata": {
                      "description": "metadata that has been collected through the process",
                      "properties": {},
                      "type": "object"
                    },
                    "webhook": {
                      "type": "string",
                      "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                    },
                    "config": {
                      "description": "The configuration that used to process the talk",
                      "properties": {
                        "logo": {
                          "anyOf": [
                            {
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                  "pattern": "((https|s3):\\/\\/.+)"
                                },
                                "position": {
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "type": "array",
                                  "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                  "example": [
                                    0,
                                    500
                                  ],
                                  "minItems": 2,
                                  "maxItems": 2
                                }
                              },
                              "required": [
                                "url",
                                "position"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        },
                        "align_driver": {
                          "type": "boolean",
                          "description": "Auto crops the driver face, ignored if using drivers bank"
                        },
                        "align_expand_factor": {
                          "type": "number",
                          "format": "double",
                          "description": "The amount of expansion % used for face cropping"
                        },
                        "auto_match": {
                          "type": "boolean",
                          "description": "Finds the best anchor match for the source in driver video"
                        },
                        "motion_factor": {
                          "type": "number",
                          "format": "double",
                          "description": "Amplifies or damps the animation movements"
                        },
                        "normalization_factor": {
                          "type": "number",
                          "format": "double",
                          "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
                          "minimum": 0,
                          "maximum": 1
                        },
                        "sharpen": {
                          "type": "boolean",
                          "description": "Sharpen results."
                        },
                        "stitch": {
                          "type": "boolean",
                          "description": "Stitch back the animated result to the original image"
                        },
                        "result_format": {
                          "description": "File format of the animated result",
                          "type": "string",
                          "enum": [
                            "mp4",
                            "gif",
                            "mov"
                          ]
                        },
                        "fluent": {
                          "type": "boolean",
                          "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
                          "default": "false"
                        },
                        "pad_audio": {
                          "type": "number",
                          "format": "double",
                          "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
                          "default": "0.0",
                          "minimum": 0,
                          "maximum": 60
                        },
                        "driver_expressions": {
                          "description": "timed expressions for animation, the current expression is not cleared until a new expression is defined.\nPossible expressions include `happy`, `neutral` and more.",
                          "properties": {
                            "expressions": {
                              "items": {
                                "properties": {
                                  "start_frame": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The frame number for the expression start point.",
                                    "minimum": 0
                                  },
                                  "expression": {
                                    "description": "The expression to use",
                                    "enum": [
                                      "neutral",
                                      "happy",
                                      "serious",
                                      "surprise"
                                    ],
                                    "type": "string"
                                  },
                                  "intensity": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Controls the intensity you want for this expression (between 0 no expression, 1 maximum)",
                                    "minimum": 0,
                                    "maximum": 1
                                  }
                                },
                                "required": [
                                  "start_frame",
                                  "expression",
                                  "intensity"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "description": "List of TimedExpression to use"
                            },
                            "transition_frames": {
                              "type": "number",
                              "format": "double",
                              "description": "Number of frames to use for the transition between expressions",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "expressions"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "id",
                    "user_id",
                    "source_url",
                    "created_at",
                    "modified_at",
                    "status"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFoundError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotFoundError",
                      "description": "not found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "NotReadyError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotReadyError",
                      "description": "talk is in process, try again later"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a specific talk",
        "tags": [
          "Talks"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/talks/streams": {
      "post": {
        "operationId": "CreateStream",
        "responses": {
          "201": {
            "description": "Created stream",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "session_id": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string",
                      "description": "Id of the stream - should be returned as *path parameter* in all streaming request to the same stream"
                    },
                    "jsep": {
                      "description": "Jsep offer object used to create a peer connection",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "offer"
                          ],
                          "nullable": false,
                          "description": "The session description object describes the initial proposal in an offer/answer exchange."
                        },
                        "sdp": {
                          "type": "string",
                          "description": "Describe the media communication sessions to accept the session the is being negotiated"
                        }
                      },
                      "required": [
                        "type",
                        "sdp"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "ice_servers": {
                      "items": {
                        "properties": {
                          "urls": {
                            "anyOf": [
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "URL of the server - can be multiple addresses"
                          },
                          "username": {
                            "type": "string",
                            "description": "Username for authentication"
                          },
                          "credential": {
                            "type": "string",
                            "description": "Credintials for secure connection to the server"
                          }
                        },
                        "required": [
                          "urls"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "description": "ICE servers used to create a peer connection"
                    }
                  },
                  "required": [
                    "id",
                    "jsep",
                    "ice_servers"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Initiates the creation of a new WebRTC connection to a browser peer. The endpoint returns the necessary information to set up and manage the connection.",
        "summary": "Create a new stream",
        "tags": [
          "Talks Streams"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "user-agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "source_url": {
                    "type": "string",
                    "description": "URL to a photo you wish to animate in the stream"
                  },
                  "driver_url": {
                    "type": "string",
                    "description": "The URL of the driver video to drive the talk, or a selection from the list or provided drivers.\nIf not provided a driver video will be selected for you from the predefined drivers bank."
                  },
                  "face": {
                    "description": "the face to animate - otherwise detects the dominant face",
                    "example": {
                      "top_left": [
                        0,
                        0
                      ],
                      "size": 512
                    },
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Size of the square side",
                        "minimum": 0
                      },
                      "top_left": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "Top left location of the face in the frame - can be negative",
                        "minItems": 2,
                        "maxItems": 2
                      },
                      "overlap": {
                        "enum": [
                          "NO",
                          "PARTIAL",
                          "YES",
                          "UNKNOWN"
                        ],
                        "type": "string"
                      },
                      "face_id": {
                        "type": "string"
                      },
                      "detect_confidence": {
                        "type": "number",
                        "format": "double"
                      },
                      "sharpness": {
                        "type": "number",
                        "format": "double"
                      },
                      "face_occluded": {
                        "type": "boolean"
                      },
                      "face_occluded_confidence": {
                        "type": "number",
                        "format": "double"
                      },
                      "detection": {
                        "properties": {
                          "top": {
                            "type": "number",
                            "format": "double"
                          },
                          "left": {
                            "type": "number",
                            "format": "double"
                          },
                          "bottom": {
                            "type": "number",
                            "format": "double"
                          },
                          "right": {
                            "type": "number",
                            "format": "double"
                          }
                        },
                        "required": [
                          "top",
                          "left",
                          "bottom",
                          "right"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "size",
                      "top_left"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "config": {
                    "description": "Advanced configuration options.",
                    "properties": {
                      "motion_factor": {
                        "type": "number",
                        "format": "double",
                        "description": "Amplifies or damps the animation movements"
                      },
                      "align_expand_factor": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of expansion % used for face cropping"
                      },
                      "stitch": {
                        "type": "boolean",
                        "description": "Stitch back the animated result to the original image"
                      }
                    },
                    "type": "object"
                  },
                  "compatibility_mode": {
                    "description": "Defines the video codec to be used in the stream.\nWhen set to on: VP8 will be used.\nWhen set to off: H264 will be used\nWhen set to auto the codec will be selected according to the browser.",
                    "type": "string",
                    "enum": [
                      "on",
                      "off",
                      "auto"
                    ]
                  },
                  "stream_warmup": {
                    "type": "boolean",
                    "description": "Whether to stream wamrup video on the connection.\nIf set to true, will stream a warmup video when connection is established.\nAt the end of the warmup video, a message containing \"stream/ready\" will be sent on the data channel.",
                    "default": "false"
                  },
                  "session_timeout": {
                    "type": "number",
                    "format": "double",
                    "description": "Maximum duration (in seconds) between messages before session times out.\nCan only be used with proper permissions",
                    "example": 180,
                    "maximum": 300
                  },
                  "stream_resolution": {
                    "type": "number",
                    "format": "double",
                    "description": "The stream resolution sets the maximum height or width resolution of the streamed video,\nwith the aspect ratio preserved from the source image.\nCan only be used when 'stitch' is set to true.",
                    "example": 720,
                    "maximum": 1080
                  }
                },
                "required": [
                  "source_url"
                ],
                "type": "object",
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/talks/streams/{id}/sdp": {
      "post": {
        "operationId": "StartConnection",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "SessionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "SessionError",
                      "description": "missing or invalid session_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates the server with the SDP answer to the SDP offer received from the initial call to the `/streams` endpoint, during the offer/answer negotiation of a WebRTC connection.",
        "summary": "Start a stream",
        "tags": [
          "Talks Streams"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "the stream identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            },
            "deprecated": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "session_id": {
                    "type": "string",
                    "description": "Session identifier information, should be returned in the body of all streaming requests (from the response\nof the POST /streams)"
                  },
                  "answer": {
                    "description": "Jsep answer object used to create a peer connection",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "answer"
                        ],
                        "nullable": false,
                        "description": "The SDP contained in the sdp property is the definitive choice in the exchange. In other words, this session\ndescription describes the agreed-upon configuration, and is being sent to finalize negotiation."
                      },
                      "sdp": {
                        "type": "string",
                        "description": "Describe the media communication sessions to accept the session the is being negotiated"
                      }
                    },
                    "required": [
                      "type",
                      "sdp"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "answer"
                ],
                "type": "object",
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/talks/streams/{id}/ice": {
      "post": {
        "operationId": "AddIceCandidate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "SessionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "SessionError",
                      "description": "missing or invalid session_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates the server with a WebRTC ICE candidate. If the candidate parameter is missing or a value of null is given the added ICE candidate is an \"end-of-candidates\" indicator.",
        "summary": "Submit network information",
        "tags": [
          "Talks Streams"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "the stream identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            },
            "deprecated": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "properties": {
                          "candidate": {
                            "type": "string",
                            "description": "A string representing the transport address for the candidate that can be used for connectivity checks.\nThe format of this address is a candidate-attribute as defined in RFC 5245. This string is empty (\"\") if the\nRTCIceCandidate is an \"end of candidates\" indicator."
                          },
                          "sdpMid": {
                            "type": "string",
                            "description": "A string specifying the candidate's media stream identification tag which uniquely identifies the media stream\nwithin the component with which the candidate is associated, or null if no such association exists."
                          },
                          "sdpMLineIndex": {
                            "type": "number",
                            "format": "double",
                            "description": "If not null, sdpMLineIndex indicates the zero-based index number of the media description (as defined in RFC\n4566) in the SDP with which the candidate is associated."
                          }
                        },
                        "required": [
                          "candidate",
                          "sdpMid",
                          "sdpMLineIndex"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {},
                        "type": "object"
                      }
                    ]
                  },
                  {
                    "properties": {
                      "session_id": {
                        "type": "string",
                        "description": "Session identifier information, should be returned in the body of all streaming requests (from the response\nof the POST /streams)"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/talks/streams/{id}": {
      "post": {
        "operationId": "CreateTalkStream",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "session_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "session_id",
                    "status"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "SessionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "SessionError",
                      "description": "missing or invalid session_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a talk stream",
        "tags": [
          "Talks Streams"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "the stream identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "It is possible to add external API key for TTS generation, to access the API programmatically. The x-api-key-external header must be added, the required value format is {\"elevenlabs\": \"your-api-key\"}. Note: Your ElevenLabs quota consumes. Example: x-api-key-external: \"{\"elevenlabs\": \"ABCDEFGH123456\"}\"",
            "in": "header",
            "name": "x-api-key-external",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            },
            "deprecated": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "session_id": {
                    "type": "string"
                  },
                  "driver_url": {
                    "description": "The URL of the driver video to drive the talk, or a selection from the list or provided drivers.\nIf not provided a driver video will be selected for you from the predefined drivers bank.",
                    "example": "bank://natural",
                    "deprecated": true,
                    "type": "string",
                    "pattern": "(https|s3|bank):\\/\\/.+"
                  },
                  "result_url": {
                    "description": "The URL to save the video result.",
                    "type": "string",
                    "example": "https://path.to.directory/movie.mp4",
                    "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
                  },
                  "script": {
                    "anyOf": [
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "text"
                            ],
                            "nullable": false,
                            "description": "The type of the script."
                          },
                          "provider": {
                            "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                            "anyOf": [
                              {
                                "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "microsoft"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                                    "example": "en-US-JennyNeural",
                                    "default": "en-US-JennyNeural"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options",
                                    "properties": {
                                      "style": {
                                        "type": "string",
                                        "description": "The style of the voice.\nAvailable styles change between voices."
                                      },
                                      "rate": {
                                        "type": "string",
                                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                        "example": "0.5"
                                      },
                                      "pitch": {
                                        "type": "string",
                                        "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                        "example": "+2st"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "elevenlabs"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                                    "example": "21m00Tcm4TlvDq8ikWAM",
                                    "default": "21m00Tcm4TlvDq8ikWAM"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                                    "properties": {
                                      "stability": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "How stable the voice is and the randomness of each new generation.",
                                        "example": "0"
                                      },
                                      "similarity_boost": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                                        "example": "0"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "model_id": {
                                    "type": "string",
                                    "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                                    "example": "eleven_multilingual_v2",
                                    "default": "eleven_multilingual_v2"
                                  },
                                  "shouldAddDefaultOutputFormat": {
                                    "type": "boolean",
                                    "description": "Add default outputformat to the stream request if true"
                                  },
                                  "access": {
                                    "description": "The access level of the requested voice.",
                                    "enum": [
                                      "public",
                                      "premium",
                                      "private",
                                      "external-private"
                                    ],
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              }
                            ]
                          },
                          "input": {
                            "type": "string",
                            "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.",
                            "example": "This is an example text",
                            "maxLength": 40000,
                            "minLength": 3
                          },
                          "ssml": {
                            "type": "boolean",
                            "description": "Is the text provided in ssml form.",
                            "default": "false"
                          }
                        },
                        "required": [
                          "type",
                          "input"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "audio"
                            ],
                            "nullable": false,
                            "description": "The type of the script."
                          },
                          "audio_url": {
                            "description": "The URL of the audio file which will be used by the actor.\nFile size is limit to 15MB.",
                            "type": "string",
                            "example": "https://path.to/audio.mp3",
                            "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
                          }
                        },
                        "required": [
                          "type",
                          "audio_url"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "llm"
                            ],
                            "nullable": false
                          },
                          "provider": {
                            "anyOf": [
                              {
                                "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "microsoft"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                                    "example": "en-US-JennyNeural",
                                    "default": "en-US-JennyNeural"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options",
                                    "properties": {
                                      "style": {
                                        "type": "string",
                                        "description": "The style of the voice.\nAvailable styles change between voices."
                                      },
                                      "rate": {
                                        "type": "string",
                                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                        "example": "0.5"
                                      },
                                      "pitch": {
                                        "type": "string",
                                        "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                        "example": "+2st"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "elevenlabs"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                                    "example": "21m00Tcm4TlvDq8ikWAM",
                                    "default": "21m00Tcm4TlvDq8ikWAM"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                                    "properties": {
                                      "stability": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "How stable the voice is and the randomness of each new generation.",
                                        "example": "0"
                                      },
                                      "similarity_boost": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                                        "example": "0"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "model_id": {
                                    "type": "string",
                                    "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                                    "example": "eleven_multilingual_v2",
                                    "default": "eleven_multilingual_v2"
                                  },
                                  "shouldAddDefaultOutputFormat": {
                                    "type": "boolean",
                                    "description": "Add default outputformat to the stream request if true"
                                  },
                                  "access": {
                                    "description": "The access level of the requested voice.",
                                    "enum": [
                                      "public",
                                      "premium",
                                      "private",
                                      "external-private"
                                    ],
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              }
                            ]
                          },
                          "ssml": {
                            "type": "boolean"
                          },
                          "llm": {
                            "properties": {
                              "provider": {
                                "type": "string",
                                "enum": [
                                  "openai"
                                ],
                                "nullable": false
                              },
                              "messages": {
                                "items": {
                                  "properties": {
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "system",
                                        "user",
                                        "assistant"
                                      ]
                                    },
                                    "content": {
                                      "type": "string"
                                    },
                                    "created_at": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "content",
                                    "created_at"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "provider",
                              "messages"
                            ],
                            "type": "object"
                          },
                          "input": {
                            "type": "string"
                          },
                          "stream_audio": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "type",
                          "llm"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    ]
                  },
                  "config": {
                    "allOf": [
                      {
                        "description": "Construct a type with the properties of T except for those in type K.",
                        "properties": {
                          "motion_factor": {
                            "type": "number",
                            "format": "double",
                            "description": "Amplifies or damps the animation movements"
                          },
                          "align_expand_factor": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount of expansion % used for face cropping"
                          },
                          "stitch": {
                            "type": "boolean",
                            "description": "Stitch back the animated result to the original image"
                          },
                          "align_driver": {
                            "type": "boolean",
                            "description": "Auto crops the driver face, ignored if using drivers bank"
                          },
                          "auto_match": {
                            "type": "boolean",
                            "description": "Finds the best anchor match for the source in driver video"
                          },
                          "normalization_factor": {
                            "type": "number",
                            "format": "double",
                            "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
                            "minimum": 0,
                            "maximum": 1
                          },
                          "sharpen": {
                            "type": "boolean",
                            "description": "Sharpen results."
                          },
                          "result_format": {
                            "description": "File format of the animated result",
                            "type": "string",
                            "enum": [
                              "mp4",
                              "gif",
                              "mov"
                            ]
                          },
                          "fluent": {
                            "type": "boolean",
                            "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
                            "default": "false"
                          },
                          "pad_audio": {
                            "type": "number",
                            "format": "double",
                            "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
                            "default": "0.0",
                            "minimum": 0,
                            "maximum": 60
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "align_expand_factor": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount of expansion % used for face cropping",
                            "deprecated": true
                          },
                          "motion_factor": {
                            "type": "number",
                            "format": "double",
                            "description": "Amplifies or damps the animation movements",
                            "deprecated": true
                          },
                          "stitch": {
                            "type": "boolean",
                            "description": "Stitch back the animated result to the original image",
                            "deprecated": true
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    ],
                    "description": "Advanced configuration options."
                  },
                  "user_data": {
                    "description": "Non-sensitive custom data that will be added to the talk response and webhook.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500,
                    "pattern": "^(?!\\s*$).+$"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the talk video"
                  },
                  "audio_optimization": {
                    "type": "number",
                    "format": "double",
                    "description": "The optimization level of the audio",
                    "default": "2"
                  },
                  "metadata": {
                    "description": "Metadata passed to the talks worker"
                  }
                },
                "required": [
                  "script"
                ],
                "type": "object",
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DeleteStream",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "SessionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "SessionError",
                      "description": "missing or invalid session_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotFound",
                      "description": "stream_id doesn't exits or not owened by the user"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a talk stream",
        "tags": [
          "Talks Streams"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "the stream identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            },
            "deprecated": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "session_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/clips/presenters": {
      "get": {
        "operationId": "GetPresenters",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "presenters": {
                      "items": {
                        "properties": {
                          "presenter_id": {
                            "type": "string",
                            "example": "amy-Aq6OmGZnMt"
                          },
                          "driver_id": {
                            "type": "string",
                            "example": "Vcq0R4a8F0"
                          },
                          "gender": {
                            "type": "string",
                            "description": "The gender of the presenter.\nmale / female / other"
                          },
                          "owner_id": {
                            "type": "string",
                            "description": "The owner id of the driver"
                          },
                          "preview_url": {
                            "type": "string",
                            "description": "A short gif, trimmed from the original driver in low resolution"
                          },
                          "modified_at": {
                            "type": "string",
                            "description": "Presenter modified at"
                          },
                          "video_url": {
                            "type": "string",
                            "description": "A short video, trimmed from the original driver in high resolution"
                          },
                          "thumbnail_url": {
                            "type": "string"
                          },
                          "image_url": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "presenter_id",
                          "gender",
                          "owner_id",
                          "preview_url",
                          "modified_at"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "presenters"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "summary": "Get a list of the presenters",
        "tags": [
          "Clips",
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "pagination - the amount of presenters to return",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "pagination - the pagination token from the previous response, default = 100",
            "in": "query",
            "name": "token",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/clips/presenters/{id}": {
      "get": {
        "operationId": "GetPresenterById",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "presenters": {
                      "items": {
                        "properties": {
                          "presenter_id": {
                            "type": "string",
                            "example": "amy-Aq6OmGZnMt"
                          },
                          "driver_id": {
                            "type": "string",
                            "example": "Vcq0R4a8F0"
                          },
                          "gender": {
                            "type": "string",
                            "description": "The gender of the presenter.\nmale / female / other"
                          },
                          "owner_id": {
                            "type": "string",
                            "description": "The owner id of the driver"
                          },
                          "preview_url": {
                            "type": "string",
                            "description": "A short gif, trimmed from the original driver in low resolution"
                          },
                          "modified_at": {
                            "type": "string",
                            "description": "Presenter modified at"
                          },
                          "video_url": {
                            "type": "string",
                            "description": "A short video, trimmed from the original driver in high resolution"
                          },
                          "thumbnail_url": {
                            "type": "string"
                          },
                          "image_url": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "presenter_id",
                          "gender",
                          "owner_id",
                          "preview_url",
                          "modified_at"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "presenters"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "summary": "Get presenter by id",
        "tags": [
          "Clips",
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/clips": {
      "post": {
        "operationId": "CreateClip",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the clip"
                    },
                    "object": {
                      "type": "string",
                      "enum": [
                        "clip"
                      ],
                      "nullable": false,
                      "description": "An identifier of this clip"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Clip creation time as iso-8601 string"
                    },
                    "status": {
                      "description": "The status of the clip",
                      "enum": [
                        "created",
                        "done",
                        "error",
                        "started",
                        "rejected"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created_at",
                    "status"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "clp_s4d-SZd2xs",
                      "object": "clip",
                      "created_at": "2020-09-03T13:56:54.995",
                      "status": "created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "BadRequestError",
                      "description": "invalid actor url"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "InsufficientCreditsError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "InsufficientCreditsError",
                      "description": "not enough credits"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "PermissionError",
                      "description": "user has no permission for stitch"
                    }
                  }
                }
              }
            }
          },
          "451": {
            "description": "ImageModerationError | CelebrityRecognizedError | TextModerationError | AudioModerationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "ImageModerationError",
                      "description": "Automatic content moderation - contact support if you would like to submit for manual review"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a clip",
        "tags": [
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "It is possible to add external API key for TTS generation, to access the API programmatically. The x-api-key-external header must be added, the required value format is {\"elevenlabs\": \"your-api-key\"}. Note: Your ElevenLabs quota consumes. Example: x-api-key-external: \"{\"elevenlabs\": \"ABCDEFGH123456\"}\"",
            "in": "header",
            "name": "x-api-key-external",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "presenter_id": {
                    "type": "string",
                    "description": "a selection from the list or provided driver ids.",
                    "example": "amy-Aq6OmGZnMt"
                  },
                  "driver_id": {
                    "type": "string",
                    "description": "a selection from the list or provided driver ids.\nIf not provided a driver video will be selected for you from the predefined drivers bank.",
                    "example": "Vcq0R4a8F0"
                  },
                  "script": {
                    "anyOf": [
                      {
                        "description": "Text script contains an input text to be spoken by the actor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "text"
                            ],
                            "nullable": false,
                            "description": "The type of the script."
                          },
                          "subtitles": {
                            "type": "boolean",
                            "description": "Should subtitles be created.",
                            "default": "false"
                          },
                          "provider": {
                            "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                            "anyOf": [
                              {
                                "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "microsoft"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                                    "example": "en-US-JennyNeural",
                                    "default": "en-US-JennyNeural"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options",
                                    "properties": {
                                      "style": {
                                        "type": "string",
                                        "description": "The style of the voice.\nAvailable styles change between voices."
                                      },
                                      "rate": {
                                        "type": "string",
                                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                        "example": "0.5"
                                      },
                                      "pitch": {
                                        "type": "string",
                                        "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                        "example": "+2st"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "description": "Afflorithmics provider details, contains the provider type and requested voice id, available for enterprise users.",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "afflorithmics"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.",
                                    "example": "abc123DEF456",
                                    "default": "abc123DEF456"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
                                    "properties": {
                                      "rate": {
                                        "type": "string",
                                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                        "example": "1.2",
                                        "default": "1"
                                      },
                                      "silencePadding": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                                      },
                                      "voiceIntelligence": {
                                        "type": "boolean",
                                        "description": "Flag to apply lexicographical text corrections"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "description": "Elevenlabs provider details, contains the provider type and requested voice id, available for premium users.",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "elevenlabs"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                                    "example": "21m00Tcm4TlvDq8ikWAM",
                                    "default": "21m00Tcm4TlvDq8ikWAM"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                                    "properties": {
                                      "stability": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "How stable the voice is and the randomness of each new generation.",
                                        "example": "0"
                                      },
                                      "similarity_boost": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                                        "example": "0"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "model_id": {
                                    "type": "string",
                                    "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                                    "example": "eleven_multilingual_v2",
                                    "default": "eleven_multilingual_v2"
                                  },
                                  "shouldAddDefaultOutputFormat": {
                                    "type": "boolean",
                                    "description": "Add default outputformat to the stream request if true"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "description": "Amazon provider details, contains the provider type and requested voice id",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "amazon"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/text-to-speech-providers",
                                    "example": "Joanna",
                                    "type": "string",
                                    "enum": [
                                      "Amy",
                                      "Aria",
                                      "Ayanda",
                                      "Bianca",
                                      "Brian",
                                      "Camila",
                                      "Emma",
                                      "Gabrielle",
                                      "Ivy",
                                      "Joanna",
                                      "Joey",
                                      "Justin",
                                      "Kendra",
                                      "Kevin",
                                      "Kimberly",
                                      "Lea",
                                      "Lucia",
                                      "Lupe",
                                      "Matthew",
                                      "Olivia",
                                      "Salli",
                                      "Seoyeon",
                                      "Takumi",
                                      "Vicki"
                                    ],
                                    "nullable": false
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "google"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.",
                                    "example": "he-IL-Wavenet-A",
                                    "default": "he-IL-Wavenet-A"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              }
                            ]
                          },
                          "input": {
                            "type": "string",
                            "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.",
                            "example": "This is an example text",
                            "maxLength": 40000,
                            "minLength": 3
                          },
                          "ssml": {
                            "type": "boolean",
                            "description": "Is the text provided in ssml form.",
                            "default": "false"
                          }
                        },
                        "required": [
                          "type",
                          "input"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "description": "Audio script contains an audio file url to be spoken by the actor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "audio"
                            ],
                            "nullable": false,
                            "description": "The type of the script."
                          },
                          "subtitles": {
                            "type": "boolean",
                            "description": "Should subtitles be created.",
                            "default": "false"
                          },
                          "audio_url": {
                            "description": "The URL of the audio file which will be used by the actor.\nFile size is limited to 15MB.\nAudio length is limited 5 minutes for clips and 10 minutes for talks.",
                            "type": "string",
                            "example": "https://path.to/audio.mp3",
                            "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
                          }
                        },
                        "required": [
                          "type",
                          "audio_url"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    ]
                  },
                  "config": {
                    "description": "Advanced configuration options.",
                    "properties": {
                      "logo": {
                        "anyOf": [
                          {
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                "pattern": "((https|s3):\\/\\/.+)"
                              },
                              "position": {
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "type": "array",
                                "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                "example": [
                                  0,
                                  500
                                ],
                                "minItems": 2,
                                "maxItems": 2
                              }
                            },
                            "required": [
                              "url",
                              "position"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      "result_format": {
                        "type": "string",
                        "enum": [
                          "mp4",
                          "gif",
                          "mov",
                          "webm"
                        ],
                        "description": "File format of the animated result",
                        "default": "mp4"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "created_by": {
                    "type": "string",
                    "description": "The user created the clip."
                  },
                  "presenter_config": {
                    "description": "Advanced presenter configuration options.",
                    "properties": {
                      "crop": {
                        "anyOf": [
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "wide"
                                ],
                                "nullable": false,
                                "description": "The type of the crop."
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          {
                            "description": "Custom crop",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "rectangle"
                                ],
                                "nullable": false,
                                "description": "The type of the crop."
                              },
                              "rectangle": {
                                "properties": {
                                  "bottom": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Bottom position.",
                                    "example": 1
                                  },
                                  "right": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Right position.",
                                    "example": 1
                                  },
                                  "left": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Left position.",
                                    "example": 0
                                  },
                                  "top": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Top position.",
                                    "example": 0
                                  }
                                },
                                "required": [
                                  "bottom",
                                  "right",
                                  "left",
                                  "top"
                                ],
                                "type": "object",
                                "description": "A set of numbers between 0 and 1 representing the top, left, right and bottom of the crop.\nEach number correlates to the distance from the top left corner of the image, relative the the image width.\nFor example, right: 0.75 means that the right side of the crop is 75% of the image width from the left side."
                              }
                            },
                            "required": [
                              "type",
                              "rectangle"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "background": {
                    "description": "Background color of the clip result",
                    "properties": {
                      "color": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean",
                            "enum": [
                              false
                            ]
                          }
                        ],
                        "description": "Background color of the animated result, or false to use transparent background in-case of webm result format.",
                        "example": "#47ffff",
                        "pattern": "^#[a-fA-F0-9]{6}$"
                      },
                      "source_url": {
                        "type": "string",
                        "description": "URL to image that will be used as background.",
                        "example": "https://path.to.image/"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "user_data": {
                    "description": "Non-sensitive custom data that will be added to the clip response and webhook.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500,
                    "pattern": "^(?!\\s*$).+$"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the clip"
                  },
                  "webhook": {
                    "description": "A webhook URL for sending the payload including animate details.\nIn a case of empty value, the webhook will not be triggered.",
                    "example": "https://host.domain.tld/to/webhook",
                    "type": "string",
                    "pattern": "^(?:https):\\/\\/[\\S]+$"
                  },
                  "result_url": {
                    "description": "The URL of the clip video, if not provided use default destination.",
                    "example": "https://path.to.directory/",
                    "type": "string",
                    "pattern": "(https|s3):\\/\\/.+"
                  },
                  "raw_result_url": {
                    "description": "The URL of the raw clip video, if not provided use default destination.",
                    "example": "https://path.to.directory/",
                    "type": "string",
                    "pattern": "(https|s3):\\/\\/.+"
                  },
                  "persist": {
                    "type": "boolean",
                    "description": "Whether the video should remain in storage without TTL."
                  }
                },
                "required": [
                  "presenter_id",
                  "script"
                ],
                "type": "object",
                "additionalProperties": false
              }
            }
          }
        }
      },
      "get": {
        "operationId": "GetClips",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "clips": {
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the object"
                          },
                          "owner_id": {
                            "type": "string",
                            "description": "Unique identifier of the owner that submitted the clip"
                          },
                          "audio_url": {
                            "description": "The URL of the audio file which will be used by the actor",
                            "example": "https://path.to/audio.mp3",
                            "type": "string",
                            "pattern": "^(?:https):\\/\\/[\\S]+$"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Clip creation time as iso-8601 string"
                          },
                          "created_by": {
                            "type": "string",
                            "description": "The user id that created the clip"
                          },
                          "modified_at": {
                            "type": "string",
                            "description": "last modified time as iso-8601 string"
                          },
                          "started_at": {
                            "type": "string",
                            "description": "Clip start time as iso-8601 string"
                          },
                          "completed_at": {
                            "type": "string",
                            "description": "Clip completion time as iso-8601 string"
                          },
                          "config": {
                            "description": "The configuration that used to process the clip",
                            "properties": {
                              "logo": {
                                "anyOf": [
                                  {
                                    "properties": {
                                      "url": {
                                        "type": "string",
                                        "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                        "pattern": "((https|s3):\\/\\/.+)"
                                      },
                                      "position": {
                                        "items": {
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "type": "array",
                                        "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                        "example": [
                                          0,
                                          500
                                        ],
                                        "minItems": 2,
                                        "maxItems": 2
                                      }
                                    },
                                    "required": [
                                      "url",
                                      "position"
                                    ],
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              },
                              "result_format": {
                                "type": "string",
                                "enum": [
                                  "mp4",
                                  "gif",
                                  "mov",
                                  "webm"
                                ],
                                "description": "File format of the animated result",
                                "default": "mp4"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "status": {
                            "description": "The status of the clip",
                            "enum": [
                              "created",
                              "done",
                              "error",
                              "started",
                              "rejected"
                            ],
                            "type": "string"
                          },
                          "result_url": {
                            "type": "string",
                            "description": "The result url of the clip"
                          },
                          "presenter_id": {
                            "type": "string",
                            "description": "The identity of the actor that is used in the clip"
                          },
                          "driver_id": {
                            "type": "string",
                            "description": "The identifier of the presenter's acting driver that is used in the clip"
                          },
                          "metadata": {
                            "description": "metadata that has been collected through the process",
                            "properties": {},
                            "type": "object"
                          },
                          "webhook": {
                            "type": "string",
                            "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the clip"
                          }
                        },
                        "required": [
                          "id",
                          "owner_id",
                          "created_at",
                          "modified_at",
                          "status"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "clips"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get clips",
        "tags": [
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "pagination - the amount of clips to return",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "pagination - the pagination token from the previous response, default = 100",
            "in": "query",
            "name": "token",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/clips/{id}": {
      "get": {
        "operationId": "GetClip",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the object"
                    },
                    "owner_id": {
                      "type": "string",
                      "description": "Unique identifier of the owner that submitted the clip"
                    },
                    "audio_url": {
                      "description": "The URL of the audio file which will be used by the actor",
                      "example": "https://path.to/audio.mp3",
                      "type": "string",
                      "pattern": "^(?:https):\\/\\/[\\S]+$"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Clip creation time as iso-8601 string"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "The user id that created the clip"
                    },
                    "modified_at": {
                      "type": "string",
                      "description": "last modified time as iso-8601 string"
                    },
                    "started_at": {
                      "type": "string",
                      "description": "Clip start time as iso-8601 string"
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Clip completion time as iso-8601 string"
                    },
                    "config": {
                      "description": "The configuration that used to process the clip",
                      "properties": {
                        "logo": {
                          "anyOf": [
                            {
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                  "pattern": "((https|s3):\\/\\/.+)"
                                },
                                "position": {
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "type": "array",
                                  "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                  "example": [
                                    0,
                                    500
                                  ],
                                  "minItems": 2,
                                  "maxItems": 2
                                }
                              },
                              "required": [
                                "url",
                                "position"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        },
                        "result_format": {
                          "type": "string",
                          "enum": [
                            "mp4",
                            "gif",
                            "mov",
                            "webm"
                          ],
                          "description": "File format of the animated result",
                          "default": "mp4"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "status": {
                      "description": "The status of the clip",
                      "enum": [
                        "created",
                        "done",
                        "error",
                        "started",
                        "rejected"
                      ],
                      "type": "string"
                    },
                    "result_url": {
                      "type": "string",
                      "description": "The result url of the clip"
                    },
                    "presenter_id": {
                      "type": "string",
                      "description": "The identity of the actor that is used in the clip"
                    },
                    "driver_id": {
                      "type": "string",
                      "description": "The identifier of the presenter's acting driver that is used in the clip"
                    },
                    "metadata": {
                      "description": "metadata that has been collected through the process",
                      "properties": {},
                      "type": "object"
                    },
                    "webhook": {
                      "type": "string",
                      "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the clip"
                    }
                  },
                  "required": [
                    "id",
                    "owner_id",
                    "created_at",
                    "modified_at",
                    "status"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFoundError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotFoundError",
                      "description": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a specific clip",
        "tags": [
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteClip",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the object"
                    },
                    "owner_id": {
                      "type": "string",
                      "description": "Unique identifier of the owner that submitted the clip"
                    },
                    "audio_url": {
                      "description": "The URL of the audio file which will be used by the actor",
                      "example": "https://path.to/audio.mp3",
                      "type": "string",
                      "pattern": "^(?:https):\\/\\/[\\S]+$"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Clip creation time as iso-8601 string"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "The user id that created the clip"
                    },
                    "modified_at": {
                      "type": "string",
                      "description": "last modified time as iso-8601 string"
                    },
                    "started_at": {
                      "type": "string",
                      "description": "Clip start time as iso-8601 string"
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "Clip completion time as iso-8601 string"
                    },
                    "config": {
                      "description": "The configuration that used to process the clip",
                      "properties": {
                        "logo": {
                          "anyOf": [
                            {
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                  "pattern": "((https|s3):\\/\\/.+)"
                                },
                                "position": {
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "type": "array",
                                  "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                  "example": [
                                    0,
                                    500
                                  ],
                                  "minItems": 2,
                                  "maxItems": 2
                                }
                              },
                              "required": [
                                "url",
                                "position"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        },
                        "result_format": {
                          "type": "string",
                          "enum": [
                            "mp4",
                            "gif",
                            "mov",
                            "webm"
                          ],
                          "description": "File format of the animated result",
                          "default": "mp4"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "status": {
                      "description": "The status of the clip",
                      "enum": [
                        "created",
                        "done",
                        "error",
                        "started",
                        "rejected"
                      ],
                      "type": "string"
                    },
                    "result_url": {
                      "type": "string",
                      "description": "The result url of the clip"
                    },
                    "presenter_id": {
                      "type": "string",
                      "description": "The identity of the actor that is used in the clip"
                    },
                    "driver_id": {
                      "type": "string",
                      "description": "The identifier of the presenter's acting driver that is used in the clip"
                    },
                    "metadata": {
                      "description": "metadata that has been collected through the process",
                      "properties": {},
                      "type": "object"
                    },
                    "webhook": {
                      "type": "string",
                      "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the clip"
                    }
                  },
                  "required": [
                    "id",
                    "owner_id",
                    "created_at",
                    "modified_at",
                    "status"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFoundError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotFoundError",
                      "description": "not found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "NotReadyError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotReadyError",
                      "description": "clip is in process, try again later"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a specific clip",
        "tags": [
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/clips/streams": {
      "post": {
        "operationId": "CreateStream1",
        "responses": {
          "201": {
            "description": "Created stream",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "session_id": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string",
                      "description": "Id of the stream - should be returned as *path parameter* in all streaming request to the same stream"
                    },
                    "jsep": {
                      "description": "Jsep offer object used to create a peer connection",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "offer"
                          ],
                          "nullable": false,
                          "description": "The session description object describes the initial proposal in an offer/answer exchange."
                        },
                        "sdp": {
                          "type": "string",
                          "description": "Describe the media communication sessions to accept the session the is being negotiated"
                        }
                      },
                      "required": [
                        "type",
                        "sdp"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "ice_servers": {
                      "items": {
                        "properties": {
                          "urls": {
                            "anyOf": [
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "URL of the server - can be multiple addresses"
                          },
                          "username": {
                            "type": "string",
                            "description": "Username for authentication"
                          },
                          "credential": {
                            "type": "string",
                            "description": "Credintials for secure connection to the server"
                          }
                        },
                        "required": [
                          "urls"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "description": "ICE servers used to create a peer connection"
                    }
                  },
                  "required": [
                    "id",
                    "jsep",
                    "ice_servers"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "DriverNotValidError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "BadRequestError",
                      "description": "invalid driver"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Initiates the creation of a new WebRTC connection to a browser peer. The endpoint returns the necessary information to set up and manage the connection.",
        "summary": "Create a new stream",
        "tags": [
          "Clips Streams",
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "user-agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "presenter_id": {
                    "type": "string",
                    "description": "ID of the selected presenter.",
                    "example": "rian-lZC6MmWfC1"
                  },
                  "driver_id": {
                    "type": "string",
                    "description": "ID of the selected driver.\nIf not provided a driver video will be selected for you from the predefined drivers bank.",
                    "example": "mXra4jY38i"
                  },
                  "compatibility_mode": {
                    "description": "Defines the video codec to be used in the stream.\nWhen set to on: VP8 will be used.\nWhen set to off: H264 will be used\nWhen set to auto the codec will be selected according to the browser.",
                    "type": "string",
                    "enum": [
                      "on",
                      "off",
                      "auto"
                    ]
                  },
                  "stream_warmup": {
                    "type": "boolean",
                    "description": "Whether to stream wamrup video on the connection.\nIf set to true, will stream a warmup video when connection is established.\nAt the end of the warmup video, a message containing \"stream/ready\" will be sent on the data channel.",
                    "default": "false"
                  },
                  "session_timeout": {
                    "type": "number",
                    "format": "double",
                    "description": "Maximum duration (in seconds) between messages before session times out.\nCan only be used with proper permissions",
                    "example": 180,
                    "maximum": 300
                  }
                },
                "required": [
                  "presenter_id"
                ],
                "type": "object",
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/clips/streams/{id}/sdp": {
      "post": {
        "operationId": "StartConnection1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "SessionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "SessionError",
                      "description": "missing or invalid session_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates the server with the SDP answer to the SDP offer received from the initial call to the `/streams` endpoint, during the offer/answer negotiation of a WebRTC connection.",
        "summary": "Start a stream",
        "tags": [
          "Clips Streams",
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "the stream identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "session_id": {
                    "type": "string",
                    "description": "Session identifier information, should be returned in the body of all streaming requests (from the response\nof the POST /streams)"
                  },
                  "answer": {
                    "description": "Jsep answer object used to create a peer connection",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "answer"
                        ],
                        "nullable": false,
                        "description": "The SDP contained in the sdp property is the definitive choice in the exchange. In other words, this session\ndescription describes the agreed-upon configuration, and is being sent to finalize negotiation."
                      },
                      "sdp": {
                        "type": "string",
                        "description": "Describe the media communication sessions to accept the session the is being negotiated"
                      }
                    },
                    "required": [
                      "type",
                      "sdp"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "answer"
                ],
                "type": "object",
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/clips/streams/{id}/ice": {
      "post": {
        "operationId": "AddIceCandidate1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "SessionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "SessionError",
                      "description": "missing or invalid session_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates the server with a WebRTC ICE candidate. If the candidate parameter is missing or a value of null is given the added ICE candidate is an \"end-of-candidates\" indicator.",
        "summary": "Submit network information",
        "tags": [
          "Clips Streams",
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "the stream identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "properties": {
                          "candidate": {
                            "type": "string",
                            "description": "A string representing the transport address for the candidate that can be used for connectivity checks.\nThe format of this address is a candidate-attribute as defined in RFC 5245. This string is empty (\"\") if the\nRTCIceCandidate is an \"end of candidates\" indicator."
                          },
                          "sdpMid": {
                            "type": "string",
                            "description": "A string specifying the candidate's media stream identification tag which uniquely identifies the media stream\nwithin the component with which the candidate is associated, or null if no such association exists."
                          },
                          "sdpMLineIndex": {
                            "type": "number",
                            "format": "double",
                            "description": "If not null, sdpMLineIndex indicates the zero-based index number of the media description (as defined in RFC\n4566) in the SDP with which the candidate is associated."
                          }
                        },
                        "required": [
                          "candidate",
                          "sdpMid",
                          "sdpMLineIndex"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {},
                        "type": "object"
                      }
                    ]
                  },
                  {
                    "properties": {
                      "session_id": {
                        "type": "string",
                        "description": "Session identifier information, should be returned in the body of all streaming requests (from the response\nof the POST /streams)"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/clips/streams/{id}": {
      "post": {
        "operationId": "CreateClipStream",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "duration": {
                      "type": "number",
                      "format": "double"
                    },
                    "session_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "duration",
                    "session_id",
                    "status"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "SessionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "SessionError",
                      "description": "missing or invalid session_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a clip stream",
        "tags": [
          "Clips Streams",
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "the stream identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "It is possible to add external API key for TTS generation, to access the API programmatically. The x-api-key-external header must be added, the required value format is {\"elevenlabs\": \"your-api-key\"}. Note: Your ElevenLabs quota consumes. Example: x-api-key-external: \"{\"elevenlabs\": \"ABCDEFGH123456\"}\"",
            "in": "header",
            "name": "x-api-key-external",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "session_id": {
                    "type": "string"
                  },
                  "presenter_id": {
                    "type": "string",
                    "description": "a selection from the list or provided driver ids.",
                    "example": "amy-Aq6OmGZnMt",
                    "deprecated": true
                  },
                  "driver_id": {
                    "type": "string",
                    "description": "a selection from the list or provided driver ids.\nIf not provided a driver video will be selected for you from the predefined drivers bank.",
                    "example": "a5PgMbeGQE",
                    "default": "a5PgMbeGQE",
                    "deprecated": true
                  },
                  "script": {
                    "anyOf": [
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "text"
                            ],
                            "nullable": false,
                            "description": "The type of the script."
                          },
                          "provider": {
                            "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                            "anyOf": [
                              {
                                "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "microsoft"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                                    "example": "en-US-JennyNeural",
                                    "default": "en-US-JennyNeural"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options",
                                    "properties": {
                                      "style": {
                                        "type": "string",
                                        "description": "The style of the voice.\nAvailable styles change between voices."
                                      },
                                      "rate": {
                                        "type": "string",
                                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                        "example": "0.5"
                                      },
                                      "pitch": {
                                        "type": "string",
                                        "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                        "example": "+2st"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "elevenlabs"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                                    "example": "21m00Tcm4TlvDq8ikWAM",
                                    "default": "21m00Tcm4TlvDq8ikWAM"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                                    "properties": {
                                      "stability": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "How stable the voice is and the randomness of each new generation.",
                                        "example": "0"
                                      },
                                      "similarity_boost": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                                        "example": "0"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "model_id": {
                                    "type": "string",
                                    "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                                    "example": "eleven_multilingual_v2",
                                    "default": "eleven_multilingual_v2"
                                  },
                                  "shouldAddDefaultOutputFormat": {
                                    "type": "boolean",
                                    "description": "Add default outputformat to the stream request if true"
                                  },
                                  "access": {
                                    "description": "The access level of the requested voice.",
                                    "enum": [
                                      "public",
                                      "premium",
                                      "private",
                                      "external-private"
                                    ],
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              }
                            ]
                          },
                          "input": {
                            "type": "string",
                            "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.",
                            "example": "This is an example text",
                            "maxLength": 40000,
                            "minLength": 3
                          },
                          "ssml": {
                            "type": "boolean",
                            "description": "Is the text provided in ssml form.",
                            "default": "false"
                          }
                        },
                        "required": [
                          "type",
                          "input"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "audio"
                            ],
                            "nullable": false,
                            "description": "The type of the script."
                          },
                          "audio_url": {
                            "description": "The URL of the audio file which will be used by the actor.\nFile size is limit to 15MB.",
                            "type": "string",
                            "example": "https://path.to/audio.mp3",
                            "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
                          }
                        },
                        "required": [
                          "type",
                          "audio_url"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "llm"
                            ],
                            "nullable": false
                          },
                          "provider": {
                            "anyOf": [
                              {
                                "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "microsoft"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                                    "example": "en-US-JennyNeural",
                                    "default": "en-US-JennyNeural"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options",
                                    "properties": {
                                      "style": {
                                        "type": "string",
                                        "description": "The style of the voice.\nAvailable styles change between voices."
                                      },
                                      "rate": {
                                        "type": "string",
                                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                        "example": "0.5"
                                      },
                                      "pitch": {
                                        "type": "string",
                                        "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                        "example": "+2st"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "elevenlabs"
                                    ],
                                    "type": "string"
                                  },
                                  "voice_id": {
                                    "type": "string",
                                    "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                                    "example": "21m00Tcm4TlvDq8ikWAM",
                                    "default": "21m00Tcm4TlvDq8ikWAM"
                                  },
                                  "voice_config": {
                                    "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                                    "properties": {
                                      "stability": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "How stable the voice is and the randomness of each new generation.",
                                        "example": "0"
                                      },
                                      "similarity_boost": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                                        "example": "0"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "model_id": {
                                    "type": "string",
                                    "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                                    "example": "eleven_multilingual_v2",
                                    "default": "eleven_multilingual_v2"
                                  },
                                  "shouldAddDefaultOutputFormat": {
                                    "type": "boolean",
                                    "description": "Add default outputformat to the stream request if true"
                                  },
                                  "access": {
                                    "description": "The access level of the requested voice.",
                                    "enum": [
                                      "public",
                                      "premium",
                                      "private",
                                      "external-private"
                                    ],
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string",
                                    "description": "Voice customization options. To save the language of the selected agent voice",
                                    "example": "English (United States)"
                                  }
                                },
                                "required": [
                                  "type",
                                  "voice_id"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              }
                            ]
                          },
                          "ssml": {
                            "type": "boolean"
                          },
                          "llm": {
                            "properties": {
                              "provider": {
                                "type": "string",
                                "enum": [
                                  "openai"
                                ],
                                "nullable": false
                              },
                              "messages": {
                                "items": {
                                  "properties": {
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "system",
                                        "user",
                                        "assistant"
                                      ]
                                    },
                                    "content": {
                                      "type": "string"
                                    },
                                    "created_at": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "content",
                                    "created_at"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "provider",
                              "messages"
                            ],
                            "type": "object"
                          },
                          "input": {
                            "type": "string"
                          },
                          "stream_audio": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "type",
                          "llm"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    ]
                  },
                  "config": {
                    "description": "Advanced configuration options.",
                    "properties": {
                      "logo": {
                        "anyOf": [
                          {
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                "pattern": "((https|s3):\\/\\/.+)"
                              },
                              "position": {
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "type": "array",
                                "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                "example": [
                                  0,
                                  500
                                ],
                                "minItems": 2,
                                "maxItems": 2
                              }
                            },
                            "required": [
                              "url",
                              "position"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      "result_format": {
                        "type": "string",
                        "enum": [
                          "mp4",
                          "gif",
                          "mov"
                        ],
                        "description": "File format of the animated result",
                        "default": "mp4"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "created_by": {
                    "type": "string",
                    "description": "The user created the clip."
                  },
                  "presenter_config": {
                    "description": "Advanced presenter configuration options.",
                    "properties": {
                      "crop": {
                        "anyOf": [
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "wide"
                                ],
                                "nullable": false,
                                "description": "The type of the crop."
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          {
                            "description": "Custom crop",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "rectangle"
                                ],
                                "nullable": false,
                                "description": "The type of the crop."
                              },
                              "rectangle": {
                                "properties": {
                                  "bottom": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Bottom position.",
                                    "example": 1
                                  },
                                  "right": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Right position.",
                                    "example": 1
                                  },
                                  "left": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Left position.",
                                    "example": 0
                                  },
                                  "top": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Top position.",
                                    "example": 0
                                  }
                                },
                                "required": [
                                  "bottom",
                                  "right",
                                  "left",
                                  "top"
                                ],
                                "type": "object",
                                "description": "A set of numbers between 0 and 1 representing the top, left, right and bottom of the crop.\nEach number correlates to the distance from the top left corner of the image, relative the the image width.\nFor example, right: 0.75 means that the right side of the crop is 75% of the image width from the left side."
                              }
                            },
                            "required": [
                              "type",
                              "rectangle"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "background": {
                    "description": "Background color of the clip result",
                    "properties": {
                      "color": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "boolean",
                            "enum": [
                              false
                            ]
                          }
                        ],
                        "description": "Background color of the animated result, or false to use transparent background in-case of webm result format.",
                        "example": "#47ffff",
                        "pattern": "^#[a-fA-F0-9]{6}$"
                      },
                      "source_url": {
                        "type": "string",
                        "description": "URL to image that will be used as background.",
                        "example": "https://path.to.image/"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "user_data": {
                    "description": "Non-sensitive custom data that will be added to the clip response and webhook.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500,
                    "pattern": "^(?!\\s*$).+$"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the clip"
                  },
                  "result_url": {
                    "description": "The URL of the clip video, if not provided use default destination.",
                    "example": "https://path.to.directory/",
                    "type": "string",
                    "pattern": "(https|s3):\\/\\/.+"
                  },
                  "raw_result_url": {
                    "description": "The URL of the raw clip video, if not provided use default destination.",
                    "example": "https://path.to.directory/",
                    "type": "string",
                    "pattern": "(https|s3):\\/\\/.+"
                  },
                  "metadata": {
                    "description": "Metadata passed to the clips worker"
                  }
                },
                "required": [
                  "script"
                ],
                "type": "object",
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DeleteStream1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "SessionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "SessionError",
                      "description": "missing or invalid session_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotFound",
                      "description": "stream_id doesn't exits or not owened by the user"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a clip stream",
        "tags": [
          "Clips Streams",
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "the stream identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "session_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/clips/presenters/{id}/drivers": {
      "get": {
        "operationId": "GetPresenterDriversById",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "clips_drivers": {
                      "items": {
                        "properties": {
                          "presenter_id": {
                            "type": "string",
                            "example": "amy-Aq6OmGZnMt"
                          },
                          "driver_id": {
                            "type": "string",
                            "example": "Vcq0R4a8F0"
                          },
                          "gender": {
                            "type": "string",
                            "description": "The gender of the presenter.\nmale / female / other"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Creation time as iso-8601 string"
                          },
                          "owner_id": {
                            "type": "string",
                            "description": "The owner id of the driver"
                          },
                          "modified_at": {
                            "type": "string",
                            "description": "Last modified time as iso-8601 string"
                          },
                          "width": {
                            "type": "number",
                            "format": "double",
                            "description": "The video width in pixels"
                          },
                          "height": {
                            "type": "number",
                            "format": "double",
                            "description": "The video height in pixels"
                          },
                          "driver_image_url": {
                            "type": "string",
                            "description": "High resolution image of the driver image"
                          },
                          "thumbnail_url": {
                            "type": "string",
                            "description": "A low resolution image representing the presenter in the video"
                          },
                          "video_url": {
                            "type": "string",
                            "description": "A short video, trimmed from the original driver in high resolution"
                          },
                          "preview_url": {
                            "type": "string",
                            "description": "A short gif, trimmed from the original driver in low resolution"
                          },
                          "chroma_key": {
                            "type": "string"
                          },
                          "chroma_key_similarity": {
                            "type": "number",
                            "format": "double"
                          },
                          "name": {
                            "type": "string",
                            "description": "A user friendly name for the driver",
                            "example": "Amy"
                          }
                        },
                        "required": [
                          "presenter_id",
                          "driver_id",
                          "gender",
                          "created_at",
                          "owner_id",
                          "modified_at",
                          "width",
                          "height",
                          "driver_image_url",
                          "thumbnail_url",
                          "video_url",
                          "preview_url"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "clips_drivers"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "summary": "Get presenter drivers by id",
        "tags": [
          "Clips",
          "Clips"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/animations": {
      "post": {
        "operationId": "CreateAnimation",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the animation"
                    },
                    "object": {
                      "type": "string",
                      "description": "An identifier of this animation"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "The user id of the user that created the animation"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Animation creation time as iso-8601 string"
                    },
                    "status": {
                      "description": "The status of the animation",
                      "enum": [
                        "created",
                        "done",
                        "error",
                        "started"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created_by",
                    "created_at",
                    "status"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "52907745-7672-470e-a803-a2f8feb52944",
                      "object": "animation",
                      "created_at": "2020-09-03T13:56:54.995",
                      "created_by": "995",
                      "status": "created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequestError | InvalidFileSizeError | InvalidImageResolutionError | ConfigError | InvalidFaceError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "BadRequestError",
                      "description": "invalid source url"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "InsufficientCreditsError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "InsufficientCreditsError",
                      "description": "not enough credits"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "PermissionError",
                      "description": "user has no permission for stitch"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create an animation",
        "tags": [
          "Animations"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "source_url": {
                    "description": "The URL of the source image to be animated by the driver video. Image type of jpg|jpeg|tiff|png|bmp",
                    "example": "https://path.to/image.jpg",
                    "type": "string",
                    "pattern": "(https|s3):.*\\.(?:jpg|jpeg|tiff|png|bmp|JPG|JPEG|TIFF|PNG|BMP)"
                  },
                  "driver_url": {
                    "description": "The URL of the driver video to drive the animation, if not provided a driver video will be selected for you from the predefined DriversBank",
                    "example": "bank://nostalgia/",
                    "type": "string",
                    "pattern": "(https|s3|bank):\\/\\/.+"
                  },
                  "result_url": {
                    "description": "The URL of the animation video, if not provided use default destination\nSupports S3 Signed URLs",
                    "example": "https://path.to.directory/movie.mp4",
                    "type": "string",
                    "pattern": "(https|s3):\\/\\/.+"
                  },
                  "face": {
                    "description": "the face to animate - otherwise detects the dominant face",
                    "example": {
                      "top_left": [
                        0,
                        0
                      ],
                      "size": 512
                    },
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Size of the square side",
                        "minimum": 0
                      },
                      "top_left": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "Top left location of the face in the frame - can be negative",
                        "minItems": 2,
                        "maxItems": 2
                      },
                      "overlap": {
                        "enum": [
                          "NO",
                          "PARTIAL",
                          "YES",
                          "UNKNOWN"
                        ],
                        "type": "string"
                      },
                      "face_id": {
                        "type": "string"
                      },
                      "detect_confidence": {
                        "type": "number",
                        "format": "double"
                      },
                      "sharpness": {
                        "type": "number",
                        "format": "double"
                      },
                      "face_occluded": {
                        "type": "boolean"
                      },
                      "face_occluded_confidence": {
                        "type": "number",
                        "format": "double"
                      },
                      "detection": {
                        "properties": {
                          "top": {
                            "type": "number",
                            "format": "double"
                          },
                          "left": {
                            "type": "number",
                            "format": "double"
                          },
                          "bottom": {
                            "type": "number",
                            "format": "double"
                          },
                          "right": {
                            "type": "number",
                            "format": "double"
                          }
                        },
                        "required": [
                          "top",
                          "left",
                          "bottom",
                          "right"
                        ],
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "required": [
                      "size",
                      "top_left"
                    ],
                    "type": "object",
                    "additionalProperties": true
                  },
                  "webhook": {
                    "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered",
                    "example": "https://host.domain.tld/to/webhook",
                    "type": "string",
                    "pattern": "^(?:https):\\/\\/[\\S]+$"
                  },
                  "config": {
                    "description": "Advanced configuration option",
                    "properties": {
                      "logo": {
                        "anyOf": [
                          {
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                "pattern": "((https|s3):\\/\\/.+)"
                              },
                              "position": {
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "type": "array",
                                "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                "example": [
                                  0,
                                  500
                                ],
                                "minItems": 2,
                                "maxItems": 2
                              }
                            },
                            "required": [
                              "url",
                              "position"
                            ],
                            "type": "object",
                            "additionalProperties": true
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      "overlay": {
                        "description": "URL to overlay video to add on the animated result",
                        "type": "string",
                        "example": "https://path.to.directory/movie.mp4",
                        "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
                      },
                      "mute": {
                        "type": "boolean",
                        "description": "mutes the driver sound in the animated video result, defaults to true"
                      },
                      "stitch": {
                        "type": "boolean",
                        "description": "stitch back the animated result to the original image"
                      },
                      "max_animated_faces": {
                        "type": "number",
                        "format": "double",
                        "description": "the amount of faces to animate when stitch: true. Defaults to 5",
                        "minimum": 1,
                        "maximum": 5
                      },
                      "result_format": {
                        "description": "the file format of the animated video result",
                        "type": "string",
                        "enum": [
                          "mp4",
                          "gif",
                          "mov"
                        ]
                      }
                    },
                    "type": "object",
                    "additionalProperties": true
                  },
                  "user_data": {
                    "description": "Non-sensitive custom data that will be added to the animation response and webhook.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500,
                    "pattern": "^(?!\\s*$).+$"
                  }
                },
                "required": [
                  "source_url"
                ],
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        }
      },
      "get": {
        "operationId": "GetAnimations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "animations": {
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the object"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Unique identifier of the user that submitted the animation"
                          },
                          "source_url": {
                            "type": "string",
                            "description": "The URL of the source image to be animated by the driver video. Image type of .jpg | .png"
                          },
                          "driver_url": {
                            "type": "string",
                            "description": "The URL of the driver video to drive the animation, if not provided a driver video will be selected for you from the predefined DriversBank"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Animation creation time as iso-8601 string"
                          },
                          "created_by": {
                            "type": "string",
                            "description": "The user id of the user that created the animation"
                          },
                          "started_at": {
                            "type": "string",
                            "description": "Animation start time as iso-8601 string"
                          },
                          "modified_at": {
                            "type": "string",
                            "description": "last modified time as iso-8601 string"
                          },
                          "status": {
                            "description": "The status of the animation",
                            "enum": [
                              "created",
                              "done",
                              "error",
                              "started"
                            ],
                            "type": "string"
                          },
                          "result_url": {
                            "type": "string",
                            "description": "s3 uri to the resulting video"
                          },
                          "metadata": {
                            "description": "metadata that has been collected through the process",
                            "properties": {},
                            "type": "object"
                          },
                          "error": {
                            "description": "The error that failed the animation",
                            "anyOf": [
                              {
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "default": "DriverError"
                                  },
                                  "description": {
                                    "type": "string",
                                    "default": "Driver provided is invalid or cannot be loaded"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": true
                              },
                              {
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "default": "LogoError"
                                  },
                                  "description": {
                                    "type": "string",
                                    "default": "Could not load logo image or invalid format or position"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": true
                              },
                              {
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "default": "SourceError"
                                  },
                                  "description": {
                                    "type": "string",
                                    "default": "Could not load source image or invalid format"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": true
                              },
                              {
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "default": "FaceError"
                                  },
                                  "description": {
                                    "type": "string",
                                    "default": "face not detected"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": true
                              },
                              {
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "default": "VideoEnhanceError"
                                  },
                                  "description": {
                                    "type": "string",
                                    "default": "Failed to create enhanced video (logo, subsample)"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": true
                              },
                              {
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "default": "UnknownError"
                                  },
                                  "description": {
                                    "type": "string",
                                    "default": "Unknown internal error"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": true
                              }
                            ]
                          },
                          "webhook": {
                            "type": "string",
                            "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                          },
                          "config": {
                            "description": "The configuration that used to process the animation",
                            "properties": {
                              "logo": {
                                "anyOf": [
                                  {
                                    "properties": {
                                      "url": {
                                        "type": "string",
                                        "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                        "pattern": "((https|s3):\\/\\/.+)"
                                      },
                                      "position": {
                                        "items": {
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "type": "array",
                                        "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                        "example": [
                                          0,
                                          500
                                        ],
                                        "minItems": 2,
                                        "maxItems": 2
                                      }
                                    },
                                    "required": [
                                      "url",
                                      "position"
                                    ],
                                    "type": "object",
                                    "additionalProperties": true
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              },
                              "overlay": {
                                "description": "URL to overlay video to add on the animated result",
                                "type": "string",
                                "example": "https://path.to.directory/movie.mp4",
                                "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
                              },
                              "mute": {
                                "type": "boolean",
                                "description": "mutes the driver sound in the animated video result, defaults to true"
                              },
                              "stitch": {
                                "type": "boolean",
                                "description": "stitch back the animated result to the original image"
                              },
                              "max_animated_faces": {
                                "type": "number",
                                "format": "double",
                                "description": "the amount of faces to animate when stitch: true. Defaults to 5",
                                "minimum": 1,
                                "maximum": 5
                              },
                              "result_format": {
                                "description": "the file format of the animated video result",
                                "type": "string",
                                "enum": [
                                  "mp4",
                                  "gif",
                                  "mov"
                                ]
                              }
                            },
                            "type": "object",
                            "additionalProperties": true
                          }
                        },
                        "required": [
                          "id",
                          "user_id",
                          "source_url",
                          "created_at",
                          "modified_at",
                          "status"
                        ],
                        "type": "object",
                        "additionalProperties": true
                      },
                      "type": "array"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "animations"
                  ],
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get animations",
        "tags": [
          "Animations"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "description": "pagination - the amount of animations to return",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "pagination - the pagination token from the previous response, default = 100",
            "in": "query",
            "name": "token",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/animations/tasks": {
      "post": {
        "operationId": "CreateTask",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the animation"
                    },
                    "object": {
                      "type": "string",
                      "description": "An identifier of this animation"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "The user id of the user that created the animation"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Animation creation time as iso-8601 string"
                    },
                    "status": {
                      "description": "The status of the animation",
                      "enum": [
                        "created",
                        "done",
                        "error",
                        "started"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created_by",
                    "created_at",
                    "status"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "52907745-7672-470e-a803-a2f8feb52944",
                      "object": "animation",
                      "created_at": "2020-09-03T13:56:54.995",
                      "created_by": "995",
                      "status": "created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequestError | InvalidFileSizeError | InvalidImageResolutionError | ConfigError | InvalidFaceError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "BadRequestError",
                      "description": "invalid source url"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "InsufficientCreditsError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "InsufficientCreditsError",
                      "description": "not enough credits"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "PermissionError",
                      "description": "user has no permission for stitch"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create an animation task",
        "tags": [
          "Animations"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "source_url": {
                    "description": "The URL of the source image to be animated by the driver video. Image type of jpg|jpeg|tiff|png|bmp",
                    "example": "https://path.to/image.jpg",
                    "type": "string",
                    "pattern": "(https|s3):.*\\.(?:jpg|jpeg|tiff|png|bmp|JPG|JPEG|TIFF|PNG|BMP)"
                  },
                  "driver_url": {
                    "description": "The URL of the driver video to drive the animation, if not provided a driver video will be selected for you from the predefined DriversBank",
                    "example": "bank://nostalgia/",
                    "type": "string",
                    "pattern": "(https|s3|bank):\\/\\/.+"
                  },
                  "result_url": {
                    "description": "The URL of the animation video, if not provided use default destination\nSupports S3 Signed URLs",
                    "example": "https://path.to.directory/movie.mp4",
                    "type": "string",
                    "pattern": "(https|s3):\\/\\/.+"
                  },
                  "face": {
                    "description": "the face to animate - otherwise detects the dominant face",
                    "example": {
                      "top_left": [
                        0,
                        0
                      ],
                      "size": 512
                    },
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Size of the square side",
                        "minimum": 0
                      },
                      "top_left": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "Top left location of the face in the frame - can be negative",
                        "minItems": 2,
                        "maxItems": 2
                      },
                      "overlap": {
                        "enum": [
                          "NO",
                          "PARTIAL",
                          "YES",
                          "UNKNOWN"
                        ],
                        "type": "string"
                      },
                      "face_id": {
                        "type": "string"
                      },
                      "detect_confidence": {
                        "type": "number",
                        "format": "double"
                      },
                      "sharpness": {
                        "type": "number",
                        "format": "double"
                      },
                      "face_occluded": {
                        "type": "boolean"
                      },
                      "face_occluded_confidence": {
                        "type": "number",
                        "format": "double"
                      },
                      "detection": {
                        "properties": {
                          "top": {
                            "type": "number",
                            "format": "double"
                          },
                          "left": {
                            "type": "number",
                            "format": "double"
                          },
                          "bottom": {
                            "type": "number",
                            "format": "double"
                          },
                          "right": {
                            "type": "number",
                            "format": "double"
                          }
                        },
                        "required": [
                          "top",
                          "left",
                          "bottom",
                          "right"
                        ],
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "required": [
                      "size",
                      "top_left"
                    ],
                    "type": "object",
                    "additionalProperties": true
                  },
                  "webhook": {
                    "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered",
                    "example": "https://host.domain.tld/to/webhook",
                    "type": "string",
                    "pattern": "^(?:https):\\/\\/[\\S]+$"
                  },
                  "config": {
                    "description": "Advanced configuration option",
                    "properties": {
                      "logo": {
                        "anyOf": [
                          {
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                "pattern": "((https|s3):\\/\\/.+)"
                              },
                              "position": {
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "type": "array",
                                "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                "example": [
                                  0,
                                  500
                                ],
                                "minItems": 2,
                                "maxItems": 2
                              }
                            },
                            "required": [
                              "url",
                              "position"
                            ],
                            "type": "object",
                            "additionalProperties": true
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      "overlay": {
                        "description": "URL to overlay video to add on the animated result",
                        "type": "string",
                        "example": "https://path.to.directory/movie.mp4",
                        "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
                      },
                      "mute": {
                        "type": "boolean",
                        "description": "mutes the driver sound in the animated video result, defaults to true"
                      },
                      "stitch": {
                        "type": "boolean",
                        "description": "stitch back the animated result to the original image"
                      },
                      "max_animated_faces": {
                        "type": "number",
                        "format": "double",
                        "description": "the amount of faces to animate when stitch: true. Defaults to 5",
                        "minimum": 1,
                        "maximum": 5
                      },
                      "result_format": {
                        "description": "the file format of the animated video result",
                        "type": "string",
                        "enum": [
                          "mp4",
                          "gif",
                          "mov"
                        ]
                      }
                    },
                    "type": "object",
                    "additionalProperties": true
                  },
                  "user_data": {
                    "description": "Non-sensitive custom data that will be added to the animation response and webhook.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500,
                    "pattern": "^(?!\\s*$).+$"
                  }
                },
                "required": [
                  "source_url"
                ],
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/animations/{id}": {
      "get": {
        "operationId": "GetAnimation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the object"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Unique identifier of the user that submitted the animation"
                    },
                    "source_url": {
                      "type": "string",
                      "description": "The URL of the source image to be animated by the driver video. Image type of .jpg | .png"
                    },
                    "driver_url": {
                      "type": "string",
                      "description": "The URL of the driver video to drive the animation, if not provided a driver video will be selected for you from the predefined DriversBank"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Animation creation time as iso-8601 string"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "The user id of the user that created the animation"
                    },
                    "started_at": {
                      "type": "string",
                      "description": "Animation start time as iso-8601 string"
                    },
                    "modified_at": {
                      "type": "string",
                      "description": "last modified time as iso-8601 string"
                    },
                    "status": {
                      "description": "The status of the animation",
                      "enum": [
                        "created",
                        "done",
                        "error",
                        "started"
                      ],
                      "type": "string"
                    },
                    "result_url": {
                      "type": "string",
                      "description": "s3 uri to the resulting video"
                    },
                    "metadata": {
                      "description": "metadata that has been collected through the process",
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "description": "The error that failed the animation",
                      "anyOf": [
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "DriverError"
                            },
                            "description": {
                              "type": "string",
                              "default": "Driver provided is invalid or cannot be loaded"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "LogoError"
                            },
                            "description": {
                              "type": "string",
                              "default": "Could not load logo image or invalid format or position"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "SourceError"
                            },
                            "description": {
                              "type": "string",
                              "default": "Could not load source image or invalid format"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "FaceError"
                            },
                            "description": {
                              "type": "string",
                              "default": "face not detected"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "VideoEnhanceError"
                            },
                            "description": {
                              "type": "string",
                              "default": "Failed to create enhanced video (logo, subsample)"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "UnknownError"
                            },
                            "description": {
                              "type": "string",
                              "default": "Unknown internal error"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        }
                      ]
                    },
                    "webhook": {
                      "type": "string",
                      "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                    },
                    "config": {
                      "description": "The configuration that used to process the animation",
                      "properties": {
                        "logo": {
                          "anyOf": [
                            {
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                  "pattern": "((https|s3):\\/\\/.+)"
                                },
                                "position": {
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "type": "array",
                                  "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                  "example": [
                                    0,
                                    500
                                  ],
                                  "minItems": 2,
                                  "maxItems": 2
                                }
                              },
                              "required": [
                                "url",
                                "position"
                              ],
                              "type": "object",
                              "additionalProperties": true
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        },
                        "overlay": {
                          "description": "URL to overlay video to add on the animated result",
                          "type": "string",
                          "example": "https://path.to.directory/movie.mp4",
                          "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
                        },
                        "mute": {
                          "type": "boolean",
                          "description": "mutes the driver sound in the animated video result, defaults to true"
                        },
                        "stitch": {
                          "type": "boolean",
                          "description": "stitch back the animated result to the original image"
                        },
                        "max_animated_faces": {
                          "type": "number",
                          "format": "double",
                          "description": "the amount of faces to animate when stitch: true. Defaults to 5",
                          "minimum": 1,
                          "maximum": 5
                        },
                        "result_format": {
                          "description": "the file format of the animated video result",
                          "type": "string",
                          "enum": [
                            "mp4",
                            "gif",
                            "mov"
                          ]
                        }
                      },
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "required": [
                    "id",
                    "user_id",
                    "source_url",
                    "created_at",
                    "modified_at",
                    "status"
                  ],
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFoundError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotFoundError",
                      "description": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get a specific animation",
        "tags": [
          "Animations"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteAnimation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the object"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Unique identifier of the user that submitted the animation"
                    },
                    "source_url": {
                      "type": "string",
                      "description": "The URL of the source image to be animated by the driver video. Image type of .jpg | .png"
                    },
                    "driver_url": {
                      "type": "string",
                      "description": "The URL of the driver video to drive the animation, if not provided a driver video will be selected for you from the predefined DriversBank"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Animation creation time as iso-8601 string"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "The user id of the user that created the animation"
                    },
                    "started_at": {
                      "type": "string",
                      "description": "Animation start time as iso-8601 string"
                    },
                    "modified_at": {
                      "type": "string",
                      "description": "last modified time as iso-8601 string"
                    },
                    "status": {
                      "description": "The status of the animation",
                      "enum": [
                        "created",
                        "done",
                        "error",
                        "started"
                      ],
                      "type": "string"
                    },
                    "result_url": {
                      "type": "string",
                      "description": "s3 uri to the resulting video"
                    },
                    "metadata": {
                      "description": "metadata that has been collected through the process",
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "description": "The error that failed the animation",
                      "anyOf": [
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "DriverError"
                            },
                            "description": {
                              "type": "string",
                              "default": "Driver provided is invalid or cannot be loaded"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "LogoError"
                            },
                            "description": {
                              "type": "string",
                              "default": "Could not load logo image or invalid format or position"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "SourceError"
                            },
                            "description": {
                              "type": "string",
                              "default": "Could not load source image or invalid format"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "FaceError"
                            },
                            "description": {
                              "type": "string",
                              "default": "face not detected"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "VideoEnhanceError"
                            },
                            "description": {
                              "type": "string",
                              "default": "Failed to create enhanced video (logo, subsample)"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "UnknownError"
                            },
                            "description": {
                              "type": "string",
                              "default": "Unknown internal error"
                            }
                          },
                          "type": "object",
                          "additionalProperties": true
                        }
                      ]
                    },
                    "webhook": {
                      "type": "string",
                      "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                    },
                    "config": {
                      "description": "The configuration that used to process the animation",
                      "properties": {
                        "logo": {
                          "anyOf": [
                            {
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                                  "pattern": "((https|s3):\\/\\/.+)"
                                },
                                "position": {
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "type": "array",
                                  "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                                  "example": [
                                    0,
                                    500
                                  ],
                                  "minItems": 2,
                                  "maxItems": 2
                                }
                              },
                              "required": [
                                "url",
                                "position"
                              ],
                              "type": "object",
                              "additionalProperties": true
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        },
                        "overlay": {
                          "description": "URL to overlay video to add on the animated result",
                          "type": "string",
                          "example": "https://path.to.directory/movie.mp4",
                          "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
                        },
                        "mute": {
                          "type": "boolean",
                          "description": "mutes the driver sound in the animated video result, defaults to true"
                        },
                        "stitch": {
                          "type": "boolean",
                          "description": "stitch back the animated result to the original image"
                        },
                        "max_animated_faces": {
                          "type": "number",
                          "format": "double",
                          "description": "the amount of faces to animate when stitch: true. Defaults to 5",
                          "minimum": 1,
                          "maximum": 5
                        },
                        "result_format": {
                          "description": "the file format of the animated video result",
                          "type": "string",
                          "enum": [
                            "mp4",
                            "gif",
                            "mov"
                          ]
                        }
                      },
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "required": [
                    "id",
                    "user_id",
                    "source_url",
                    "created_at",
                    "modified_at",
                    "status"
                  ],
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "401": {
            "description": "AuthorizationError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "AuthorizationError",
                      "description": "user unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NotFoundError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotFoundError",
                      "description": "not found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "NotReadyError",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "kind": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {}
                  },
                  "required": [
                    "kind",
                    "description"
                  ],
                  "type": "object",
                  "additionalProperties": true
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "kind": "NotReadyError",
                      "description": "animation is in process, try again later"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a specific animation",
        "tags": [
          "Animations"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "TalkStatus": {
        "enum": [
          "created",
          "done",
          "error",
          "started",
          "rejected"
        ],
        "type": "string"
      },
      "CreateTalkResponseDto": {
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the talk"
          },
          "object": {
            "type": "string",
            "description": "An identifier of this talk"
          },
          "created_by": {
            "type": "string",
            "description": "The user id of the user that created the talk"
          },
          "created_at": {
            "type": "string",
            "description": "Talk creation time as iso-8601 string"
          },
          "status": {
            "description": "The status of the talk",
            "enum": [
              "created",
              "done",
              "error",
              "started",
              "rejected"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "object",
          "created_by",
          "created_at",
          "status"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "JsonError": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "details": {}
        },
        "required": [
          "kind",
          "description"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ImagePath": {
        "type": "string",
        "example": "https://path.to.directory/image.jpg",
        "pattern": "(https|s3):.*\\.(?:jpg|jpeg|png|JPG|JPEG|PNG)"
      },
      "DriverUrl": {
        "type": "string",
        "pattern": "(https|s3|bank):\\/\\/.+"
      },
      "Providers.Microsoft": {
        "enum": [
          "microsoft"
        ],
        "type": "string"
      },
      "VoiceConfigMicrosoft": {
        "properties": {
          "style": {
            "type": "string",
            "description": "The style of the voice.\nAvailable styles change between voices."
          },
          "rate": {
            "type": "string",
            "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
            "example": "0.5"
          },
          "pitch": {
            "type": "string",
            "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
            "example": "+2st"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "Microsoft_tts_provider": {
        "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
        "properties": {
          "type": {
            "enum": [
              "microsoft"
            ],
            "type": "string"
          },
          "voice_id": {
            "type": "string",
            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference//tts-microsoft",
            "example": "en-US-JennyNeural",
            "default": "en-US-JennyNeural"
          },
          "voice_config": {
            "description": "Voice customization options",
            "properties": {
              "style": {
                "type": "string",
                "description": "The style of the voice.\nAvailable styles change between voices."
              },
              "rate": {
                "type": "string",
                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                "example": "0.5"
              },
              "pitch": {
                "type": "string",
                "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                "example": "+2st"
              }
            },
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Providers.Elevenlabs": {
        "enum": [
          "elevenlabs"
        ],
        "type": "string"
      },
      "VoiceConfigElevenlabs": {
        "properties": {
          "stability": {
            "type": "number",
            "format": "double",
            "description": "The stability of the voice.",
            "example": "0.5",
            "minimum": 0,
            "maximum": 1
          },
          "similarity_boost": {
            "type": "number",
            "format": "double",
            "description": "The similarity boost of the voice.",
            "example": "0.75",
            "minimum": 0,
            "maximum": 1
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "Elevenlabs_tts_provider": {
        "description": "Elevenlabs provider details, contains the provider type and requested voice id",
        "properties": {
          "type": {
            "enum": [
              "elevenlabs"
            ],
            "type": "string"
          },
          "voice_id": {
            "type": "string",
            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://api.elevenlabs.io/v1/voices",
            "example": "21m00Tcm4TlvDq8ikWAM",
            "default": "21m00Tcm4TlvDq8ikWAM"
          },
          "voice_config": {
            "description": "Voice customization options",
            "properties": {
              "stability": {
                "type": "number",
                "format": "double",
                "description": "The stability of the voice.",
                "example": "0.5",
                "minimum": 0,
                "maximum": 1
              },
              "similarity_boost": {
                "type": "number",
                "format": "double",
                "description": "The similarity boost of the voice.",
                "example": "0.75",
                "minimum": 0,
                "maximum": 1
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "model_id": {
            "type": "string",
            "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
            "example": "eleven_multilingual_v2",
            "default": "eleven_multilingual_v2"
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Providers.Amazon": {
        "enum": [
          "amazon"
        ],
        "type": "string"
      },
      "VoiceIdsAmazon": {
        "type": "string",
        "enum": [
          "Amy",
          "Aria",
          "Ayanda",
          "Bianca",
          "Brian",
          "Camila",
          "Emma",
          "Gabrielle",
          "Ivy",
          "Joanna",
          "Joey",
          "Justin",
          "Kendra",
          "Kevin",
          "Kimberly",
          "Lea",
          "Lucia",
          "Lupe",
          "Matthew",
          "Olivia",
          "Salli",
          "Seoyeon",
          "Takumi",
          "Vicki"
        ],
        "nullable": false
      },
      "Amazon_tts_provider": {
        "description": "Amazon provider details, contains the provider type and requested voice id",
        "properties": {
          "type": {
            "enum": [
              "amazon"
            ],
            "type": "string"
          },
          "voice_id": {
            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/tts-amazon",
            "example": "Joanna",
            "type": "string",
            "enum": [
              "Amy",
              "Aria",
              "Ayanda",
              "Bianca",
              "Brian",
              "Camila",
              "Emma",
              "Gabrielle",
              "Ivy",
              "Joanna",
              "Joey",
              "Justin",
              "Kendra",
              "Kevin",
              "Kimberly",
              "Lea",
              "Lucia",
              "Lupe",
              "Matthew",
              "Olivia",
              "Salli",
              "Seoyeon",
              "Takumi",
              "Vicki"
            ],
            "nullable": false
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Providers.Afflorithmics": {
        "enum": [
          "afflorithmics"
        ],
        "type": "string"
      },
      "VoiceConfigAfflorithmics": {
        "properties": {
          "rate": {
            "type": "string",
            "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
            "example": "1.2",
            "default": "1"
          },
          "silencePadding": {
            "type": "number",
            "format": "double",
            "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
          },
          "voiceIntelligence": {
            "type": "boolean",
            "description": "Flag to apply lexicographical text corrections"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "Afflorithmics_tts_provider": {
        "description": "Afflorithmics provider details, contains the provider type and requested voice id",
        "properties": {
          "type": {
            "enum": [
              "afflorithmics"
            ],
            "type": "string"
          },
          "voice_id": {
            "type": "string",
            "description": "The voice_id from the list of available voices.",
            "example": "1a2Bc4dE5fGh",
            "default": "1a2Bc4dE5fGh"
          },
          "voice_config": {
            "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
            "properties": {
              "rate": {
                "type": "string",
                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                "example": "1.2",
                "default": "1"
              },
              "silencePadding": {
                "type": "number",
                "format": "double",
                "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
              },
              "voiceIntelligence": {
                "type": "boolean",
                "description": "Flag to apply lexicographical text corrections"
              }
            },
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Providers.Google": {
        "enum": [
          "google"
        ],
        "type": "string"
      },
      "Google_tts_provider": {
        "properties": {
          "type": {
            "enum": [
              "google"
            ],
            "type": "string"
          },
          "voice_id": {
            "type": "string",
            "description": "The voice_id from the list of available voices.",
            "example": "he-IL-Wavenet-A",
            "default": "he-IL-Wavenet-A"
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "TextToSpeechProviders": {
        "anyOf": [
          {
            "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
            "properties": {
              "type": {
                "enum": [
                  "microsoft"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference//tts-microsoft",
                "example": "en-US-JennyNeural",
                "default": "en-US-JennyNeural"
              },
              "voice_config": {
                "description": "Voice customization options",
                "properties": {
                  "style": {
                    "type": "string",
                    "description": "The style of the voice.\nAvailable styles change between voices."
                  },
                  "rate": {
                    "type": "string",
                    "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                    "example": "0.5"
                  },
                  "pitch": {
                    "type": "string",
                    "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                    "example": "+2st"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "description": "Elevenlabs provider details, contains the provider type and requested voice id",
            "properties": {
              "type": {
                "enum": [
                  "elevenlabs"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://api.elevenlabs.io/v1/voices",
                "example": "21m00Tcm4TlvDq8ikWAM",
                "default": "21m00Tcm4TlvDq8ikWAM"
              },
              "voice_config": {
                "description": "Voice customization options",
                "properties": {
                  "stability": {
                    "type": "number",
                    "format": "double",
                    "description": "The stability of the voice.",
                    "example": "0.5",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "similarity_boost": {
                    "type": "number",
                    "format": "double",
                    "description": "The similarity boost of the voice.",
                    "example": "0.75",
                    "minimum": 0,
                    "maximum": 1
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "model_id": {
                "type": "string",
                "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                "example": "eleven_multilingual_v2",
                "default": "eleven_multilingual_v2"
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "description": "Amazon provider details, contains the provider type and requested voice id",
            "properties": {
              "type": {
                "enum": [
                  "amazon"
                ],
                "type": "string"
              },
              "voice_id": {
                "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/tts-amazon",
                "example": "Joanna",
                "type": "string",
                "enum": [
                  "Amy",
                  "Aria",
                  "Ayanda",
                  "Bianca",
                  "Brian",
                  "Camila",
                  "Emma",
                  "Gabrielle",
                  "Ivy",
                  "Joanna",
                  "Joey",
                  "Justin",
                  "Kendra",
                  "Kevin",
                  "Kimberly",
                  "Lea",
                  "Lucia",
                  "Lupe",
                  "Matthew",
                  "Olivia",
                  "Salli",
                  "Seoyeon",
                  "Takumi",
                  "Vicki"
                ],
                "nullable": false
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "description": "Afflorithmics provider details, contains the provider type and requested voice id",
            "properties": {
              "type": {
                "enum": [
                  "afflorithmics"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices.",
                "example": "1a2Bc4dE5fGh",
                "default": "1a2Bc4dE5fGh"
              },
              "voice_config": {
                "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
                "properties": {
                  "rate": {
                    "type": "string",
                    "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                    "example": "1.2",
                    "default": "1"
                  },
                  "silencePadding": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                  },
                  "voiceIntelligence": {
                    "type": "boolean",
                    "description": "Flag to apply lexicographical text corrections"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "properties": {
              "type": {
                "enum": [
                  "google"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices.",
                "example": "he-IL-Wavenet-A",
                "default": "he-IL-Wavenet-A"
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ScriptType": {
        "type": "string",
        "enum": [
          "text",
          "audio"
        ]
      },
      "TextScript": {
        "description": "Text script contains an input text to be spoken by the actor",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "text"
            ],
            "nullable": false,
            "description": "The type of the script."
          },
          "subtitles": {
            "type": "boolean",
            "description": "Should subtitles be generated for this script",
            "default": "false"
          },
          "provider": {
            "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
            "anyOf": [
              {
                "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                "properties": {
                  "type": {
                    "enum": [
                      "microsoft"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference//tts-microsoft",
                    "example": "en-US-JennyNeural",
                    "default": "en-US-JennyNeural"
                  },
                  "voice_config": {
                    "description": "Voice customization options",
                    "properties": {
                      "style": {
                        "type": "string",
                        "description": "The style of the voice.\nAvailable styles change between voices."
                      },
                      "rate": {
                        "type": "string",
                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                        "example": "0.5"
                      },
                      "pitch": {
                        "type": "string",
                        "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                        "example": "+2st"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "description": "Elevenlabs provider details, contains the provider type and requested voice id",
                "properties": {
                  "type": {
                    "enum": [
                      "elevenlabs"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://api.elevenlabs.io/v1/voices",
                    "example": "21m00Tcm4TlvDq8ikWAM",
                    "default": "21m00Tcm4TlvDq8ikWAM"
                  },
                  "voice_config": {
                    "description": "Voice customization options",
                    "properties": {
                      "stability": {
                        "type": "number",
                        "format": "double",
                        "description": "The stability of the voice.",
                        "example": "0.5",
                        "minimum": 0,
                        "maximum": 1
                      },
                      "similarity_boost": {
                        "type": "number",
                        "format": "double",
                        "description": "The similarity boost of the voice.",
                        "example": "0.75",
                        "minimum": 0,
                        "maximum": 1
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "model_id": {
                    "type": "string",
                    "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                    "example": "eleven_multilingual_v2",
                    "default": "eleven_multilingual_v2"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "description": "Amazon provider details, contains the provider type and requested voice id",
                "properties": {
                  "type": {
                    "enum": [
                      "amazon"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/tts-amazon",
                    "example": "Joanna",
                    "type": "string",
                    "enum": [
                      "Amy",
                      "Aria",
                      "Ayanda",
                      "Bianca",
                      "Brian",
                      "Camila",
                      "Emma",
                      "Gabrielle",
                      "Ivy",
                      "Joanna",
                      "Joey",
                      "Justin",
                      "Kendra",
                      "Kevin",
                      "Kimberly",
                      "Lea",
                      "Lucia",
                      "Lupe",
                      "Matthew",
                      "Olivia",
                      "Salli",
                      "Seoyeon",
                      "Takumi",
                      "Vicki"
                    ],
                    "nullable": false
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "description": "Afflorithmics provider details, contains the provider type and requested voice id",
                "properties": {
                  "type": {
                    "enum": [
                      "afflorithmics"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices.",
                    "example": "1a2Bc4dE5fGh",
                    "default": "1a2Bc4dE5fGh"
                  },
                  "voice_config": {
                    "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
                    "properties": {
                      "rate": {
                        "type": "string",
                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                        "example": "1.2",
                        "default": "1"
                      },
                      "silencePadding": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                      },
                      "voiceIntelligence": {
                        "type": "boolean",
                        "description": "Flag to apply lexicographical text corrections"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "google"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices.",
                    "example": "he-IL-Wavenet-A",
                    "default": "he-IL-Wavenet-A"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              }
            ]
          },
          "input": {
            "type": "string",
            "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.\naudio duration is furhter limited in streaming to `01:30` minutes",
            "example": "This is an example text",
            "maxLength": 40000,
            "minLength": 3
          },
          "ssml": {
            "type": "boolean",
            "description": "Is the text provided in `SSML` form"
          }
        },
        "required": [
          "type",
          "input"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "AudioUrl": {
        "type": "string",
        "example": "https://path.to/audio.mp3",
        "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
      },
      "AudioScript": {
        "description": "Audio script contains an audio file url to be spoken by the actor",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "audio"
            ],
            "nullable": false,
            "description": "The type of the script."
          },
          "subtitles": {
            "type": "boolean",
            "description": "Should subtitles be generated for this script",
            "default": "false"
          },
          "audio_url": {
            "description": "The URL of the audio file which will be used by the actor.\nFile size is limit to 15MB.",
            "type": "string",
            "example": "https://path.to/audio.mp3",
            "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
          },
          "reduce_noise": {
            "type": "boolean",
            "description": "Use noise reduction to improve sync quality",
            "default": "false"
          }
        },
        "required": [
          "type",
          "audio_url"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Script": {
        "anyOf": [
          {
            "description": "Text script contains an input text to be spoken by the actor",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "text"
                ],
                "nullable": false,
                "description": "The type of the script."
              },
              "subtitles": {
                "type": "boolean",
                "description": "Should subtitles be generated for this script",
                "default": "false"
              },
              "provider": {
                "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                "anyOf": [
                  {
                    "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                    "properties": {
                      "type": {
                        "enum": [
                          "microsoft"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference//tts-microsoft",
                        "example": "en-US-JennyNeural",
                        "default": "en-US-JennyNeural"
                      },
                      "voice_config": {
                        "description": "Voice customization options",
                        "properties": {
                          "style": {
                            "type": "string",
                            "description": "The style of the voice.\nAvailable styles change between voices."
                          },
                          "rate": {
                            "type": "string",
                            "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                            "example": "0.5"
                          },
                          "pitch": {
                            "type": "string",
                            "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                            "example": "+2st"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "description": "Elevenlabs provider details, contains the provider type and requested voice id",
                    "properties": {
                      "type": {
                        "enum": [
                          "elevenlabs"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://api.elevenlabs.io/v1/voices",
                        "example": "21m00Tcm4TlvDq8ikWAM",
                        "default": "21m00Tcm4TlvDq8ikWAM"
                      },
                      "voice_config": {
                        "description": "Voice customization options",
                        "properties": {
                          "stability": {
                            "type": "number",
                            "format": "double",
                            "description": "The stability of the voice.",
                            "example": "0.5",
                            "minimum": 0,
                            "maximum": 1
                          },
                          "similarity_boost": {
                            "type": "number",
                            "format": "double",
                            "description": "The similarity boost of the voice.",
                            "example": "0.75",
                            "minimum": 0,
                            "maximum": 1
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "model_id": {
                        "type": "string",
                        "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                        "example": "eleven_multilingual_v2",
                        "default": "eleven_multilingual_v2"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "description": "Amazon provider details, contains the provider type and requested voice id",
                    "properties": {
                      "type": {
                        "enum": [
                          "amazon"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/tts-amazon",
                        "example": "Joanna",
                        "type": "string",
                        "enum": [
                          "Amy",
                          "Aria",
                          "Ayanda",
                          "Bianca",
                          "Brian",
                          "Camila",
                          "Emma",
                          "Gabrielle",
                          "Ivy",
                          "Joanna",
                          "Joey",
                          "Justin",
                          "Kendra",
                          "Kevin",
                          "Kimberly",
                          "Lea",
                          "Lucia",
                          "Lupe",
                          "Matthew",
                          "Olivia",
                          "Salli",
                          "Seoyeon",
                          "Takumi",
                          "Vicki"
                        ],
                        "nullable": false
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "description": "Afflorithmics provider details, contains the provider type and requested voice id",
                    "properties": {
                      "type": {
                        "enum": [
                          "afflorithmics"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices.",
                        "example": "1a2Bc4dE5fGh",
                        "default": "1a2Bc4dE5fGh"
                      },
                      "voice_config": {
                        "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
                        "properties": {
                          "rate": {
                            "type": "string",
                            "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                            "example": "1.2",
                            "default": "1"
                          },
                          "silencePadding": {
                            "type": "number",
                            "format": "double",
                            "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                          },
                          "voiceIntelligence": {
                            "type": "boolean",
                            "description": "Flag to apply lexicographical text corrections"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "properties": {
                      "type": {
                        "enum": [
                          "google"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices.",
                        "example": "he-IL-Wavenet-A",
                        "default": "he-IL-Wavenet-A"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                ]
              },
              "input": {
                "type": "string",
                "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.\naudio duration is furhter limited in streaming to `01:30` minutes",
                "example": "This is an example text",
                "maxLength": 40000,
                "minLength": 3
              },
              "ssml": {
                "type": "boolean",
                "description": "Is the text provided in `SSML` form"
              }
            },
            "required": [
              "type",
              "input"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "description": "Audio script contains an audio file url to be spoken by the actor",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "audio"
                ],
                "nullable": false,
                "description": "The type of the script."
              },
              "subtitles": {
                "type": "boolean",
                "description": "Should subtitles be generated for this script",
                "default": "false"
              },
              "audio_url": {
                "description": "The URL of the audio file which will be used by the actor.\nFile size is limit to 15MB.",
                "type": "string",
                "example": "https://path.to/audio.mp3",
                "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
              },
              "reduce_noise": {
                "type": "boolean",
                "description": "Use noise reduction to improve sync quality",
                "default": "false"
              }
            },
            "required": [
              "type",
              "audio_url"
            ],
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "Logo": {
        "properties": {
          "url": {
            "type": "string",
            "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
            "pattern": "((https|s3):\\/\\/.+)"
          },
          "position": {
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "type": "array",
            "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
            "example": [
              0,
              500
            ],
            "minItems": 2,
            "maxItems": 2
          }
        },
        "required": [
          "url",
          "position"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ResultFormat": {
        "type": "string",
        "enum": [
          "mp4",
          "gif",
          "mov"
        ]
      },
      "Expression": {
        "enum": [
          "neutral",
          "happy",
          "serious",
          "surprise"
        ],
        "type": "string"
      },
      "TimedExpression": {
        "properties": {
          "start_frame": {
            "type": "number",
            "format": "double",
            "description": "The frame number for the expression start point.",
            "minimum": 0
          },
          "expression": {
            "description": "The expression to use",
            "enum": [
              "neutral",
              "happy",
              "serious",
              "surprise"
            ],
            "type": "string"
          },
          "intensity": {
            "type": "number",
            "format": "double",
            "description": "Controls the intensity you want for this expression (between 0 no expression, 1 maximum)",
            "minimum": 0,
            "maximum": 1
          }
        },
        "required": [
          "start_frame",
          "expression",
          "intensity"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ExpressionConfig": {
        "properties": {
          "expressions": {
            "items": {
              "properties": {
                "start_frame": {
                  "type": "number",
                  "format": "double",
                  "description": "The frame number for the expression start point.",
                  "minimum": 0
                },
                "expression": {
                  "description": "The expression to use",
                  "enum": [
                    "neutral",
                    "happy",
                    "serious",
                    "surprise"
                  ],
                  "type": "string"
                },
                "intensity": {
                  "type": "number",
                  "format": "double",
                  "description": "Controls the intensity you want for this expression (between 0 no expression, 1 maximum)",
                  "minimum": 0,
                  "maximum": 1
                }
              },
              "required": [
                "start_frame",
                "expression",
                "intensity"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "type": "array",
            "description": "List of TimedExpression to use"
          },
          "transition_frames": {
            "type": "number",
            "format": "double",
            "description": "Number of frames to use for the transition between expressions",
            "minimum": 0
          }
        },
        "required": [
          "expressions"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "TalksConfig": {
        "properties": {
          "logo": {
            "anyOf": [
              {
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                    "pattern": "((https|s3):\\/\\/.+)"
                  },
                  "position": {
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "type": "array",
                    "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                    "example": [
                      0,
                      500
                    ],
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "required": [
                  "url",
                  "position"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "type": "boolean"
              }
            ]
          },
          "align_driver": {
            "type": "boolean",
            "description": "Auto crops the driver face, ignored if using drivers bank"
          },
          "align_expand_factor": {
            "type": "number",
            "format": "double",
            "description": "The amount of expansion % used for face cropping"
          },
          "auto_match": {
            "type": "boolean",
            "description": "Finds the best anchor match for the source in driver video"
          },
          "motion_factor": {
            "type": "number",
            "format": "double",
            "description": "Amplifies or damps the animation movements"
          },
          "normalization_factor": {
            "type": "number",
            "format": "double",
            "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
            "minimum": 0,
            "maximum": 1
          },
          "sharpen": {
            "type": "boolean",
            "description": "Sharpen results."
          },
          "stitch": {
            "type": "boolean",
            "description": "Stitch back the animated result to the original image"
          },
          "result_format": {
            "description": "File format of the animated result",
            "type": "string",
            "enum": [
              "mp4",
              "gif",
              "mov"
            ]
          },
          "fluent": {
            "type": "boolean",
            "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
            "default": "false"
          },
          "pad_audio": {
            "type": "number",
            "format": "double",
            "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
            "default": "0.0",
            "minimum": 0,
            "maximum": 60
          },
          "driver_expressions": {
            "description": "timed expressions for animation, the current expression is not cleared until a new expression is defined.\nPossible expressions include `happy`, `neutral` and more.",
            "properties": {
              "expressions": {
                "items": {
                  "properties": {
                    "start_frame": {
                      "type": "number",
                      "format": "double",
                      "description": "The frame number for the expression start point.",
                      "minimum": 0
                    },
                    "expression": {
                      "description": "The expression to use",
                      "enum": [
                        "neutral",
                        "happy",
                        "serious",
                        "surprise"
                      ],
                      "type": "string"
                    },
                    "intensity": {
                      "type": "number",
                      "format": "double",
                      "description": "Controls the intensity you want for this expression (between 0 no expression, 1 maximum)",
                      "minimum": 0,
                      "maximum": 1
                    }
                  },
                  "required": [
                    "start_frame",
                    "expression",
                    "intensity"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array",
                "description": "List of TimedExpression to use"
              },
              "transition_frames": {
                "type": "number",
                "format": "double",
                "description": "Number of frames to use for the transition between expressions",
                "minimum": 0
              }
            },
            "required": [
              "expressions"
            ],
            "type": "object",
            "additionalProperties": false
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "UserData": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500,
        "pattern": "^(?!\\s*$).+$"
      },
      "SecuredUrl": {
        "type": "string",
        "pattern": "^(?:https):\\/\\/[\\S]+$"
      },
      "RemoteUrl": {
        "type": "string",
        "example": "https://path.to.directory/movie.mp4",
        "pattern": "(https|s3):\\/\\/.+"
      },
      "OverlapKind": {
        "enum": [
          "NO",
          "PARTIAL",
          "YES",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "Rect": {
        "properties": {
          "top": {
            "type": "number",
            "format": "double"
          },
          "left": {
            "type": "number",
            "format": "double"
          },
          "bottom": {
            "type": "number",
            "format": "double"
          },
          "right": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "top",
          "left",
          "bottom",
          "right"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "FaceSquareDto": {
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "Size of the square side",
            "minimum": 0
          },
          "top_left": {
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "type": "array",
            "description": "Top left location of the face in the frame - can be negative",
            "minItems": 2,
            "maxItems": 2
          },
          "overlap": {
            "enum": [
              "NO",
              "PARTIAL",
              "YES",
              "UNKNOWN"
            ],
            "type": "string"
          },
          "face_id": {
            "type": "string"
          },
          "detect_confidence": {
            "type": "number",
            "format": "double"
          },
          "sharpness": {
            "type": "number",
            "format": "double"
          },
          "face_occluded": {
            "type": "boolean"
          },
          "face_occluded_confidence": {
            "type": "number",
            "format": "double"
          },
          "detection": {
            "properties": {
              "top": {
                "type": "number",
                "format": "double"
              },
              "left": {
                "type": "number",
                "format": "double"
              },
              "bottom": {
                "type": "number",
                "format": "double"
              },
              "right": {
                "type": "number",
                "format": "double"
              }
            },
            "required": [
              "top",
              "left",
              "bottom",
              "right"
            ],
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "size",
          "top_left"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CreateTalkRequest": {
        "properties": {
          "source_url": {
            "description": "The URL of the source image to be animated by the driver video, or a selection from the list of provided\nstudio actors.",
            "type": "string",
            "example": "https://path.to.directory/image.jpg",
            "pattern": "(https|s3):.*\\.(?:jpg|jpeg|png|JPG|JPEG|PNG)"
          },
          "driver_url": {
            "description": "The URL of the driver video to drive the talk, or a selection from the list or provided drivers\nIf not provided a driver video will be selected for you from the predefined drivers bank",
            "example": "bank://natural",
            "type": "string",
            "pattern": "(https|s3|bank):\\/\\/.+"
          },
          "script": {
            "anyOf": [
              {
                "description": "Text script contains an input text to be spoken by the actor",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "text"
                    ],
                    "nullable": false,
                    "description": "The type of the script."
                  },
                  "subtitles": {
                    "type": "boolean",
                    "description": "Should subtitles be generated for this script",
                    "default": "false"
                  },
                  "provider": {
                    "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                    "anyOf": [
                      {
                        "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                        "properties": {
                          "type": {
                            "enum": [
                              "microsoft"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference//tts-microsoft",
                            "example": "en-US-JennyNeural",
                            "default": "en-US-JennyNeural"
                          },
                          "voice_config": {
                            "description": "Voice customization options",
                            "properties": {
                              "style": {
                                "type": "string",
                                "description": "The style of the voice.\nAvailable styles change between voices."
                              },
                              "rate": {
                                "type": "string",
                                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                "example": "0.5"
                              },
                              "pitch": {
                                "type": "string",
                                "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                "example": "+2st"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "description": "Elevenlabs provider details, contains the provider type and requested voice id",
                        "properties": {
                          "type": {
                            "enum": [
                              "elevenlabs"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://api.elevenlabs.io/v1/voices",
                            "example": "21m00Tcm4TlvDq8ikWAM",
                            "default": "21m00Tcm4TlvDq8ikWAM"
                          },
                          "voice_config": {
                            "description": "Voice customization options",
                            "properties": {
                              "stability": {
                                "type": "number",
                                "format": "double",
                                "description": "The stability of the voice.",
                                "example": "0.5",
                                "minimum": 0,
                                "maximum": 1
                              },
                              "similarity_boost": {
                                "type": "number",
                                "format": "double",
                                "description": "The similarity boost of the voice.",
                                "example": "0.75",
                                "minimum": 0,
                                "maximum": 1
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "model_id": {
                            "type": "string",
                            "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                            "example": "eleven_multilingual_v2",
                            "default": "eleven_multilingual_v2"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "description": "Amazon provider details, contains the provider type and requested voice id",
                        "properties": {
                          "type": {
                            "enum": [
                              "amazon"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/tts-amazon",
                            "example": "Joanna",
                            "type": "string",
                            "enum": [
                              "Amy",
                              "Aria",
                              "Ayanda",
                              "Bianca",
                              "Brian",
                              "Camila",
                              "Emma",
                              "Gabrielle",
                              "Ivy",
                              "Joanna",
                              "Joey",
                              "Justin",
                              "Kendra",
                              "Kevin",
                              "Kimberly",
                              "Lea",
                              "Lucia",
                              "Lupe",
                              "Matthew",
                              "Olivia",
                              "Salli",
                              "Seoyeon",
                              "Takumi",
                              "Vicki"
                            ],
                            "nullable": false
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "description": "Afflorithmics provider details, contains the provider type and requested voice id",
                        "properties": {
                          "type": {
                            "enum": [
                              "afflorithmics"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.",
                            "example": "1a2Bc4dE5fGh",
                            "default": "1a2Bc4dE5fGh"
                          },
                          "voice_config": {
                            "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
                            "properties": {
                              "rate": {
                                "type": "string",
                                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                "example": "1.2",
                                "default": "1"
                              },
                              "silencePadding": {
                                "type": "number",
                                "format": "double",
                                "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                              },
                              "voiceIntelligence": {
                                "type": "boolean",
                                "description": "Flag to apply lexicographical text corrections"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "google"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.",
                            "example": "he-IL-Wavenet-A",
                            "default": "he-IL-Wavenet-A"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    ]
                  },
                  "input": {
                    "type": "string",
                    "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.\naudio duration is furhter limited in streaming to `01:30` minutes",
                    "example": "This is an example text",
                    "maxLength": 40000,
                    "minLength": 3
                  },
                  "ssml": {
                    "type": "boolean",
                    "description": "Is the text provided in `SSML` form"
                  }
                },
                "required": [
                  "type",
                  "input"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "description": "Audio script contains an audio file url to be spoken by the actor",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "audio"
                    ],
                    "nullable": false,
                    "description": "The type of the script."
                  },
                  "subtitles": {
                    "type": "boolean",
                    "description": "Should subtitles be generated for this script",
                    "default": "false"
                  },
                  "audio_url": {
                    "description": "The URL of the audio file which will be used by the actor.\nFile size is limit to 15MB.",
                    "type": "string",
                    "example": "https://path.to/audio.mp3",
                    "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
                  },
                  "reduce_noise": {
                    "type": "boolean",
                    "description": "Use noise reduction to improve sync quality",
                    "default": "false"
                  }
                },
                "required": [
                  "type",
                  "audio_url"
                ],
                "type": "object",
                "additionalProperties": false
              }
            ]
          },
          "config": {
            "description": "Advanced configuration options",
            "properties": {
              "logo": {
                "anyOf": [
                  {
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                        "pattern": "((https|s3):\\/\\/.+)"
                      },
                      "position": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                        "example": [
                          0,
                          500
                        ],
                        "minItems": 2,
                        "maxItems": 2
                      }
                    },
                    "required": [
                      "url",
                      "position"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "align_driver": {
                "type": "boolean",
                "description": "Auto crops the driver face, ignored if using drivers bank"
              },
              "align_expand_factor": {
                "type": "number",
                "format": "double",
                "description": "The amount of expansion % used for face cropping"
              },
              "auto_match": {
                "type": "boolean",
                "description": "Finds the best anchor match for the source in driver video"
              },
              "motion_factor": {
                "type": "number",
                "format": "double",
                "description": "Amplifies or damps the animation movements"
              },
              "normalization_factor": {
                "type": "number",
                "format": "double",
                "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
                "minimum": 0,
                "maximum": 1
              },
              "sharpen": {
                "type": "boolean",
                "description": "Sharpen results."
              },
              "stitch": {
                "type": "boolean",
                "description": "Stitch back the animated result to the original image"
              },
              "result_format": {
                "description": "File format of the animated result",
                "type": "string",
                "enum": [
                  "mp4",
                  "gif",
                  "mov"
                ]
              },
              "fluent": {
                "type": "boolean",
                "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
                "default": "false"
              },
              "pad_audio": {
                "type": "number",
                "format": "double",
                "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
                "default": "0.0",
                "minimum": 0,
                "maximum": 60
              },
              "driver_expressions": {
                "description": "timed expressions for animation, the current expression is not cleared until a new expression is defined.\nPossible expressions include `happy`, `neutral` and more.",
                "properties": {
                  "expressions": {
                    "items": {
                      "properties": {
                        "start_frame": {
                          "type": "number",
                          "format": "double",
                          "description": "The frame number for the expression start point.",
                          "minimum": 0
                        },
                        "expression": {
                          "description": "The expression to use",
                          "enum": [
                            "neutral",
                            "happy",
                            "serious",
                            "surprise"
                          ],
                          "type": "string"
                        },
                        "intensity": {
                          "type": "number",
                          "format": "double",
                          "description": "Controls the intensity you want for this expression (between 0 no expression, 1 maximum)",
                          "minimum": 0,
                          "maximum": 1
                        }
                      },
                      "required": [
                        "start_frame",
                        "expression",
                        "intensity"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array",
                    "description": "List of TimedExpression to use"
                  },
                  "transition_frames": {
                    "type": "number",
                    "format": "double",
                    "description": "Number of frames to use for the transition between expressions",
                    "minimum": 0
                  }
                },
                "required": [
                  "expressions"
                ],
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "user_data": {
            "description": "Non-sensitive custom data that will be added to the talk response and webhook",
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "pattern": "^(?!\\s*$).+$"
          },
          "name": {
            "type": "string",
            "description": "The name of the talk video"
          },
          "webhook": {
            "description": "A webhook URL for sending the payload including animate details\nIn a case of empty value, the webhook will not be triggered",
            "example": "https://host.domain.tld/to/webhook",
            "type": "string",
            "pattern": "^(?:https):\\/\\/[\\S]+$"
          },
          "result_url": {
            "description": "The URL of the talk video, if not provided use default destination.",
            "example": "https://path.to.directory/",
            "type": "string",
            "pattern": "(https|s3):\\/\\/.+"
          },
          "face": {
            "description": "The face to animate - otherwise detects the face automatically",
            "example": {
              "top_left": [
                0,
                0
              ],
              "size": 512
            },
            "properties": {
              "size": {
                "type": "integer",
                "format": "int32",
                "description": "Size of the square side",
                "minimum": 0
              },
              "top_left": {
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "type": "array",
                "description": "Top left location of the face in the frame - can be negative",
                "minItems": 2,
                "maxItems": 2
              },
              "overlap": {
                "enum": [
                  "NO",
                  "PARTIAL",
                  "YES",
                  "UNKNOWN"
                ],
                "type": "string"
              },
              "face_id": {
                "type": "string"
              },
              "detect_confidence": {
                "type": "number",
                "format": "double"
              },
              "sharpness": {
                "type": "number",
                "format": "double"
              },
              "face_occluded": {
                "type": "boolean"
              },
              "face_occluded_confidence": {
                "type": "number",
                "format": "double"
              },
              "detection": {
                "properties": {
                  "top": {
                    "type": "number",
                    "format": "double"
                  },
                  "left": {
                    "type": "number",
                    "format": "double"
                  },
                  "bottom": {
                    "type": "number",
                    "format": "double"
                  },
                  "right": {
                    "type": "number",
                    "format": "double"
                  }
                },
                "required": [
                  "top",
                  "left",
                  "bottom",
                  "right"
                ],
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "size",
              "top_left"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "persist": {
            "type": "boolean",
            "description": "Whether the video should remain in storage without TTL."
          }
        },
        "required": [
          "source_url",
          "script"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Record_string.any_": {
        "properties": {},
        "type": "object",
        "description": "Construct a type with a set of properties K of type T"
      },
      "GetTalkDto": {
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object"
          },
          "user_id": {
            "type": "string",
            "description": "Unique identifier of the user that submitted the talk"
          },
          "source_url": {
            "type": "string",
            "description": "The URL of the source image to be animated by the driver video. Image type of .jpg | .png"
          },
          "driver_url": {
            "type": "string",
            "description": "The URL of the driver video to drive the talk, if not provided a driver video will be selected for you from the predefined DriversBank"
          },
          "created_at": {
            "type": "string",
            "description": "Talk creation time as iso-8601 string"
          },
          "created_by": {
            "type": "string",
            "description": "The user id of the user that created the talk"
          },
          "audio_url": {
            "description": "The URL of the audio file which will be used by the actor",
            "example": "https://path.to/audio.mp3",
            "type": "string",
            "pattern": "^(?:https):\\/\\/[\\S]+$"
          },
          "started_at": {
            "type": "string",
            "description": "Talk start time as iso-8601 string"
          },
          "modified_at": {
            "type": "string",
            "description": "last modified time as iso-8601 string"
          },
          "status": {
            "description": "The status of the talk",
            "enum": [
              "created",
              "done",
              "error",
              "started",
              "rejected"
            ],
            "type": "string"
          },
          "result_url": {
            "type": "string",
            "description": "s3 uri to the resulting video"
          },
          "metadata": {
            "description": "metadata that has been collected through the process",
            "properties": {},
            "type": "object"
          },
          "webhook": {
            "type": "string",
            "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
          },
          "config": {
            "description": "The configuration that used to process the talk",
            "properties": {
              "logo": {
                "anyOf": [
                  {
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                        "pattern": "((https|s3):\\/\\/.+)"
                      },
                      "position": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                        "example": [
                          0,
                          500
                        ],
                        "minItems": 2,
                        "maxItems": 2
                      }
                    },
                    "required": [
                      "url",
                      "position"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "align_driver": {
                "type": "boolean",
                "description": "Auto crops the driver face, ignored if using drivers bank"
              },
              "align_expand_factor": {
                "type": "number",
                "format": "double",
                "description": "The amount of expansion % used for face cropping"
              },
              "auto_match": {
                "type": "boolean",
                "description": "Finds the best anchor match for the source in driver video"
              },
              "motion_factor": {
                "type": "number",
                "format": "double",
                "description": "Amplifies or damps the animation movements"
              },
              "normalization_factor": {
                "type": "number",
                "format": "double",
                "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
                "minimum": 0,
                "maximum": 1
              },
              "sharpen": {
                "type": "boolean",
                "description": "Sharpen results."
              },
              "stitch": {
                "type": "boolean",
                "description": "Stitch back the animated result to the original image"
              },
              "result_format": {
                "description": "File format of the animated result",
                "type": "string",
                "enum": [
                  "mp4",
                  "gif",
                  "mov"
                ]
              },
              "fluent": {
                "type": "boolean",
                "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
                "default": "false"
              },
              "pad_audio": {
                "type": "number",
                "format": "double",
                "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
                "default": "0.0",
                "minimum": 0,
                "maximum": 60
              },
              "driver_expressions": {
                "description": "timed expressions for animation, the current expression is not cleared until a new expression is defined.\nPossible expressions include `happy`, `neutral` and more.",
                "properties": {
                  "expressions": {
                    "items": {
                      "properties": {
                        "start_frame": {
                          "type": "number",
                          "format": "double",
                          "description": "The frame number for the expression start point.",
                          "minimum": 0
                        },
                        "expression": {
                          "description": "The expression to use",
                          "enum": [
                            "neutral",
                            "happy",
                            "serious",
                            "surprise"
                          ],
                          "type": "string"
                        },
                        "intensity": {
                          "type": "number",
                          "format": "double",
                          "description": "Controls the intensity you want for this expression (between 0 no expression, 1 maximum)",
                          "minimum": 0,
                          "maximum": 1
                        }
                      },
                      "required": [
                        "start_frame",
                        "expression",
                        "intensity"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array",
                    "description": "List of TimedExpression to use"
                  },
                  "transition_frames": {
                    "type": "number",
                    "format": "double",
                    "description": "Number of frames to use for the transition between expressions",
                    "minimum": 0
                  }
                },
                "required": [
                  "expressions"
                ],
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "user_id",
          "source_url",
          "created_at",
          "modified_at",
          "status"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "GetTalksDto": {
        "properties": {
          "talks": {
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the object"
                },
                "user_id": {
                  "type": "string",
                  "description": "Unique identifier of the user that submitted the talk"
                },
                "source_url": {
                  "type": "string",
                  "description": "The URL of the source image to be animated by the driver video. Image type of .jpg | .png"
                },
                "driver_url": {
                  "type": "string",
                  "description": "The URL of the driver video to drive the talk, if not provided a driver video will be selected for you from the predefined DriversBank"
                },
                "created_at": {
                  "type": "string",
                  "description": "Talk creation time as iso-8601 string"
                },
                "created_by": {
                  "type": "string",
                  "description": "The user id of the user that created the talk"
                },
                "audio_url": {
                  "description": "The URL of the audio file which will be used by the actor",
                  "example": "https://path.to/audio.mp3",
                  "type": "string",
                  "pattern": "^(?:https):\\/\\/[\\S]+$"
                },
                "started_at": {
                  "type": "string",
                  "description": "Talk start time as iso-8601 string"
                },
                "modified_at": {
                  "type": "string",
                  "description": "last modified time as iso-8601 string"
                },
                "status": {
                  "description": "The status of the talk",
                  "enum": [
                    "created",
                    "done",
                    "error",
                    "started",
                    "rejected"
                  ],
                  "type": "string"
                },
                "result_url": {
                  "type": "string",
                  "description": "s3 uri to the resulting video"
                },
                "metadata": {
                  "description": "metadata that has been collected through the process",
                  "properties": {},
                  "type": "object"
                },
                "webhook": {
                  "type": "string",
                  "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                },
                "config": {
                  "description": "The configuration that used to process the talk",
                  "properties": {
                    "logo": {
                      "anyOf": [
                        {
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                              "pattern": "((https|s3):\\/\\/.+)"
                            },
                            "position": {
                              "items": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "type": "array",
                              "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                              "example": [
                                0,
                                500
                              ],
                              "minItems": 2,
                              "maxItems": 2
                            }
                          },
                          "required": [
                            "url",
                            "position"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        {
                          "type": "boolean"
                        }
                      ]
                    },
                    "align_driver": {
                      "type": "boolean",
                      "description": "Auto crops the driver face, ignored if using drivers bank"
                    },
                    "align_expand_factor": {
                      "type": "number",
                      "format": "double",
                      "description": "The amount of expansion % used for face cropping"
                    },
                    "auto_match": {
                      "type": "boolean",
                      "description": "Finds the best anchor match for the source in driver video"
                    },
                    "motion_factor": {
                      "type": "number",
                      "format": "double",
                      "description": "Amplifies or damps the animation movements"
                    },
                    "normalization_factor": {
                      "type": "number",
                      "format": "double",
                      "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
                      "minimum": 0,
                      "maximum": 1
                    },
                    "sharpen": {
                      "type": "boolean",
                      "description": "Sharpen results."
                    },
                    "stitch": {
                      "type": "boolean",
                      "description": "Stitch back the animated result to the original image"
                    },
                    "result_format": {
                      "description": "File format of the animated result",
                      "type": "string",
                      "enum": [
                        "mp4",
                        "gif",
                        "mov"
                      ]
                    },
                    "fluent": {
                      "type": "boolean",
                      "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
                      "default": "false"
                    },
                    "pad_audio": {
                      "type": "number",
                      "format": "double",
                      "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
                      "default": "0.0",
                      "minimum": 0,
                      "maximum": 60
                    },
                    "driver_expressions": {
                      "description": "timed expressions for animation, the current expression is not cleared until a new expression is defined.\nPossible expressions include `happy`, `neutral` and more.",
                      "properties": {
                        "expressions": {
                          "items": {
                            "properties": {
                              "start_frame": {
                                "type": "number",
                                "format": "double",
                                "description": "The frame number for the expression start point.",
                                "minimum": 0
                              },
                              "expression": {
                                "description": "The expression to use",
                                "enum": [
                                  "neutral",
                                  "happy",
                                  "serious",
                                  "surprise"
                                ],
                                "type": "string"
                              },
                              "intensity": {
                                "type": "number",
                                "format": "double",
                                "description": "Controls the intensity you want for this expression (between 0 no expression, 1 maximum)",
                                "minimum": 0,
                                "maximum": 1
                              }
                            },
                            "required": [
                              "start_frame",
                              "expression",
                              "intensity"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "description": "List of TimedExpression to use"
                        },
                        "transition_frames": {
                          "type": "number",
                          "format": "double",
                          "description": "Number of frames to use for the transition between expressions",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "expressions"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "id",
                "user_id",
                "source_url",
                "created_at",
                "modified_at",
                "status"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "type": "array"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "talks"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "UpdateTalkFields": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "OfferJsep": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "offer"
            ],
            "nullable": false,
            "description": "The session description object describes the initial proposal in an offer/answer exchange."
          },
          "sdp": {
            "type": "string",
            "description": "Describe the media communication sessions to accept the session the is being negotiated"
          }
        },
        "required": [
          "type",
          "sdp"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "IceServer": {
        "properties": {
          "urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              }
            ],
            "description": "URL of the server - can be multiple addresses"
          },
          "username": {
            "type": "string",
            "description": "Username for authentication"
          },
          "credential": {
            "type": "string",
            "description": "Credintials for secure connection to the server"
          }
        },
        "required": [
          "urls"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "InitStreamResponse": {
        "properties": {
          "session_id": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id of the stream - should be returned as *path parameter* in all streaming request to the same stream"
          },
          "jsep": {
            "description": "Jsep offer object used to create a peer connection",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "offer"
                ],
                "nullable": false,
                "description": "The session description object describes the initial proposal in an offer/answer exchange."
              },
              "sdp": {
                "type": "string",
                "description": "Describe the media communication sessions to accept the session the is being negotiated"
              }
            },
            "required": [
              "type",
              "sdp"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "ice_servers": {
            "items": {
              "properties": {
                "urls": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "URL of the server - can be multiple addresses"
                },
                "username": {
                  "type": "string",
                  "description": "Username for authentication"
                },
                "credential": {
                  "type": "string",
                  "description": "Credintials for secure connection to the server"
                }
              },
              "required": [
                "urls"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "type": "array",
            "description": "ICE servers used to create a peer connection"
          }
        },
        "required": [
          "id",
          "jsep",
          "ice_servers"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Pick_TalksConfig.motion_factor-or-align_expand_factor-or-stitch_": {
        "properties": {
          "motion_factor": {
            "type": "number",
            "format": "double",
            "description": "Amplifies or damps the animation movements"
          },
          "align_expand_factor": {
            "type": "number",
            "format": "double",
            "description": "The amount of expansion % used for face cropping"
          },
          "stitch": {
            "type": "boolean",
            "description": "Stitch back the animated result to the original image"
          }
        },
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "InitTalkStreamConfig": {
        "properties": {
          "motion_factor": {
            "type": "number",
            "format": "double",
            "description": "Amplifies or damps the animation movements"
          },
          "align_expand_factor": {
            "type": "number",
            "format": "double",
            "description": "The amount of expansion % used for face cropping"
          },
          "stitch": {
            "type": "boolean",
            "description": "Stitch back the animated result to the original image"
          }
        },
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "CompatibilityMode": {
        "type": "string",
        "enum": [
          "on",
          "off",
          "auto"
        ]
      },
      "InitTalkStreamRequest": {
        "properties": {
          "source_url": {
            "type": "string",
            "description": "URL to a photo you wish to animate in the stream"
          },
          "driver_url": {
            "type": "string",
            "description": "The URL of the driver video to drive the talk, or a selection from the list or provided drivers.\nIf not provided a driver video will be selected for you from the predefined drivers bank."
          },
          "face": {
            "description": "the face to animate - otherwise detects the dominant face",
            "example": {
              "top_left": [
                0,
                0
              ],
              "size": 512
            },
            "properties": {
              "size": {
                "type": "integer",
                "format": "int32",
                "description": "Size of the square side",
                "minimum": 0
              },
              "top_left": {
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "type": "array",
                "description": "Top left location of the face in the frame - can be negative",
                "minItems": 2,
                "maxItems": 2
              },
              "overlap": {
                "enum": [
                  "NO",
                  "PARTIAL",
                  "YES",
                  "UNKNOWN"
                ],
                "type": "string"
              },
              "face_id": {
                "type": "string"
              },
              "detect_confidence": {
                "type": "number",
                "format": "double"
              },
              "sharpness": {
                "type": "number",
                "format": "double"
              },
              "face_occluded": {
                "type": "boolean"
              },
              "face_occluded_confidence": {
                "type": "number",
                "format": "double"
              },
              "detection": {
                "properties": {
                  "top": {
                    "type": "number",
                    "format": "double"
                  },
                  "left": {
                    "type": "number",
                    "format": "double"
                  },
                  "bottom": {
                    "type": "number",
                    "format": "double"
                  },
                  "right": {
                    "type": "number",
                    "format": "double"
                  }
                },
                "required": [
                  "top",
                  "left",
                  "bottom",
                  "right"
                ],
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "size",
              "top_left"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "config": {
            "description": "Advanced configuration options.",
            "properties": {
              "motion_factor": {
                "type": "number",
                "format": "double",
                "description": "Amplifies or damps the animation movements"
              },
              "align_expand_factor": {
                "type": "number",
                "format": "double",
                "description": "The amount of expansion % used for face cropping"
              },
              "stitch": {
                "type": "boolean",
                "description": "Stitch back the animated result to the original image"
              }
            },
            "type": "object"
          },
          "compatibility_mode": {
            "description": "Defines the video codec to be used in the stream.\nWhen set to on: VP8 will be used.\nWhen set to off: H264 will be used\nWhen set to auto the codec will be selected according to the browser.",
            "type": "string",
            "enum": [
              "on",
              "off",
              "auto"
            ]
          },
          "stream_warmup": {
            "type": "boolean",
            "description": "Whether to stream wamrup video on the connection.\nIf set to true, will stream a warmup video when connection is established.\nAt the end of the warmup video, a message containing \"stream/ready\" will be sent on the data channel.",
            "default": "false"
          },
          "session_timeout": {
            "type": "number",
            "format": "double",
            "description": "Maximum duration (in seconds) between messages before session times out.\nCan only be used with proper permissions",
            "example": 180,
            "maximum": 300
          },
          "stream_resolution": {
            "type": "number",
            "format": "double",
            "description": "The stream resolution sets the maximum height or width resolution of the streamed video,\nwith the aspect ratio preserved from the source image.\nCan only be used when 'stitch' is set to true.",
            "example": 720,
            "maximum": 1080
          }
        },
        "required": [
          "source_url"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "AnswerJsep": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "answer"
            ],
            "nullable": false,
            "description": "The SDP contained in the sdp property is the definitive choice in the exchange. In other words, this session\ndescription describes the agreed-upon configuration, and is being sent to finalize negotiation."
          },
          "sdp": {
            "type": "string",
            "description": "Describe the media communication sessions to accept the session the is being negotiated"
          }
        },
        "required": [
          "type",
          "sdp"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CreateStartStreamRequest": {
        "properties": {
          "session_id": {
            "type": "string",
            "description": "Session identifier information, should be returned in the body of all streaming requests (from the response\nof the POST /streams)"
          },
          "answer": {
            "description": "Jsep answer object used to create a peer connection",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "answer"
                ],
                "nullable": false,
                "description": "The SDP contained in the sdp property is the definitive choice in the exchange. In other words, this session\ndescription describes the agreed-upon configuration, and is being sent to finalize negotiation."
              },
              "sdp": {
                "type": "string",
                "description": "Describe the media communication sessions to accept the session the is being negotiated"
              }
            },
            "required": [
              "type",
              "sdp"
            ],
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "answer"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "IceCandidate": {
        "properties": {
          "candidate": {
            "type": "string",
            "description": "A string representing the transport address for the candidate that can be used for connectivity checks.\nThe format of this address is a candidate-attribute as defined in RFC 5245. This string is empty (\"\") if the\nRTCIceCandidate is an \"end of candidates\" indicator."
          },
          "sdpMid": {
            "type": "string",
            "description": "A string specifying the candidate's media stream identification tag which uniquely identifies the media stream\nwithin the component with which the candidate is associated, or null if no such association exists."
          },
          "sdpMLineIndex": {
            "type": "number",
            "format": "double",
            "description": "If not null, sdpMLineIndex indicates the zero-based index number of the media description (as defined in RFC\n4566) in the SDP with which the candidate is associated."
          }
        },
        "required": [
          "candidate",
          "sdpMid",
          "sdpMLineIndex"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CreateStreamIceCandidateRequest": {
        "allOf": [
          {
            "anyOf": [
              {
                "properties": {
                  "candidate": {
                    "type": "string",
                    "description": "A string representing the transport address for the candidate that can be used for connectivity checks.\nThe format of this address is a candidate-attribute as defined in RFC 5245. This string is empty (\"\") if the\nRTCIceCandidate is an \"end of candidates\" indicator."
                  },
                  "sdpMid": {
                    "type": "string",
                    "description": "A string specifying the candidate's media stream identification tag which uniquely identifies the media stream\nwithin the component with which the candidate is associated, or null if no such association exists."
                  },
                  "sdpMLineIndex": {
                    "type": "number",
                    "format": "double",
                    "description": "If not null, sdpMLineIndex indicates the zero-based index number of the media description (as defined in RFC\n4566) in the SDP with which the candidate is associated."
                  }
                },
                "required": [
                  "candidate",
                  "sdpMid",
                  "sdpMLineIndex"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "properties": {},
                "type": "object"
              }
            ]
          },
          {
            "properties": {
              "session_id": {
                "type": "string",
                "description": "Session identifier information, should be returned in the body of all streaming requests (from the response\nof the POST /streams)"
              }
            },
            "type": "object"
          }
        ]
      },
      "VideoPath": {
        "type": "string",
        "example": "https://path.to.directory/movie.mp4",
        "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
      },
      "VoiceAccess": {
        "enum": [
          "public",
          "premium",
          "private",
          "external-private"
        ],
        "type": "string"
      },
      "Elevenlabs_stream_tts_provider": {
        "properties": {
          "type": {
            "enum": [
              "elevenlabs"
            ],
            "type": "string"
          },
          "voice_id": {
            "type": "string",
            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://api.elevenlabs.io/v1/voices",
            "example": "21m00Tcm4TlvDq8ikWAM",
            "default": "21m00Tcm4TlvDq8ikWAM"
          },
          "voice_config": {
            "description": "Voice customization options",
            "properties": {
              "stability": {
                "type": "number",
                "format": "double",
                "description": "The stability of the voice.",
                "example": "0.5",
                "minimum": 0,
                "maximum": 1
              },
              "similarity_boost": {
                "type": "number",
                "format": "double",
                "description": "The similarity boost of the voice.",
                "example": "0.75",
                "minimum": 0,
                "maximum": 1
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "model_id": {
            "type": "string",
            "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
            "example": "eleven_multilingual_v2",
            "default": "eleven_multilingual_v2"
          },
          "access": {
            "description": "The access level of the requested voice.",
            "enum": [
              "public",
              "premium",
              "private",
              "external-private"
            ],
            "type": "string"
          },
          "language": {
            "type": "string",
            "description": "Voice customization options. To save the language of the selected agent voice",
            "example": "English (United States)"
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "AgentsTextToSpeechProviders": {
        "anyOf": [
          {
            "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
            "properties": {
              "type": {
                "enum": [
                  "microsoft"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference//tts-microsoft",
                "example": "en-US-JennyNeural",
                "default": "en-US-JennyNeural"
              },
              "voice_config": {
                "description": "Voice customization options",
                "properties": {
                  "style": {
                    "type": "string",
                    "description": "The style of the voice.\nAvailable styles change between voices."
                  },
                  "rate": {
                    "type": "string",
                    "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                    "example": "0.5"
                  },
                  "pitch": {
                    "type": "string",
                    "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                    "example": "+2st"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "properties": {
              "type": {
                "enum": [
                  "elevenlabs"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://api.elevenlabs.io/v1/voices",
                "example": "21m00Tcm4TlvDq8ikWAM",
                "default": "21m00Tcm4TlvDq8ikWAM"
              },
              "voice_config": {
                "description": "Voice customization options",
                "properties": {
                  "stability": {
                    "type": "number",
                    "format": "double",
                    "description": "The stability of the voice.",
                    "example": "0.5",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "similarity_boost": {
                    "type": "number",
                    "format": "double",
                    "description": "The similarity boost of the voice.",
                    "example": "0.75",
                    "minimum": 0,
                    "maximum": 1
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "model_id": {
                "type": "string",
                "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                "example": "eleven_multilingual_v2",
                "default": "eleven_multilingual_v2"
              },
              "access": {
                "description": "The access level of the requested voice.",
                "enum": [
                  "public",
                  "premium",
                  "private",
                  "external-private"
                ],
                "type": "string"
              },
              "language": {
                "type": "string",
                "description": "Voice customization options. To save the language of the selected agent voice",
                "example": "English (United States)"
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "StreamScriptType": {
        "type": "string",
        "enum": [
          "text",
          "audio"
        ]
      },
      "Stream_Text_Script": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "text"
            ],
            "nullable": false,
            "description": "The type of the script."
          },
          "provider": {
            "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
            "anyOf": [
              {
                "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                "properties": {
                  "type": {
                    "enum": [
                      "microsoft"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                    "example": "en-US-JennyNeural",
                    "default": "en-US-JennyNeural"
                  },
                  "voice_config": {
                    "description": "Voice customization options",
                    "properties": {
                      "style": {
                        "type": "string",
                        "description": "The style of the voice.\nAvailable styles change between voices."
                      },
                      "rate": {
                        "type": "string",
                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                        "example": "0.5"
                      },
                      "pitch": {
                        "type": "string",
                        "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                        "example": "+2st"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "language": {
                    "type": "string",
                    "description": "Voice customization options. To save the language of the selected agent voice",
                    "example": "English (United States)"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "elevenlabs"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                    "example": "21m00Tcm4TlvDq8ikWAM",
                    "default": "21m00Tcm4TlvDq8ikWAM"
                  },
                  "voice_config": {
                    "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                    "properties": {
                      "stability": {
                        "type": "number",
                        "format": "double",
                        "description": "How stable the voice is and the randomness of each new generation.",
                        "example": "0"
                      },
                      "similarity_boost": {
                        "type": "number",
                        "format": "double",
                        "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                        "example": "0"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "model_id": {
                    "type": "string",
                    "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                    "example": "eleven_multilingual_v2",
                    "default": "eleven_multilingual_v2"
                  },
                  "shouldAddDefaultOutputFormat": {
                    "type": "boolean",
                    "description": "Add default outputformat to the stream request if true"
                  },
                  "access": {
                    "description": "The access level of the requested voice.",
                    "enum": [
                      "public",
                      "premium",
                      "private",
                      "external-private"
                    ],
                    "type": "string"
                  },
                  "language": {
                    "type": "string",
                    "description": "Voice customization options. To save the language of the selected agent voice",
                    "example": "English (United States)"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              }
            ]
          },
          "input": {
            "type": "string",
            "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.",
            "example": "This is an example text",
            "maxLength": 40000,
            "minLength": 3
          },
          "ssml": {
            "type": "boolean",
            "description": "Is the text provided in ssml form.",
            "default": "false"
          }
        },
        "required": [
          "type",
          "input"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Stream_Audio_Script": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "audio"
            ],
            "nullable": false,
            "description": "The type of the script."
          },
          "audio_url": {
            "description": "The URL of the audio file which will be used by the actor.\nFile size is limit to 15MB.",
            "type": "string",
            "example": "https://path.to/audio.mp3",
            "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
          }
        },
        "required": [
          "type",
          "audio_url"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Role": {
        "type": "string",
        "enum": [
          "system",
          "user",
          "assistant"
        ]
      },
      "Message": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "system",
              "user",
              "assistant"
            ]
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        },
        "required": [
          "role",
          "content",
          "created_at"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Stream_LLM_Script": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "llm"
            ],
            "nullable": false
          },
          "provider": {
            "anyOf": [
              {
                "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                "properties": {
                  "type": {
                    "enum": [
                      "microsoft"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                    "example": "en-US-JennyNeural",
                    "default": "en-US-JennyNeural"
                  },
                  "voice_config": {
                    "description": "Voice customization options",
                    "properties": {
                      "style": {
                        "type": "string",
                        "description": "The style of the voice.\nAvailable styles change between voices."
                      },
                      "rate": {
                        "type": "string",
                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                        "example": "0.5"
                      },
                      "pitch": {
                        "type": "string",
                        "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                        "example": "+2st"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "language": {
                    "type": "string",
                    "description": "Voice customization options. To save the language of the selected agent voice",
                    "example": "English (United States)"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "elevenlabs"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                    "example": "21m00Tcm4TlvDq8ikWAM",
                    "default": "21m00Tcm4TlvDq8ikWAM"
                  },
                  "voice_config": {
                    "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                    "properties": {
                      "stability": {
                        "type": "number",
                        "format": "double",
                        "description": "How stable the voice is and the randomness of each new generation.",
                        "example": "0"
                      },
                      "similarity_boost": {
                        "type": "number",
                        "format": "double",
                        "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                        "example": "0"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "model_id": {
                    "type": "string",
                    "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                    "example": "eleven_multilingual_v2",
                    "default": "eleven_multilingual_v2"
                  },
                  "shouldAddDefaultOutputFormat": {
                    "type": "boolean",
                    "description": "Add default outputformat to the stream request if true"
                  },
                  "access": {
                    "description": "The access level of the requested voice.",
                    "enum": [
                      "public",
                      "premium",
                      "private",
                      "external-private"
                    ],
                    "type": "string"
                  },
                  "language": {
                    "type": "string",
                    "description": "Voice customization options. To save the language of the selected agent voice",
                    "example": "English (United States)"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              }
            ]
          },
          "ssml": {
            "type": "boolean"
          },
          "llm": {
            "properties": {
              "provider": {
                "type": "string",
                "enum": [
                  "openai"
                ],
                "nullable": false
              },
              "messages": {
                "items": {
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "system",
                        "user",
                        "assistant"
                      ]
                    },
                    "content": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "role",
                    "content",
                    "created_at"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "required": [
              "provider",
              "messages"
            ],
            "type": "object"
          },
          "input": {
            "type": "string"
          },
          "stream_audio": {
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "llm"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "StreamScript": {
        "anyOf": [
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "text"
                ],
                "nullable": false,
                "description": "The type of the script."
              },
              "provider": {
                "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                "anyOf": [
                  {
                    "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                    "properties": {
                      "type": {
                        "enum": [
                          "microsoft"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                        "example": "en-US-JennyNeural",
                        "default": "en-US-JennyNeural"
                      },
                      "voice_config": {
                        "description": "Voice customization options",
                        "properties": {
                          "style": {
                            "type": "string",
                            "description": "The style of the voice.\nAvailable styles change between voices."
                          },
                          "rate": {
                            "type": "string",
                            "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                            "example": "0.5"
                          },
                          "pitch": {
                            "type": "string",
                            "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                            "example": "+2st"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "language": {
                        "type": "string",
                        "description": "Voice customization options. To save the language of the selected agent voice",
                        "example": "English (United States)"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "properties": {
                      "type": {
                        "enum": [
                          "elevenlabs"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                        "example": "21m00Tcm4TlvDq8ikWAM",
                        "default": "21m00Tcm4TlvDq8ikWAM"
                      },
                      "voice_config": {
                        "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                        "properties": {
                          "stability": {
                            "type": "number",
                            "format": "double",
                            "description": "How stable the voice is and the randomness of each new generation.",
                            "example": "0"
                          },
                          "similarity_boost": {
                            "type": "number",
                            "format": "double",
                            "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                            "example": "0"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "model_id": {
                        "type": "string",
                        "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                        "example": "eleven_multilingual_v2",
                        "default": "eleven_multilingual_v2"
                      },
                      "shouldAddDefaultOutputFormat": {
                        "type": "boolean",
                        "description": "Add default outputformat to the stream request if true"
                      },
                      "access": {
                        "description": "The access level of the requested voice.",
                        "enum": [
                          "public",
                          "premium",
                          "private",
                          "external-private"
                        ],
                        "type": "string"
                      },
                      "language": {
                        "type": "string",
                        "description": "Voice customization options. To save the language of the selected agent voice",
                        "example": "English (United States)"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                ]
              },
              "input": {
                "type": "string",
                "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.",
                "example": "This is an example text",
                "maxLength": 40000,
                "minLength": 3
              },
              "ssml": {
                "type": "boolean",
                "description": "Is the text provided in ssml form.",
                "default": "false"
              }
            },
            "required": [
              "type",
              "input"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "audio"
                ],
                "nullable": false,
                "description": "The type of the script."
              },
              "audio_url": {
                "description": "The URL of the audio file which will be used by the actor.\nFile size is limit to 15MB.",
                "type": "string",
                "example": "https://path.to/audio.mp3",
                "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
              }
            },
            "required": [
              "type",
              "audio_url"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "llm"
                ],
                "nullable": false
              },
              "provider": {
                "anyOf": [
                  {
                    "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                    "properties": {
                      "type": {
                        "enum": [
                          "microsoft"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                        "example": "en-US-JennyNeural",
                        "default": "en-US-JennyNeural"
                      },
                      "voice_config": {
                        "description": "Voice customization options",
                        "properties": {
                          "style": {
                            "type": "string",
                            "description": "The style of the voice.\nAvailable styles change between voices."
                          },
                          "rate": {
                            "type": "string",
                            "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                            "example": "0.5"
                          },
                          "pitch": {
                            "type": "string",
                            "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                            "example": "+2st"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "language": {
                        "type": "string",
                        "description": "Voice customization options. To save the language of the selected agent voice",
                        "example": "English (United States)"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "properties": {
                      "type": {
                        "enum": [
                          "elevenlabs"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                        "example": "21m00Tcm4TlvDq8ikWAM",
                        "default": "21m00Tcm4TlvDq8ikWAM"
                      },
                      "voice_config": {
                        "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                        "properties": {
                          "stability": {
                            "type": "number",
                            "format": "double",
                            "description": "How stable the voice is and the randomness of each new generation.",
                            "example": "0"
                          },
                          "similarity_boost": {
                            "type": "number",
                            "format": "double",
                            "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                            "example": "0"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "model_id": {
                        "type": "string",
                        "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                        "example": "eleven_multilingual_v2",
                        "default": "eleven_multilingual_v2"
                      },
                      "shouldAddDefaultOutputFormat": {
                        "type": "boolean",
                        "description": "Add default outputformat to the stream request if true"
                      },
                      "access": {
                        "description": "The access level of the requested voice.",
                        "enum": [
                          "public",
                          "premium",
                          "private",
                          "external-private"
                        ],
                        "type": "string"
                      },
                      "language": {
                        "type": "string",
                        "description": "Voice customization options. To save the language of the selected agent voice",
                        "example": "English (United States)"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                ]
              },
              "ssml": {
                "type": "boolean"
              },
              "llm": {
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "openai"
                    ],
                    "nullable": false
                  },
                  "messages": {
                    "items": {
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": [
                            "system",
                            "user",
                            "assistant"
                          ]
                        },
                        "content": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "role",
                        "content",
                        "created_at"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "provider",
                  "messages"
                ],
                "type": "object"
              },
              "input": {
                "type": "string"
              },
              "stream_audio": {
                "type": "boolean"
              }
            },
            "required": [
              "type",
              "llm"
            ],
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "Pick_TalksConfig.Exclude_keyofTalksConfig.logo-or-driver_expressions__": {
        "properties": {
          "motion_factor": {
            "type": "number",
            "format": "double",
            "description": "Amplifies or damps the animation movements"
          },
          "align_expand_factor": {
            "type": "number",
            "format": "double",
            "description": "The amount of expansion % used for face cropping"
          },
          "stitch": {
            "type": "boolean",
            "description": "Stitch back the animated result to the original image"
          },
          "align_driver": {
            "type": "boolean",
            "description": "Auto crops the driver face, ignored if using drivers bank"
          },
          "auto_match": {
            "type": "boolean",
            "description": "Finds the best anchor match for the source in driver video"
          },
          "normalization_factor": {
            "type": "number",
            "format": "double",
            "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
            "minimum": 0,
            "maximum": 1
          },
          "sharpen": {
            "type": "boolean",
            "description": "Sharpen results."
          },
          "result_format": {
            "description": "File format of the animated result",
            "type": "string",
            "enum": [
              "mp4",
              "gif",
              "mov"
            ]
          },
          "fluent": {
            "type": "boolean",
            "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
            "default": "false"
          },
          "pad_audio": {
            "type": "number",
            "format": "double",
            "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
            "default": "0.0",
            "minimum": 0,
            "maximum": 60
          }
        },
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "Omit_TalksConfig.logo-or-driver_expressions_": {
        "description": "Construct a type with the properties of T except for those in type K.",
        "properties": {
          "motion_factor": {
            "type": "number",
            "format": "double",
            "description": "Amplifies or damps the animation movements"
          },
          "align_expand_factor": {
            "type": "number",
            "format": "double",
            "description": "The amount of expansion % used for face cropping"
          },
          "stitch": {
            "type": "boolean",
            "description": "Stitch back the animated result to the original image"
          },
          "align_driver": {
            "type": "boolean",
            "description": "Auto crops the driver face, ignored if using drivers bank"
          },
          "auto_match": {
            "type": "boolean",
            "description": "Finds the best anchor match for the source in driver video"
          },
          "normalization_factor": {
            "type": "number",
            "format": "double",
            "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
            "minimum": 0,
            "maximum": 1
          },
          "sharpen": {
            "type": "boolean",
            "description": "Sharpen results."
          },
          "result_format": {
            "description": "File format of the animated result",
            "type": "string",
            "enum": [
              "mp4",
              "gif",
              "mov"
            ]
          },
          "fluent": {
            "type": "boolean",
            "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
            "default": "false"
          },
          "pad_audio": {
            "type": "number",
            "format": "double",
            "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
            "default": "0.0",
            "minimum": 0,
            "maximum": 60
          }
        },
        "type": "object"
      },
      "DeprecatedTalksConfig": {
        "properties": {
          "align_expand_factor": {
            "type": "number",
            "format": "double",
            "description": "The amount of expansion % used for face cropping",
            "deprecated": true
          },
          "motion_factor": {
            "type": "number",
            "format": "double",
            "description": "Amplifies or damps the animation movements",
            "deprecated": true
          },
          "stitch": {
            "type": "boolean",
            "description": "Stitch back the animated result to the original image",
            "deprecated": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "CreateTalkStreamRequest": {
        "properties": {
          "session_id": {
            "type": "string"
          },
          "driver_url": {
            "description": "The URL of the driver video to drive the talk, or a selection from the list or provided drivers.\nIf not provided a driver video will be selected for you from the predefined drivers bank.",
            "example": "bank://natural",
            "deprecated": true,
            "type": "string",
            "pattern": "(https|s3|bank):\\/\\/.+"
          },
          "result_url": {
            "description": "The URL to save the video result.",
            "type": "string",
            "example": "https://path.to.directory/movie.mp4",
            "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
          },
          "script": {
            "anyOf": [
              {
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "text"
                    ],
                    "nullable": false,
                    "description": "The type of the script."
                  },
                  "provider": {
                    "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                    "anyOf": [
                      {
                        "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                        "properties": {
                          "type": {
                            "enum": [
                              "microsoft"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                            "example": "en-US-JennyNeural",
                            "default": "en-US-JennyNeural"
                          },
                          "voice_config": {
                            "description": "Voice customization options",
                            "properties": {
                              "style": {
                                "type": "string",
                                "description": "The style of the voice.\nAvailable styles change between voices."
                              },
                              "rate": {
                                "type": "string",
                                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                "example": "0.5"
                              },
                              "pitch": {
                                "type": "string",
                                "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                "example": "+2st"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "elevenlabs"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                            "example": "21m00Tcm4TlvDq8ikWAM",
                            "default": "21m00Tcm4TlvDq8ikWAM"
                          },
                          "voice_config": {
                            "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                            "properties": {
                              "stability": {
                                "type": "number",
                                "format": "double",
                                "description": "How stable the voice is and the randomness of each new generation.",
                                "example": "0"
                              },
                              "similarity_boost": {
                                "type": "number",
                                "format": "double",
                                "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                                "example": "0"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "model_id": {
                            "type": "string",
                            "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                            "example": "eleven_multilingual_v2",
                            "default": "eleven_multilingual_v2"
                          },
                          "shouldAddDefaultOutputFormat": {
                            "type": "boolean",
                            "description": "Add default outputformat to the stream request if true"
                          },
                          "access": {
                            "description": "The access level of the requested voice.",
                            "enum": [
                              "public",
                              "premium",
                              "private",
                              "external-private"
                            ],
                            "type": "string"
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    ]
                  },
                  "input": {
                    "type": "string",
                    "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.",
                    "example": "This is an example text",
                    "maxLength": 40000,
                    "minLength": 3
                  },
                  "ssml": {
                    "type": "boolean",
                    "description": "Is the text provided in ssml form.",
                    "default": "false"
                  }
                },
                "required": [
                  "type",
                  "input"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "audio"
                    ],
                    "nullable": false,
                    "description": "The type of the script."
                  },
                  "audio_url": {
                    "description": "The URL of the audio file which will be used by the actor.\nFile size is limit to 15MB.",
                    "type": "string",
                    "example": "https://path.to/audio.mp3",
                    "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
                  }
                },
                "required": [
                  "type",
                  "audio_url"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "llm"
                    ],
                    "nullable": false
                  },
                  "provider": {
                    "anyOf": [
                      {
                        "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                        "properties": {
                          "type": {
                            "enum": [
                              "microsoft"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                            "example": "en-US-JennyNeural",
                            "default": "en-US-JennyNeural"
                          },
                          "voice_config": {
                            "description": "Voice customization options",
                            "properties": {
                              "style": {
                                "type": "string",
                                "description": "The style of the voice.\nAvailable styles change between voices."
                              },
                              "rate": {
                                "type": "string",
                                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                "example": "0.5"
                              },
                              "pitch": {
                                "type": "string",
                                "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                "example": "+2st"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "elevenlabs"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                            "example": "21m00Tcm4TlvDq8ikWAM",
                            "default": "21m00Tcm4TlvDq8ikWAM"
                          },
                          "voice_config": {
                            "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                            "properties": {
                              "stability": {
                                "type": "number",
                                "format": "double",
                                "description": "How stable the voice is and the randomness of each new generation.",
                                "example": "0"
                              },
                              "similarity_boost": {
                                "type": "number",
                                "format": "double",
                                "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                                "example": "0"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "model_id": {
                            "type": "string",
                            "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                            "example": "eleven_multilingual_v2",
                            "default": "eleven_multilingual_v2"
                          },
                          "shouldAddDefaultOutputFormat": {
                            "type": "boolean",
                            "description": "Add default outputformat to the stream request if true"
                          },
                          "access": {
                            "description": "The access level of the requested voice.",
                            "enum": [
                              "public",
                              "premium",
                              "private",
                              "external-private"
                            ],
                            "type": "string"
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    ]
                  },
                  "ssml": {
                    "type": "boolean"
                  },
                  "llm": {
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "openai"
                        ],
                        "nullable": false
                      },
                      "messages": {
                        "items": {
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "system",
                                "user",
                                "assistant"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role",
                            "content",
                            "created_at"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "provider",
                      "messages"
                    ],
                    "type": "object"
                  },
                  "input": {
                    "type": "string"
                  },
                  "stream_audio": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "type",
                  "llm"
                ],
                "type": "object",
                "additionalProperties": false
              }
            ]
          },
          "config": {
            "allOf": [
              {
                "description": "Construct a type with the properties of T except for those in type K.",
                "properties": {
                  "motion_factor": {
                    "type": "number",
                    "format": "double",
                    "description": "Amplifies or damps the animation movements"
                  },
                  "align_expand_factor": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount of expansion % used for face cropping"
                  },
                  "stitch": {
                    "type": "boolean",
                    "description": "Stitch back the animated result to the original image"
                  },
                  "align_driver": {
                    "type": "boolean",
                    "description": "Auto crops the driver face, ignored if using drivers bank"
                  },
                  "auto_match": {
                    "type": "boolean",
                    "description": "Finds the best anchor match for the source in driver video"
                  },
                  "normalization_factor": {
                    "type": "number",
                    "format": "double",
                    "description": "Normalizes the expression of the source image [0., 1.], 0. means no normalization",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "sharpen": {
                    "type": "boolean",
                    "description": "Sharpen results."
                  },
                  "result_format": {
                    "description": "File format of the animated result",
                    "type": "string",
                    "enum": [
                      "mp4",
                      "gif",
                      "mov"
                    ]
                  },
                  "fluent": {
                    "type": "boolean",
                    "description": "Interpolate between the last & first frames of the driver video\nWhen used together with `pad_audio` can create a seamless transition between videos of the same driver",
                    "default": "false"
                  },
                  "pad_audio": {
                    "type": "number",
                    "format": "double",
                    "description": "Pad the audio with silence at the end (given in seconds)\nWill increase the video duration & the credits it consumes",
                    "default": "0.0",
                    "minimum": 0,
                    "maximum": 60
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "align_expand_factor": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount of expansion % used for face cropping",
                    "deprecated": true
                  },
                  "motion_factor": {
                    "type": "number",
                    "format": "double",
                    "description": "Amplifies or damps the animation movements",
                    "deprecated": true
                  },
                  "stitch": {
                    "type": "boolean",
                    "description": "Stitch back the animated result to the original image",
                    "deprecated": true
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            ],
            "description": "Advanced configuration options."
          },
          "user_data": {
            "description": "Non-sensitive custom data that will be added to the talk response and webhook.",
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "pattern": "^(?!\\s*$).+$"
          },
          "name": {
            "type": "string",
            "description": "The name of the talk video"
          },
          "audio_optimization": {
            "type": "number",
            "format": "double",
            "description": "The optimization level of the audio",
            "default": "2"
          },
          "metadata": {
            "description": "Metadata passed to the talks worker"
          }
        },
        "required": [
          "script"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ClipPresenterDto": {
        "properties": {
          "presenter_id": {
            "type": "string",
            "example": "amy-Aq6OmGZnMt"
          },
          "driver_id": {
            "type": "string",
            "example": "Vcq0R4a8F0"
          },
          "gender": {
            "type": "string",
            "description": "The gender of the presenter.\nmale / female / other"
          },
          "owner_id": {
            "type": "string",
            "description": "The owner id of the driver"
          },
          "preview_url": {
            "type": "string",
            "description": "A short gif, trimmed from the original driver in low resolution"
          },
          "modified_at": {
            "type": "string",
            "description": "Presenter modified at"
          },
          "video_url": {
            "type": "string",
            "description": "A short video, trimmed from the original driver in high resolution"
          },
          "thumbnail_url": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        },
        "required": [
          "presenter_id",
          "gender",
          "owner_id",
          "preview_url",
          "modified_at"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "GetClipsPresentersResponse": {
        "properties": {
          "presenters": {
            "items": {
              "properties": {
                "presenter_id": {
                  "type": "string",
                  "example": "amy-Aq6OmGZnMt"
                },
                "driver_id": {
                  "type": "string",
                  "example": "Vcq0R4a8F0"
                },
                "gender": {
                  "type": "string",
                  "description": "The gender of the presenter.\nmale / female / other"
                },
                "owner_id": {
                  "type": "string",
                  "description": "The owner id of the driver"
                },
                "preview_url": {
                  "type": "string",
                  "description": "A short gif, trimmed from the original driver in low resolution"
                },
                "modified_at": {
                  "type": "string",
                  "description": "Presenter modified at"
                },
                "video_url": {
                  "type": "string",
                  "description": "A short video, trimmed from the original driver in high resolution"
                },
                "thumbnail_url": {
                  "type": "string"
                },
                "image_url": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                }
              },
              "required": [
                "presenter_id",
                "gender",
                "owner_id",
                "preview_url",
                "modified_at"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "type": "array"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "presenters"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ClipStatus": {
        "enum": [
          "created",
          "done",
          "error",
          "started",
          "rejected"
        ],
        "type": "string"
      },
      "CreateClipResponse": {
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the clip"
          },
          "object": {
            "type": "string",
            "enum": [
              "clip"
            ],
            "nullable": false,
            "description": "An identifier of this clip"
          },
          "created_at": {
            "type": "string",
            "description": "Clip creation time as iso-8601 string"
          },
          "status": {
            "description": "The status of the clip",
            "enum": [
              "created",
              "done",
              "error",
              "started",
              "rejected"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "object",
          "created_at",
          "status"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Microsoft_tts_provider1": {
        "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
        "properties": {
          "type": {
            "enum": [
              "microsoft"
            ],
            "type": "string"
          },
          "voice_id": {
            "type": "string",
            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
            "example": "en-US-JennyNeural",
            "default": "en-US-JennyNeural"
          },
          "voice_config": {
            "description": "Voice customization options",
            "properties": {
              "style": {
                "type": "string",
                "description": "The style of the voice.\nAvailable styles change between voices."
              },
              "rate": {
                "type": "string",
                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                "example": "0.5"
              },
              "pitch": {
                "type": "string",
                "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                "example": "+2st"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "language": {
            "type": "string",
            "description": "Voice customization options. To save the language of the selected agent voice",
            "example": "English (United States)"
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Afflorithmics_tts_provider1": {
        "description": "Afflorithmics provider details, contains the provider type and requested voice id, available for enterprise users.",
        "properties": {
          "type": {
            "enum": [
              "afflorithmics"
            ],
            "type": "string"
          },
          "voice_id": {
            "type": "string",
            "description": "The voice_id from the list of available voices.",
            "example": "abc123DEF456",
            "default": "abc123DEF456"
          },
          "voice_config": {
            "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
            "properties": {
              "rate": {
                "type": "string",
                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                "example": "1.2",
                "default": "1"
              },
              "silencePadding": {
                "type": "number",
                "format": "double",
                "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
              },
              "voiceIntelligence": {
                "type": "boolean",
                "description": "Flag to apply lexicographical text corrections"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "language": {
            "type": "string",
            "description": "Voice customization options. To save the language of the selected agent voice",
            "example": "English (United States)"
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "VoiceConfigElevenlabs1": {
        "properties": {
          "stability": {
            "type": "number",
            "format": "double",
            "description": "How stable the voice is and the randomness of each new generation.",
            "example": "0"
          },
          "similarity_boost": {
            "type": "number",
            "format": "double",
            "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
            "example": "0"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "Elevenlabs_tts_provider1": {
        "description": "Elevenlabs provider details, contains the provider type and requested voice id, available for premium users.",
        "properties": {
          "type": {
            "enum": [
              "elevenlabs"
            ],
            "type": "string"
          },
          "voice_id": {
            "type": "string",
            "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
            "example": "21m00Tcm4TlvDq8ikWAM",
            "default": "21m00Tcm4TlvDq8ikWAM"
          },
          "voice_config": {
            "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
            "properties": {
              "stability": {
                "type": "number",
                "format": "double",
                "description": "How stable the voice is and the randomness of each new generation.",
                "example": "0"
              },
              "similarity_boost": {
                "type": "number",
                "format": "double",
                "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                "example": "0"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "model_id": {
            "type": "string",
            "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
            "example": "eleven_multilingual_v2",
            "default": "eleven_multilingual_v2"
          },
          "shouldAddDefaultOutputFormat": {
            "type": "boolean",
            "description": "Add default outputformat to the stream request if true"
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Amazon_tts_provider1": {
        "description": "Amazon provider details, contains the provider type and requested voice id",
        "properties": {
          "type": {
            "enum": [
              "amazon"
            ],
            "type": "string"
          },
          "voice_id": {
            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/text-to-speech-providers",
            "example": "Joanna",
            "type": "string",
            "enum": [
              "Amy",
              "Aria",
              "Ayanda",
              "Bianca",
              "Brian",
              "Camila",
              "Emma",
              "Gabrielle",
              "Ivy",
              "Joanna",
              "Joey",
              "Justin",
              "Kendra",
              "Kevin",
              "Kimberly",
              "Lea",
              "Lucia",
              "Lupe",
              "Matthew",
              "Olivia",
              "Salli",
              "Seoyeon",
              "Takumi",
              "Vicki"
            ],
            "nullable": false
          },
          "language": {
            "type": "string",
            "description": "Voice customization options. To save the language of the selected agent voice",
            "example": "English (United States)"
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "TextToSpeechProviders1": {
        "anyOf": [
          {
            "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
            "properties": {
              "type": {
                "enum": [
                  "microsoft"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                "example": "en-US-JennyNeural",
                "default": "en-US-JennyNeural"
              },
              "voice_config": {
                "description": "Voice customization options",
                "properties": {
                  "style": {
                    "type": "string",
                    "description": "The style of the voice.\nAvailable styles change between voices."
                  },
                  "rate": {
                    "type": "string",
                    "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                    "example": "0.5"
                  },
                  "pitch": {
                    "type": "string",
                    "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                    "example": "+2st"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "language": {
                "type": "string",
                "description": "Voice customization options. To save the language of the selected agent voice",
                "example": "English (United States)"
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "description": "Afflorithmics provider details, contains the provider type and requested voice id, available for enterprise users.",
            "properties": {
              "type": {
                "enum": [
                  "afflorithmics"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices.",
                "example": "abc123DEF456",
                "default": "abc123DEF456"
              },
              "voice_config": {
                "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
                "properties": {
                  "rate": {
                    "type": "string",
                    "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                    "example": "1.2",
                    "default": "1"
                  },
                  "silencePadding": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                  },
                  "voiceIntelligence": {
                    "type": "boolean",
                    "description": "Flag to apply lexicographical text corrections"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "language": {
                "type": "string",
                "description": "Voice customization options. To save the language of the selected agent voice",
                "example": "English (United States)"
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "description": "Elevenlabs provider details, contains the provider type and requested voice id, available for premium users.",
            "properties": {
              "type": {
                "enum": [
                  "elevenlabs"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                "example": "21m00Tcm4TlvDq8ikWAM",
                "default": "21m00Tcm4TlvDq8ikWAM"
              },
              "voice_config": {
                "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                "properties": {
                  "stability": {
                    "type": "number",
                    "format": "double",
                    "description": "How stable the voice is and the randomness of each new generation.",
                    "example": "0"
                  },
                  "similarity_boost": {
                    "type": "number",
                    "format": "double",
                    "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                    "example": "0"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "model_id": {
                "type": "string",
                "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                "example": "eleven_multilingual_v2",
                "default": "eleven_multilingual_v2"
              },
              "shouldAddDefaultOutputFormat": {
                "type": "boolean",
                "description": "Add default outputformat to the stream request if true"
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "description": "Amazon provider details, contains the provider type and requested voice id",
            "properties": {
              "type": {
                "enum": [
                  "amazon"
                ],
                "type": "string"
              },
              "voice_id": {
                "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/text-to-speech-providers",
                "example": "Joanna",
                "type": "string",
                "enum": [
                  "Amy",
                  "Aria",
                  "Ayanda",
                  "Bianca",
                  "Brian",
                  "Camila",
                  "Emma",
                  "Gabrielle",
                  "Ivy",
                  "Joanna",
                  "Joey",
                  "Justin",
                  "Kendra",
                  "Kevin",
                  "Kimberly",
                  "Lea",
                  "Lucia",
                  "Lupe",
                  "Matthew",
                  "Olivia",
                  "Salli",
                  "Seoyeon",
                  "Takumi",
                  "Vicki"
                ],
                "nullable": false
              },
              "language": {
                "type": "string",
                "description": "Voice customization options. To save the language of the selected agent voice",
                "example": "English (United States)"
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "properties": {
              "type": {
                "enum": [
                  "google"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices.",
                "example": "he-IL-Wavenet-A",
                "default": "he-IL-Wavenet-A"
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "TextScript1": {
        "description": "Text script contains an input text to be spoken by the actor",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "text"
            ],
            "nullable": false,
            "description": "The type of the script."
          },
          "subtitles": {
            "type": "boolean",
            "description": "Should subtitles be created.",
            "default": "false"
          },
          "provider": {
            "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
            "anyOf": [
              {
                "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                "properties": {
                  "type": {
                    "enum": [
                      "microsoft"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                    "example": "en-US-JennyNeural",
                    "default": "en-US-JennyNeural"
                  },
                  "voice_config": {
                    "description": "Voice customization options",
                    "properties": {
                      "style": {
                        "type": "string",
                        "description": "The style of the voice.\nAvailable styles change between voices."
                      },
                      "rate": {
                        "type": "string",
                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                        "example": "0.5"
                      },
                      "pitch": {
                        "type": "string",
                        "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                        "example": "+2st"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "language": {
                    "type": "string",
                    "description": "Voice customization options. To save the language of the selected agent voice",
                    "example": "English (United States)"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "description": "Afflorithmics provider details, contains the provider type and requested voice id, available for enterprise users.",
                "properties": {
                  "type": {
                    "enum": [
                      "afflorithmics"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices.",
                    "example": "abc123DEF456",
                    "default": "abc123DEF456"
                  },
                  "voice_config": {
                    "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
                    "properties": {
                      "rate": {
                        "type": "string",
                        "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                        "example": "1.2",
                        "default": "1"
                      },
                      "silencePadding": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                      },
                      "voiceIntelligence": {
                        "type": "boolean",
                        "description": "Flag to apply lexicographical text corrections"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "language": {
                    "type": "string",
                    "description": "Voice customization options. To save the language of the selected agent voice",
                    "example": "English (United States)"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "description": "Elevenlabs provider details, contains the provider type and requested voice id, available for premium users.",
                "properties": {
                  "type": {
                    "enum": [
                      "elevenlabs"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                    "example": "21m00Tcm4TlvDq8ikWAM",
                    "default": "21m00Tcm4TlvDq8ikWAM"
                  },
                  "voice_config": {
                    "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                    "properties": {
                      "stability": {
                        "type": "number",
                        "format": "double",
                        "description": "How stable the voice is and the randomness of each new generation.",
                        "example": "0"
                      },
                      "similarity_boost": {
                        "type": "number",
                        "format": "double",
                        "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                        "example": "0"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "model_id": {
                    "type": "string",
                    "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                    "example": "eleven_multilingual_v2",
                    "default": "eleven_multilingual_v2"
                  },
                  "shouldAddDefaultOutputFormat": {
                    "type": "boolean",
                    "description": "Add default outputformat to the stream request if true"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "description": "Amazon provider details, contains the provider type and requested voice id",
                "properties": {
                  "type": {
                    "enum": [
                      "amazon"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/text-to-speech-providers",
                    "example": "Joanna",
                    "type": "string",
                    "enum": [
                      "Amy",
                      "Aria",
                      "Ayanda",
                      "Bianca",
                      "Brian",
                      "Camila",
                      "Emma",
                      "Gabrielle",
                      "Ivy",
                      "Joanna",
                      "Joey",
                      "Justin",
                      "Kendra",
                      "Kevin",
                      "Kimberly",
                      "Lea",
                      "Lucia",
                      "Lupe",
                      "Matthew",
                      "Olivia",
                      "Salli",
                      "Seoyeon",
                      "Takumi",
                      "Vicki"
                    ],
                    "nullable": false
                  },
                  "language": {
                    "type": "string",
                    "description": "Voice customization options. To save the language of the selected agent voice",
                    "example": "English (United States)"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "google"
                    ],
                    "type": "string"
                  },
                  "voice_id": {
                    "type": "string",
                    "description": "The voice_id from the list of available voices.",
                    "example": "he-IL-Wavenet-A",
                    "default": "he-IL-Wavenet-A"
                  }
                },
                "required": [
                  "type",
                  "voice_id"
                ],
                "type": "object",
                "additionalProperties": false
              }
            ]
          },
          "input": {
            "type": "string",
            "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.",
            "example": "This is an example text",
            "maxLength": 40000,
            "minLength": 3
          },
          "ssml": {
            "type": "boolean",
            "description": "Is the text provided in ssml form.",
            "default": "false"
          }
        },
        "required": [
          "type",
          "input"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "AudioScript1": {
        "description": "Audio script contains an audio file url to be spoken by the actor",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "audio"
            ],
            "nullable": false,
            "description": "The type of the script."
          },
          "subtitles": {
            "type": "boolean",
            "description": "Should subtitles be created.",
            "default": "false"
          },
          "audio_url": {
            "description": "The URL of the audio file which will be used by the actor.\nFile size is limited to 15MB.\nAudio length is limited 5 minutes for clips and 10 minutes for talks.",
            "type": "string",
            "example": "https://path.to/audio.mp3",
            "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
          }
        },
        "required": [
          "type",
          "audio_url"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Script1": {
        "anyOf": [
          {
            "description": "Text script contains an input text to be spoken by the actor",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "text"
                ],
                "nullable": false,
                "description": "The type of the script."
              },
              "subtitles": {
                "type": "boolean",
                "description": "Should subtitles be created.",
                "default": "false"
              },
              "provider": {
                "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                "anyOf": [
                  {
                    "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                    "properties": {
                      "type": {
                        "enum": [
                          "microsoft"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                        "example": "en-US-JennyNeural",
                        "default": "en-US-JennyNeural"
                      },
                      "voice_config": {
                        "description": "Voice customization options",
                        "properties": {
                          "style": {
                            "type": "string",
                            "description": "The style of the voice.\nAvailable styles change between voices."
                          },
                          "rate": {
                            "type": "string",
                            "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                            "example": "0.5"
                          },
                          "pitch": {
                            "type": "string",
                            "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                            "example": "+2st"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "language": {
                        "type": "string",
                        "description": "Voice customization options. To save the language of the selected agent voice",
                        "example": "English (United States)"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "description": "Afflorithmics provider details, contains the provider type and requested voice id, available for enterprise users.",
                    "properties": {
                      "type": {
                        "enum": [
                          "afflorithmics"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices.",
                        "example": "abc123DEF456",
                        "default": "abc123DEF456"
                      },
                      "voice_config": {
                        "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
                        "properties": {
                          "rate": {
                            "type": "string",
                            "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                            "example": "1.2",
                            "default": "1"
                          },
                          "silencePadding": {
                            "type": "number",
                            "format": "double",
                            "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                          },
                          "voiceIntelligence": {
                            "type": "boolean",
                            "description": "Flag to apply lexicographical text corrections"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "language": {
                        "type": "string",
                        "description": "Voice customization options. To save the language of the selected agent voice",
                        "example": "English (United States)"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "description": "Elevenlabs provider details, contains the provider type and requested voice id, available for premium users.",
                    "properties": {
                      "type": {
                        "enum": [
                          "elevenlabs"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                        "example": "21m00Tcm4TlvDq8ikWAM",
                        "default": "21m00Tcm4TlvDq8ikWAM"
                      },
                      "voice_config": {
                        "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                        "properties": {
                          "stability": {
                            "type": "number",
                            "format": "double",
                            "description": "How stable the voice is and the randomness of each new generation.",
                            "example": "0"
                          },
                          "similarity_boost": {
                            "type": "number",
                            "format": "double",
                            "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                            "example": "0"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "model_id": {
                        "type": "string",
                        "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                        "example": "eleven_multilingual_v2",
                        "default": "eleven_multilingual_v2"
                      },
                      "shouldAddDefaultOutputFormat": {
                        "type": "boolean",
                        "description": "Add default outputformat to the stream request if true"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "description": "Amazon provider details, contains the provider type and requested voice id",
                    "properties": {
                      "type": {
                        "enum": [
                          "amazon"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/text-to-speech-providers",
                        "example": "Joanna",
                        "type": "string",
                        "enum": [
                          "Amy",
                          "Aria",
                          "Ayanda",
                          "Bianca",
                          "Brian",
                          "Camila",
                          "Emma",
                          "Gabrielle",
                          "Ivy",
                          "Joanna",
                          "Joey",
                          "Justin",
                          "Kendra",
                          "Kevin",
                          "Kimberly",
                          "Lea",
                          "Lucia",
                          "Lupe",
                          "Matthew",
                          "Olivia",
                          "Salli",
                          "Seoyeon",
                          "Takumi",
                          "Vicki"
                        ],
                        "nullable": false
                      },
                      "language": {
                        "type": "string",
                        "description": "Voice customization options. To save the language of the selected agent voice",
                        "example": "English (United States)"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "properties": {
                      "type": {
                        "enum": [
                          "google"
                        ],
                        "type": "string"
                      },
                      "voice_id": {
                        "type": "string",
                        "description": "The voice_id from the list of available voices.",
                        "example": "he-IL-Wavenet-A",
                        "default": "he-IL-Wavenet-A"
                      }
                    },
                    "required": [
                      "type",
                      "voice_id"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                ]
              },
              "input": {
                "type": "string",
                "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.",
                "example": "This is an example text",
                "maxLength": 40000,
                "minLength": 3
              },
              "ssml": {
                "type": "boolean",
                "description": "Is the text provided in ssml form.",
                "default": "false"
              }
            },
            "required": [
              "type",
              "input"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "description": "Audio script contains an audio file url to be spoken by the actor",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "audio"
                ],
                "nullable": false,
                "description": "The type of the script."
              },
              "subtitles": {
                "type": "boolean",
                "description": "Should subtitles be created.",
                "default": "false"
              },
              "audio_url": {
                "description": "The URL of the audio file which will be used by the actor.\nFile size is limited to 15MB.\nAudio length is limited 5 minutes for clips and 10 minutes for talks.",
                "type": "string",
                "example": "https://path.to/audio.mp3",
                "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
              }
            },
            "required": [
              "type",
              "audio_url"
            ],
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ClipConfig": {
        "properties": {
          "logo": {
            "anyOf": [
              {
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                    "pattern": "((https|s3):\\/\\/.+)"
                  },
                  "position": {
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "type": "array",
                    "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                    "example": [
                      0,
                      500
                    ],
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "required": [
                  "url",
                  "position"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "type": "boolean"
              }
            ]
          },
          "result_format": {
            "type": "string",
            "enum": [
              "mp4",
              "gif",
              "mov",
              "webm"
            ],
            "description": "File format of the animated result",
            "default": "mp4"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "ClipCropType": {
        "type": "string",
        "enum": [
          "rectangle",
          "wide"
        ]
      },
      "WideCrop": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "wide"
            ],
            "nullable": false,
            "description": "The type of the crop."
          }
        },
        "required": [
          "type"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "RectangleCrop": {
        "description": "Custom crop",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "rectangle"
            ],
            "nullable": false,
            "description": "The type of the crop."
          },
          "rectangle": {
            "properties": {
              "bottom": {
                "type": "number",
                "format": "double",
                "description": "Bottom position.",
                "example": 1
              },
              "right": {
                "type": "number",
                "format": "double",
                "description": "Right position.",
                "example": 1
              },
              "left": {
                "type": "number",
                "format": "double",
                "description": "Left position.",
                "example": 0
              },
              "top": {
                "type": "number",
                "format": "double",
                "description": "Top position.",
                "example": 0
              }
            },
            "required": [
              "bottom",
              "right",
              "left",
              "top"
            ],
            "type": "object",
            "description": "A set of numbers between 0 and 1 representing the top, left, right and bottom of the crop.\nEach number correlates to the distance from the top left corner of the image, relative the the image width.\nFor example, right: 0.75 means that the right side of the crop is 75% of the image width from the left side."
          }
        },
        "required": [
          "type",
          "rectangle"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Crop": {
        "anyOf": [
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "wide"
                ],
                "nullable": false,
                "description": "The type of the crop."
              }
            },
            "required": [
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "description": "Custom crop",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "rectangle"
                ],
                "nullable": false,
                "description": "The type of the crop."
              },
              "rectangle": {
                "properties": {
                  "bottom": {
                    "type": "number",
                    "format": "double",
                    "description": "Bottom position.",
                    "example": 1
                  },
                  "right": {
                    "type": "number",
                    "format": "double",
                    "description": "Right position.",
                    "example": 1
                  },
                  "left": {
                    "type": "number",
                    "format": "double",
                    "description": "Left position.",
                    "example": 0
                  },
                  "top": {
                    "type": "number",
                    "format": "double",
                    "description": "Top position.",
                    "example": 0
                  }
                },
                "required": [
                  "bottom",
                  "right",
                  "left",
                  "top"
                ],
                "type": "object",
                "description": "A set of numbers between 0 and 1 representing the top, left, right and bottom of the crop.\nEach number correlates to the distance from the top left corner of the image, relative the the image width.\nFor example, right: 0.75 means that the right side of the crop is 75% of the image width from the left side."
              }
            },
            "required": [
              "type",
              "rectangle"
            ],
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ClipPresenterConfig": {
        "properties": {
          "crop": {
            "anyOf": [
              {
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "wide"
                    ],
                    "nullable": false,
                    "description": "The type of the crop."
                  }
                },
                "required": [
                  "type"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "description": "Custom crop",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "rectangle"
                    ],
                    "nullable": false,
                    "description": "The type of the crop."
                  },
                  "rectangle": {
                    "properties": {
                      "bottom": {
                        "type": "number",
                        "format": "double",
                        "description": "Bottom position.",
                        "example": 1
                      },
                      "right": {
                        "type": "number",
                        "format": "double",
                        "description": "Right position.",
                        "example": 1
                      },
                      "left": {
                        "type": "number",
                        "format": "double",
                        "description": "Left position.",
                        "example": 0
                      },
                      "top": {
                        "type": "number",
                        "format": "double",
                        "description": "Top position.",
                        "example": 0
                      }
                    },
                    "required": [
                      "bottom",
                      "right",
                      "left",
                      "top"
                    ],
                    "type": "object",
                    "description": "A set of numbers between 0 and 1 representing the top, left, right and bottom of the crop.\nEach number correlates to the distance from the top left corner of the image, relative the the image width.\nFor example, right: 0.75 means that the right side of the crop is 75% of the image width from the left side."
                  }
                },
                "required": [
                  "type",
                  "rectangle"
                ],
                "type": "object",
                "additionalProperties": false
              }
            ]
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "ClipBackground": {
        "properties": {
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ],
            "description": "Background color of the animated result, or false to use transparent background in-case of webm result format.",
            "example": "#47ffff",
            "pattern": "^#[a-fA-F0-9]{6}$"
          },
          "source_url": {
            "type": "string",
            "description": "URL to image that will be used as background.",
            "example": "https://path.to.image/"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "CreateClipRequest": {
        "properties": {
          "presenter_id": {
            "type": "string",
            "description": "a selection from the list or provided driver ids.",
            "example": "amy-Aq6OmGZnMt"
          },
          "driver_id": {
            "type": "string",
            "description": "a selection from the list or provided driver ids.\nIf not provided a driver video will be selected for you from the predefined drivers bank.",
            "example": "Vcq0R4a8F0"
          },
          "script": {
            "anyOf": [
              {
                "description": "Text script contains an input text to be spoken by the actor",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "text"
                    ],
                    "nullable": false,
                    "description": "The type of the script."
                  },
                  "subtitles": {
                    "type": "boolean",
                    "description": "Should subtitles be created.",
                    "default": "false"
                  },
                  "provider": {
                    "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                    "anyOf": [
                      {
                        "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                        "properties": {
                          "type": {
                            "enum": [
                              "microsoft"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                            "example": "en-US-JennyNeural",
                            "default": "en-US-JennyNeural"
                          },
                          "voice_config": {
                            "description": "Voice customization options",
                            "properties": {
                              "style": {
                                "type": "string",
                                "description": "The style of the voice.\nAvailable styles change between voices."
                              },
                              "rate": {
                                "type": "string",
                                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                "example": "0.5"
                              },
                              "pitch": {
                                "type": "string",
                                "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                "example": "+2st"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "description": "Afflorithmics provider details, contains the provider type and requested voice id, available for enterprise users.",
                        "properties": {
                          "type": {
                            "enum": [
                              "afflorithmics"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.",
                            "example": "abc123DEF456",
                            "default": "abc123DEF456"
                          },
                          "voice_config": {
                            "description": "Voice customization options. Read more here: https://docs.audiostack.ai/reference/postspeech",
                            "properties": {
                              "rate": {
                                "type": "string",
                                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                "example": "1.2",
                                "default": "1"
                              },
                              "silencePadding": {
                                "type": "number",
                                "format": "double",
                                "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                              },
                              "voiceIntelligence": {
                                "type": "boolean",
                                "description": "Flag to apply lexicographical text corrections"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "description": "Elevenlabs provider details, contains the provider type and requested voice id, available for premium users.",
                        "properties": {
                          "type": {
                            "enum": [
                              "elevenlabs"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                            "example": "21m00Tcm4TlvDq8ikWAM",
                            "default": "21m00Tcm4TlvDq8ikWAM"
                          },
                          "voice_config": {
                            "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                            "properties": {
                              "stability": {
                                "type": "number",
                                "format": "double",
                                "description": "How stable the voice is and the randomness of each new generation.",
                                "example": "0"
                              },
                              "similarity_boost": {
                                "type": "number",
                                "format": "double",
                                "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                                "example": "0"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "model_id": {
                            "type": "string",
                            "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                            "example": "eleven_multilingual_v2",
                            "default": "eleven_multilingual_v2"
                          },
                          "shouldAddDefaultOutputFormat": {
                            "type": "boolean",
                            "description": "Add default outputformat to the stream request if true"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "description": "Amazon provider details, contains the provider type and requested voice id",
                        "properties": {
                          "type": {
                            "enum": [
                              "amazon"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/text-to-speech-providers",
                            "example": "Joanna",
                            "type": "string",
                            "enum": [
                              "Amy",
                              "Aria",
                              "Ayanda",
                              "Bianca",
                              "Brian",
                              "Camila",
                              "Emma",
                              "Gabrielle",
                              "Ivy",
                              "Joanna",
                              "Joey",
                              "Justin",
                              "Kendra",
                              "Kevin",
                              "Kimberly",
                              "Lea",
                              "Lucia",
                              "Lupe",
                              "Matthew",
                              "Olivia",
                              "Salli",
                              "Seoyeon",
                              "Takumi",
                              "Vicki"
                            ],
                            "nullable": false
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "google"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.",
                            "example": "he-IL-Wavenet-A",
                            "default": "he-IL-Wavenet-A"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    ]
                  },
                  "input": {
                    "type": "string",
                    "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.",
                    "example": "This is an example text",
                    "maxLength": 40000,
                    "minLength": 3
                  },
                  "ssml": {
                    "type": "boolean",
                    "description": "Is the text provided in ssml form.",
                    "default": "false"
                  }
                },
                "required": [
                  "type",
                  "input"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "description": "Audio script contains an audio file url to be spoken by the actor",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "audio"
                    ],
                    "nullable": false,
                    "description": "The type of the script."
                  },
                  "subtitles": {
                    "type": "boolean",
                    "description": "Should subtitles be created.",
                    "default": "false"
                  },
                  "audio_url": {
                    "description": "The URL of the audio file which will be used by the actor.\nFile size is limited to 15MB.\nAudio length is limited 5 minutes for clips and 10 minutes for talks.",
                    "type": "string",
                    "example": "https://path.to/audio.mp3",
                    "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
                  }
                },
                "required": [
                  "type",
                  "audio_url"
                ],
                "type": "object",
                "additionalProperties": false
              }
            ]
          },
          "config": {
            "description": "Advanced configuration options.",
            "properties": {
              "logo": {
                "anyOf": [
                  {
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                        "pattern": "((https|s3):\\/\\/.+)"
                      },
                      "position": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                        "example": [
                          0,
                          500
                        ],
                        "minItems": 2,
                        "maxItems": 2
                      }
                    },
                    "required": [
                      "url",
                      "position"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "result_format": {
                "type": "string",
                "enum": [
                  "mp4",
                  "gif",
                  "mov",
                  "webm"
                ],
                "description": "File format of the animated result",
                "default": "mp4"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "created_by": {
            "type": "string",
            "description": "The user created the clip."
          },
          "presenter_config": {
            "description": "Advanced presenter configuration options.",
            "properties": {
              "crop": {
                "anyOf": [
                  {
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "wide"
                        ],
                        "nullable": false,
                        "description": "The type of the crop."
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "description": "Custom crop",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "rectangle"
                        ],
                        "nullable": false,
                        "description": "The type of the crop."
                      },
                      "rectangle": {
                        "properties": {
                          "bottom": {
                            "type": "number",
                            "format": "double",
                            "description": "Bottom position.",
                            "example": 1
                          },
                          "right": {
                            "type": "number",
                            "format": "double",
                            "description": "Right position.",
                            "example": 1
                          },
                          "left": {
                            "type": "number",
                            "format": "double",
                            "description": "Left position.",
                            "example": 0
                          },
                          "top": {
                            "type": "number",
                            "format": "double",
                            "description": "Top position.",
                            "example": 0
                          }
                        },
                        "required": [
                          "bottom",
                          "right",
                          "left",
                          "top"
                        ],
                        "type": "object",
                        "description": "A set of numbers between 0 and 1 representing the top, left, right and bottom of the crop.\nEach number correlates to the distance from the top left corner of the image, relative the the image width.\nFor example, right: 0.75 means that the right side of the crop is 75% of the image width from the left side."
                      }
                    },
                    "required": [
                      "type",
                      "rectangle"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                ]
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "background": {
            "description": "Background color of the clip result",
            "properties": {
              "color": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean",
                    "enum": [
                      false
                    ]
                  }
                ],
                "description": "Background color of the animated result, or false to use transparent background in-case of webm result format.",
                "example": "#47ffff",
                "pattern": "^#[a-fA-F0-9]{6}$"
              },
              "source_url": {
                "type": "string",
                "description": "URL to image that will be used as background.",
                "example": "https://path.to.image/"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "user_data": {
            "description": "Non-sensitive custom data that will be added to the clip response and webhook.",
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "pattern": "^(?!\\s*$).+$"
          },
          "name": {
            "type": "string",
            "description": "The name of the clip"
          },
          "webhook": {
            "description": "A webhook URL for sending the payload including animate details.\nIn a case of empty value, the webhook will not be triggered.",
            "example": "https://host.domain.tld/to/webhook",
            "type": "string",
            "pattern": "^(?:https):\\/\\/[\\S]+$"
          },
          "result_url": {
            "description": "The URL of the clip video, if not provided use default destination.",
            "example": "https://path.to.directory/",
            "type": "string",
            "pattern": "(https|s3):\\/\\/.+"
          },
          "raw_result_url": {
            "description": "The URL of the raw clip video, if not provided use default destination.",
            "example": "https://path.to.directory/",
            "type": "string",
            "pattern": "(https|s3):\\/\\/.+"
          },
          "persist": {
            "type": "boolean",
            "description": "Whether the video should remain in storage without TTL."
          }
        },
        "required": [
          "presenter_id",
          "script"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "GetClipResponse": {
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object"
          },
          "owner_id": {
            "type": "string",
            "description": "Unique identifier of the owner that submitted the clip"
          },
          "audio_url": {
            "description": "The URL of the audio file which will be used by the actor",
            "example": "https://path.to/audio.mp3",
            "type": "string",
            "pattern": "^(?:https):\\/\\/[\\S]+$"
          },
          "created_at": {
            "type": "string",
            "description": "Clip creation time as iso-8601 string"
          },
          "created_by": {
            "type": "string",
            "description": "The user id that created the clip"
          },
          "modified_at": {
            "type": "string",
            "description": "last modified time as iso-8601 string"
          },
          "started_at": {
            "type": "string",
            "description": "Clip start time as iso-8601 string"
          },
          "completed_at": {
            "type": "string",
            "description": "Clip completion time as iso-8601 string"
          },
          "config": {
            "description": "The configuration that used to process the clip",
            "properties": {
              "logo": {
                "anyOf": [
                  {
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                        "pattern": "((https|s3):\\/\\/.+)"
                      },
                      "position": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                        "example": [
                          0,
                          500
                        ],
                        "minItems": 2,
                        "maxItems": 2
                      }
                    },
                    "required": [
                      "url",
                      "position"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "result_format": {
                "type": "string",
                "enum": [
                  "mp4",
                  "gif",
                  "mov",
                  "webm"
                ],
                "description": "File format of the animated result",
                "default": "mp4"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "status": {
            "description": "The status of the clip",
            "enum": [
              "created",
              "done",
              "error",
              "started",
              "rejected"
            ],
            "type": "string"
          },
          "result_url": {
            "type": "string",
            "description": "The result url of the clip"
          },
          "presenter_id": {
            "type": "string",
            "description": "The identity of the actor that is used in the clip"
          },
          "driver_id": {
            "type": "string",
            "description": "The identifier of the presenter's acting driver that is used in the clip"
          },
          "metadata": {
            "description": "metadata that has been collected through the process",
            "properties": {},
            "type": "object"
          },
          "webhook": {
            "type": "string",
            "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
          },
          "name": {
            "type": "string",
            "description": "The name of the clip"
          }
        },
        "required": [
          "id",
          "owner_id",
          "created_at",
          "modified_at",
          "status"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "GetClipsResponse": {
        "properties": {
          "clips": {
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the object"
                },
                "owner_id": {
                  "type": "string",
                  "description": "Unique identifier of the owner that submitted the clip"
                },
                "audio_url": {
                  "description": "The URL of the audio file which will be used by the actor",
                  "example": "https://path.to/audio.mp3",
                  "type": "string",
                  "pattern": "^(?:https):\\/\\/[\\S]+$"
                },
                "created_at": {
                  "type": "string",
                  "description": "Clip creation time as iso-8601 string"
                },
                "created_by": {
                  "type": "string",
                  "description": "The user id that created the clip"
                },
                "modified_at": {
                  "type": "string",
                  "description": "last modified time as iso-8601 string"
                },
                "started_at": {
                  "type": "string",
                  "description": "Clip start time as iso-8601 string"
                },
                "completed_at": {
                  "type": "string",
                  "description": "Clip completion time as iso-8601 string"
                },
                "config": {
                  "description": "The configuration that used to process the clip",
                  "properties": {
                    "logo": {
                      "anyOf": [
                        {
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                              "pattern": "((https|s3):\\/\\/.+)"
                            },
                            "position": {
                              "items": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "type": "array",
                              "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                              "example": [
                                0,
                                500
                              ],
                              "minItems": 2,
                              "maxItems": 2
                            }
                          },
                          "required": [
                            "url",
                            "position"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        {
                          "type": "boolean"
                        }
                      ]
                    },
                    "result_format": {
                      "type": "string",
                      "enum": [
                        "mp4",
                        "gif",
                        "mov",
                        "webm"
                      ],
                      "description": "File format of the animated result",
                      "default": "mp4"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "status": {
                  "description": "The status of the clip",
                  "enum": [
                    "created",
                    "done",
                    "error",
                    "started",
                    "rejected"
                  ],
                  "type": "string"
                },
                "result_url": {
                  "type": "string",
                  "description": "The result url of the clip"
                },
                "presenter_id": {
                  "type": "string",
                  "description": "The identity of the actor that is used in the clip"
                },
                "driver_id": {
                  "type": "string",
                  "description": "The identifier of the presenter's acting driver that is used in the clip"
                },
                "metadata": {
                  "description": "metadata that has been collected through the process",
                  "properties": {},
                  "type": "object"
                },
                "webhook": {
                  "type": "string",
                  "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the clip"
                }
              },
              "required": [
                "id",
                "owner_id",
                "created_at",
                "modified_at",
                "status"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "type": "array"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "clips"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "UpdateClipFields": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "InitClipStreamRequest": {
        "properties": {
          "presenter_id": {
            "type": "string",
            "description": "ID of the selected presenter.",
            "example": "rian-lZC6MmWfC1"
          },
          "driver_id": {
            "type": "string",
            "description": "ID of the selected driver.\nIf not provided a driver video will be selected for you from the predefined drivers bank.",
            "example": "mXra4jY38i"
          },
          "compatibility_mode": {
            "description": "Defines the video codec to be used in the stream.\nWhen set to on: VP8 will be used.\nWhen set to off: H264 will be used\nWhen set to auto the codec will be selected according to the browser.",
            "type": "string",
            "enum": [
              "on",
              "off",
              "auto"
            ]
          },
          "stream_warmup": {
            "type": "boolean",
            "description": "Whether to stream wamrup video on the connection.\nIf set to true, will stream a warmup video when connection is established.\nAt the end of the warmup video, a message containing \"stream/ready\" will be sent on the data channel.",
            "default": "false"
          },
          "session_timeout": {
            "type": "number",
            "format": "double",
            "description": "Maximum duration (in seconds) between messages before session times out.\nCan only be used with proper permissions",
            "example": 180,
            "maximum": 300
          }
        },
        "required": [
          "presenter_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Elevenlabs_stream_tts_provider1": {
        "properties": {
          "type": {
            "enum": [
              "elevenlabs"
            ],
            "type": "string"
          },
          "voice_id": {
            "type": "string",
            "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
            "example": "21m00Tcm4TlvDq8ikWAM",
            "default": "21m00Tcm4TlvDq8ikWAM"
          },
          "voice_config": {
            "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
            "properties": {
              "stability": {
                "type": "number",
                "format": "double",
                "description": "How stable the voice is and the randomness of each new generation.",
                "example": "0"
              },
              "similarity_boost": {
                "type": "number",
                "format": "double",
                "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                "example": "0"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "model_id": {
            "type": "string",
            "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
            "example": "eleven_multilingual_v2",
            "default": "eleven_multilingual_v2"
          },
          "shouldAddDefaultOutputFormat": {
            "type": "boolean",
            "description": "Add default outputformat to the stream request if true"
          },
          "access": {
            "description": "The access level of the requested voice.",
            "enum": [
              "public",
              "premium",
              "private",
              "external-private"
            ],
            "type": "string"
          },
          "language": {
            "type": "string",
            "description": "Voice customization options. To save the language of the selected agent voice",
            "example": "English (United States)"
          }
        },
        "required": [
          "type",
          "voice_id"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "AgentsTextToSpeechProviders1": {
        "anyOf": [
          {
            "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
            "properties": {
              "type": {
                "enum": [
                  "microsoft"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                "example": "en-US-JennyNeural",
                "default": "en-US-JennyNeural"
              },
              "voice_config": {
                "description": "Voice customization options",
                "properties": {
                  "style": {
                    "type": "string",
                    "description": "The style of the voice.\nAvailable styles change between voices."
                  },
                  "rate": {
                    "type": "string",
                    "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                    "example": "0.5"
                  },
                  "pitch": {
                    "type": "string",
                    "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                    "example": "+2st"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "language": {
                "type": "string",
                "description": "Voice customization options. To save the language of the selected agent voice",
                "example": "English (United States)"
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          },
          {
            "properties": {
              "type": {
                "enum": [
                  "elevenlabs"
                ],
                "type": "string"
              },
              "voice_id": {
                "type": "string",
                "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                "example": "21m00Tcm4TlvDq8ikWAM",
                "default": "21m00Tcm4TlvDq8ikWAM"
              },
              "voice_config": {
                "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                "properties": {
                  "stability": {
                    "type": "number",
                    "format": "double",
                    "description": "How stable the voice is and the randomness of each new generation.",
                    "example": "0"
                  },
                  "similarity_boost": {
                    "type": "number",
                    "format": "double",
                    "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                    "example": "0"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "model_id": {
                "type": "string",
                "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                "example": "eleven_multilingual_v2",
                "default": "eleven_multilingual_v2"
              },
              "shouldAddDefaultOutputFormat": {
                "type": "boolean",
                "description": "Add default outputformat to the stream request if true"
              },
              "access": {
                "description": "The access level of the requested voice.",
                "enum": [
                  "public",
                  "premium",
                  "private",
                  "external-private"
                ],
                "type": "string"
              },
              "language": {
                "type": "string",
                "description": "Voice customization options. To save the language of the selected agent voice",
                "example": "English (United States)"
              }
            },
            "required": [
              "type",
              "voice_id"
            ],
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ClipStreamConfig": {
        "properties": {
          "logo": {
            "anyOf": [
              {
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                    "pattern": "((https|s3):\\/\\/.+)"
                  },
                  "position": {
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "type": "array",
                    "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                    "example": [
                      0,
                      500
                    ],
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "required": [
                  "url",
                  "position"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "type": "boolean"
              }
            ]
          },
          "result_format": {
            "type": "string",
            "enum": [
              "mp4",
              "gif",
              "mov"
            ],
            "description": "File format of the animated result",
            "default": "mp4"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "CreateClipStreamRequest": {
        "properties": {
          "session_id": {
            "type": "string"
          },
          "presenter_id": {
            "type": "string",
            "description": "a selection from the list or provided driver ids.",
            "example": "amy-Aq6OmGZnMt",
            "deprecated": true
          },
          "driver_id": {
            "type": "string",
            "description": "a selection from the list or provided driver ids.\nIf not provided a driver video will be selected for you from the predefined drivers bank.",
            "example": "a5PgMbeGQE",
            "default": "a5PgMbeGQE",
            "deprecated": true
          },
          "script": {
            "anyOf": [
              {
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "text"
                    ],
                    "nullable": false,
                    "description": "The type of the script."
                  },
                  "provider": {
                    "description": "text-to-speech provider from list of supported providers. default is microsoft tts",
                    "anyOf": [
                      {
                        "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                        "properties": {
                          "type": {
                            "enum": [
                              "microsoft"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                            "example": "en-US-JennyNeural",
                            "default": "en-US-JennyNeural"
                          },
                          "voice_config": {
                            "description": "Voice customization options",
                            "properties": {
                              "style": {
                                "type": "string",
                                "description": "The style of the voice.\nAvailable styles change between voices."
                              },
                              "rate": {
                                "type": "string",
                                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                "example": "0.5"
                              },
                              "pitch": {
                                "type": "string",
                                "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                "example": "+2st"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "elevenlabs"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                            "example": "21m00Tcm4TlvDq8ikWAM",
                            "default": "21m00Tcm4TlvDq8ikWAM"
                          },
                          "voice_config": {
                            "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                            "properties": {
                              "stability": {
                                "type": "number",
                                "format": "double",
                                "description": "How stable the voice is and the randomness of each new generation.",
                                "example": "0"
                              },
                              "similarity_boost": {
                                "type": "number",
                                "format": "double",
                                "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                                "example": "0"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "model_id": {
                            "type": "string",
                            "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                            "example": "eleven_multilingual_v2",
                            "default": "eleven_multilingual_v2"
                          },
                          "shouldAddDefaultOutputFormat": {
                            "type": "boolean",
                            "description": "Add default outputformat to the stream request if true"
                          },
                          "access": {
                            "description": "The access level of the requested voice.",
                            "enum": [
                              "public",
                              "premium",
                              "private",
                              "external-private"
                            ],
                            "type": "string"
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    ]
                  },
                  "input": {
                    "type": "string",
                    "description": "The input text that will be synthesized to an audio file.\nNote that each provider has its own limitations on the text length.",
                    "example": "This is an example text",
                    "maxLength": 40000,
                    "minLength": 3
                  },
                  "ssml": {
                    "type": "boolean",
                    "description": "Is the text provided in ssml form.",
                    "default": "false"
                  }
                },
                "required": [
                  "type",
                  "input"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "audio"
                    ],
                    "nullable": false,
                    "description": "The type of the script."
                  },
                  "audio_url": {
                    "description": "The URL of the audio file which will be used by the actor.\nFile size is limit to 15MB.",
                    "type": "string",
                    "example": "https://path.to/audio.mp3",
                    "pattern": "^(https|s3):\\/\\/[\\S]+\\.(?:m4a|M4A|flac|FLAC|mp3|MP3|mp4|MP4|wav|WAV)([?#][\\w.\\/=&#%-]+)?$"
                  }
                },
                "required": [
                  "type",
                  "audio_url"
                ],
                "type": "object",
                "additionalProperties": false
              },
              {
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "llm"
                    ],
                    "nullable": false
                  },
                  "provider": {
                    "anyOf": [
                      {
                        "description": "AzureMicrosoft provider details, contains the provider type and requested voice id and style",
                        "properties": {
                          "type": {
                            "enum": [
                              "microsoft"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices.\nFor full list of voice_ids: https://docs.d-id.com/reference/microsoft-azure",
                            "example": "en-US-JennyNeural",
                            "default": "en-US-JennyNeural"
                          },
                          "voice_config": {
                            "description": "Voice customization options",
                            "properties": {
                              "style": {
                                "type": "string",
                                "description": "The style of the voice.\nAvailable styles change between voices."
                              },
                              "rate": {
                                "type": "string",
                                "description": "The speed of the voice.\nThe value is relative to 1, 0.5 being half speed, 2 being twice as fast, etc.\nAnother option is a constant value from x-slow/slow/medium/fast/x-fast.",
                                "example": "0.5"
                              },
                              "pitch": {
                                "type": "string",
                                "description": "The pitch of the voice.\nValue could be an absolute value in Hz (including units), a relative value in Hz or st(semitones)\nor a constant value from x-low/low/medium/high/x-high.",
                                "example": "+2st"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "elevenlabs"
                            ],
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string",
                            "description": "The voice_id from the list of available voices. https://api.elevenlabs.io/v1/voices.",
                            "example": "21m00Tcm4TlvDq8ikWAM",
                            "default": "21m00Tcm4TlvDq8ikWAM"
                          },
                          "voice_config": {
                            "description": "Voice customization options. Read more here: https://docs.elevenlabs.io/speech-synthesis/voice-settings",
                            "properties": {
                              "stability": {
                                "type": "number",
                                "format": "double",
                                "description": "How stable the voice is and the randomness of each new generation.",
                                "example": "0"
                              },
                              "similarity_boost": {
                                "type": "number",
                                "format": "double",
                                "description": "The similarity slider dictates how closely the AI should adhere to the original voice when attempting to replicate it.",
                                "example": "0"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "model_id": {
                            "type": "string",
                            "description": "The model id from the list of available models. https://elevenlabs.io/docs/speech-synthesis/models.",
                            "example": "eleven_multilingual_v2",
                            "default": "eleven_multilingual_v2"
                          },
                          "shouldAddDefaultOutputFormat": {
                            "type": "boolean",
                            "description": "Add default outputformat to the stream request if true"
                          },
                          "access": {
                            "description": "The access level of the requested voice.",
                            "enum": [
                              "public",
                              "premium",
                              "private",
                              "external-private"
                            ],
                            "type": "string"
                          },
                          "language": {
                            "type": "string",
                            "description": "Voice customization options. To save the language of the selected agent voice",
                            "example": "English (United States)"
                          }
                        },
                        "required": [
                          "type",
                          "voice_id"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      }
                    ]
                  },
                  "ssml": {
                    "type": "boolean"
                  },
                  "llm": {
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "openai"
                        ],
                        "nullable": false
                      },
                      "messages": {
                        "items": {
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "system",
                                "user",
                                "assistant"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "role",
                            "content",
                            "created_at"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "provider",
                      "messages"
                    ],
                    "type": "object"
                  },
                  "input": {
                    "type": "string"
                  },
                  "stream_audio": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "type",
                  "llm"
                ],
                "type": "object",
                "additionalProperties": false
              }
            ]
          },
          "config": {
            "description": "Advanced configuration options.",
            "properties": {
              "logo": {
                "anyOf": [
                  {
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                        "pattern": "((https|s3):\\/\\/.+)"
                      },
                      "position": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                        "example": [
                          0,
                          500
                        ],
                        "minItems": 2,
                        "maxItems": 2
                      }
                    },
                    "required": [
                      "url",
                      "position"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "result_format": {
                "type": "string",
                "enum": [
                  "mp4",
                  "gif",
                  "mov"
                ],
                "description": "File format of the animated result",
                "default": "mp4"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "created_by": {
            "type": "string",
            "description": "The user created the clip."
          },
          "presenter_config": {
            "description": "Advanced presenter configuration options.",
            "properties": {
              "crop": {
                "anyOf": [
                  {
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "wide"
                        ],
                        "nullable": false,
                        "description": "The type of the crop."
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  {
                    "description": "Custom crop",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "rectangle"
                        ],
                        "nullable": false,
                        "description": "The type of the crop."
                      },
                      "rectangle": {
                        "properties": {
                          "bottom": {
                            "type": "number",
                            "format": "double",
                            "description": "Bottom position.",
                            "example": 1
                          },
                          "right": {
                            "type": "number",
                            "format": "double",
                            "description": "Right position.",
                            "example": 1
                          },
                          "left": {
                            "type": "number",
                            "format": "double",
                            "description": "Left position.",
                            "example": 0
                          },
                          "top": {
                            "type": "number",
                            "format": "double",
                            "description": "Top position.",
                            "example": 0
                          }
                        },
                        "required": [
                          "bottom",
                          "right",
                          "left",
                          "top"
                        ],
                        "type": "object",
                        "description": "A set of numbers between 0 and 1 representing the top, left, right and bottom of the crop.\nEach number correlates to the distance from the top left corner of the image, relative the the image width.\nFor example, right: 0.75 means that the right side of the crop is 75% of the image width from the left side."
                      }
                    },
                    "required": [
                      "type",
                      "rectangle"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                ]
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "background": {
            "description": "Background color of the clip result",
            "properties": {
              "color": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean",
                    "enum": [
                      false
                    ]
                  }
                ],
                "description": "Background color of the animated result, or false to use transparent background in-case of webm result format.",
                "example": "#47ffff",
                "pattern": "^#[a-fA-F0-9]{6}$"
              },
              "source_url": {
                "type": "string",
                "description": "URL to image that will be used as background.",
                "example": "https://path.to.image/"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "user_data": {
            "description": "Non-sensitive custom data that will be added to the clip response and webhook.",
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "pattern": "^(?!\\s*$).+$"
          },
          "name": {
            "type": "string",
            "description": "The name of the clip"
          },
          "result_url": {
            "description": "The URL of the clip video, if not provided use default destination.",
            "example": "https://path.to.directory/",
            "type": "string",
            "pattern": "(https|s3):\\/\\/.+"
          },
          "raw_result_url": {
            "description": "The URL of the raw clip video, if not provided use default destination.",
            "example": "https://path.to.directory/",
            "type": "string",
            "pattern": "(https|s3):\\/\\/.+"
          },
          "metadata": {
            "description": "Metadata passed to the clips worker"
          }
        },
        "required": [
          "script"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ClipDriverDto": {
        "properties": {
          "presenter_id": {
            "type": "string",
            "example": "amy-Aq6OmGZnMt"
          },
          "driver_id": {
            "type": "string",
            "example": "Vcq0R4a8F0"
          },
          "gender": {
            "type": "string",
            "description": "The gender of the presenter.\nmale / female / other"
          },
          "created_at": {
            "type": "string",
            "description": "Creation time as iso-8601 string"
          },
          "owner_id": {
            "type": "string",
            "description": "The owner id of the driver"
          },
          "modified_at": {
            "type": "string",
            "description": "Last modified time as iso-8601 string"
          },
          "width": {
            "type": "number",
            "format": "double",
            "description": "The video width in pixels"
          },
          "height": {
            "type": "number",
            "format": "double",
            "description": "The video height in pixels"
          },
          "driver_image_url": {
            "type": "string",
            "description": "High resolution image of the driver image"
          },
          "thumbnail_url": {
            "type": "string",
            "description": "A low resolution image representing the presenter in the video"
          },
          "video_url": {
            "type": "string",
            "description": "A short video, trimmed from the original driver in high resolution"
          },
          "preview_url": {
            "type": "string",
            "description": "A short gif, trimmed from the original driver in low resolution"
          },
          "chroma_key": {
            "type": "string"
          },
          "chroma_key_similarity": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "description": "A user friendly name for the driver",
            "example": "Amy"
          }
        },
        "required": [
          "presenter_id",
          "driver_id",
          "gender",
          "created_at",
          "owner_id",
          "modified_at",
          "width",
          "height",
          "driver_image_url",
          "thumbnail_url",
          "video_url",
          "preview_url"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "GetClipsDriversResponse": {
        "properties": {
          "clips_drivers": {
            "items": {
              "properties": {
                "presenter_id": {
                  "type": "string",
                  "example": "amy-Aq6OmGZnMt"
                },
                "driver_id": {
                  "type": "string",
                  "example": "Vcq0R4a8F0"
                },
                "gender": {
                  "type": "string",
                  "description": "The gender of the presenter.\nmale / female / other"
                },
                "created_at": {
                  "type": "string",
                  "description": "Creation time as iso-8601 string"
                },
                "owner_id": {
                  "type": "string",
                  "description": "The owner id of the driver"
                },
                "modified_at": {
                  "type": "string",
                  "description": "Last modified time as iso-8601 string"
                },
                "width": {
                  "type": "number",
                  "format": "double",
                  "description": "The video width in pixels"
                },
                "height": {
                  "type": "number",
                  "format": "double",
                  "description": "The video height in pixels"
                },
                "driver_image_url": {
                  "type": "string",
                  "description": "High resolution image of the driver image"
                },
                "thumbnail_url": {
                  "type": "string",
                  "description": "A low resolution image representing the presenter in the video"
                },
                "video_url": {
                  "type": "string",
                  "description": "A short video, trimmed from the original driver in high resolution"
                },
                "preview_url": {
                  "type": "string",
                  "description": "A short gif, trimmed from the original driver in low resolution"
                },
                "chroma_key": {
                  "type": "string"
                },
                "chroma_key_similarity": {
                  "type": "number",
                  "format": "double"
                },
                "name": {
                  "type": "string",
                  "description": "A user friendly name for the driver",
                  "example": "Amy"
                }
              },
              "required": [
                "presenter_id",
                "driver_id",
                "gender",
                "created_at",
                "owner_id",
                "modified_at",
                "width",
                "height",
                "driver_image_url",
                "thumbnail_url",
                "video_url",
                "preview_url"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "type": "array"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "clips_drivers"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "AnimationStatus": {
        "enum": [
          "created",
          "done",
          "error",
          "started"
        ],
        "type": "string"
      },
      "CreateAnimationResponseDto": {
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the animation"
          },
          "object": {
            "type": "string",
            "description": "An identifier of this animation"
          },
          "created_by": {
            "type": "string",
            "description": "The user id of the user that created the animation"
          },
          "created_at": {
            "type": "string",
            "description": "Animation creation time as iso-8601 string"
          },
          "status": {
            "description": "The status of the animation",
            "enum": [
              "created",
              "done",
              "error",
              "started"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "object",
          "created_by",
          "created_at",
          "status"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "JsonError1": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "details": {}
        },
        "required": [
          "kind",
          "description"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RemoteImageUrl": {
        "type": "string",
        "example": "https://path.to.directory/image.jpg",
        "pattern": "(https|s3):.*\\.(?:jpg|jpeg|tiff|png|bmp|JPG|JPEG|TIFF|PNG|BMP)"
      },
      "Rect1": {
        "properties": {
          "top": {
            "type": "number",
            "format": "double"
          },
          "left": {
            "type": "number",
            "format": "double"
          },
          "bottom": {
            "type": "number",
            "format": "double"
          },
          "right": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "top",
          "left",
          "bottom",
          "right"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "FaceSquareDto1": {
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "Size of the square side",
            "minimum": 0
          },
          "top_left": {
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "type": "array",
            "description": "Top left location of the face in the frame - can be negative",
            "minItems": 2,
            "maxItems": 2
          },
          "overlap": {
            "enum": [
              "NO",
              "PARTIAL",
              "YES",
              "UNKNOWN"
            ],
            "type": "string"
          },
          "face_id": {
            "type": "string"
          },
          "detect_confidence": {
            "type": "number",
            "format": "double"
          },
          "sharpness": {
            "type": "number",
            "format": "double"
          },
          "face_occluded": {
            "type": "boolean"
          },
          "face_occluded_confidence": {
            "type": "number",
            "format": "double"
          },
          "detection": {
            "properties": {
              "top": {
                "type": "number",
                "format": "double"
              },
              "left": {
                "type": "number",
                "format": "double"
              },
              "bottom": {
                "type": "number",
                "format": "double"
              },
              "right": {
                "type": "number",
                "format": "double"
              }
            },
            "required": [
              "top",
              "left",
              "bottom",
              "right"
            ],
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": [
          "size",
          "top_left"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Logo1": {
        "properties": {
          "url": {
            "type": "string",
            "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
            "pattern": "((https|s3):\\/\\/.+)"
          },
          "position": {
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "type": "array",
            "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
            "example": [
              0,
              500
            ],
            "minItems": 2,
            "maxItems": 2
          }
        },
        "required": [
          "url",
          "position"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "LogoDto": {
        "anyOf": [
          {
            "properties": {
              "url": {
                "type": "string",
                "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                "pattern": "((https|s3):\\/\\/.+)"
              },
              "position": {
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "type": "array",
                "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                "example": [
                  0,
                  500
                ],
                "minItems": 2,
                "maxItems": 2
              }
            },
            "required": [
              "url",
              "position"
            ],
            "type": "object",
            "additionalProperties": true
          },
          {
            "type": "boolean"
          }
        ]
      },
      "AnimateConfigDto": {
        "properties": {
          "logo": {
            "anyOf": [
              {
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                    "pattern": "((https|s3):\\/\\/.+)"
                  },
                  "position": {
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "type": "array",
                    "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                    "example": [
                      0,
                      500
                    ],
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "required": [
                  "url",
                  "position"
                ],
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "boolean"
              }
            ]
          },
          "overlay": {
            "description": "URL to overlay video to add on the animated result",
            "type": "string",
            "example": "https://path.to.directory/movie.mp4",
            "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
          },
          "mute": {
            "type": "boolean",
            "description": "mutes the driver sound in the animated video result, defaults to true"
          },
          "stitch": {
            "type": "boolean",
            "description": "stitch back the animated result to the original image"
          },
          "max_animated_faces": {
            "type": "number",
            "format": "double",
            "description": "the amount of faces to animate when stitch: true. Defaults to 5",
            "minimum": 1,
            "maximum": 5
          },
          "result_format": {
            "description": "the file format of the animated video result",
            "type": "string",
            "enum": [
              "mp4",
              "gif",
              "mov"
            ]
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "CreateAnimationDto": {
        "properties": {
          "source_url": {
            "description": "The URL of the source image to be animated by the driver video. Image type of jpg|jpeg|tiff|png|bmp",
            "example": "https://path.to/image.jpg",
            "type": "string",
            "pattern": "(https|s3):.*\\.(?:jpg|jpeg|tiff|png|bmp|JPG|JPEG|TIFF|PNG|BMP)"
          },
          "driver_url": {
            "description": "The URL of the driver video to drive the animation, if not provided a driver video will be selected for you from the predefined DriversBank",
            "example": "bank://nostalgia/",
            "type": "string",
            "pattern": "(https|s3|bank):\\/\\/.+"
          },
          "result_url": {
            "description": "The URL of the animation video, if not provided use default destination\nSupports S3 Signed URLs",
            "example": "https://path.to.directory/movie.mp4",
            "type": "string",
            "pattern": "(https|s3):\\/\\/.+"
          },
          "face": {
            "description": "the face to animate - otherwise detects the dominant face",
            "example": {
              "top_left": [
                0,
                0
              ],
              "size": 512
            },
            "properties": {
              "size": {
                "type": "integer",
                "format": "int32",
                "description": "Size of the square side",
                "minimum": 0
              },
              "top_left": {
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "type": "array",
                "description": "Top left location of the face in the frame - can be negative",
                "minItems": 2,
                "maxItems": 2
              },
              "overlap": {
                "enum": [
                  "NO",
                  "PARTIAL",
                  "YES",
                  "UNKNOWN"
                ],
                "type": "string"
              },
              "face_id": {
                "type": "string"
              },
              "detect_confidence": {
                "type": "number",
                "format": "double"
              },
              "sharpness": {
                "type": "number",
                "format": "double"
              },
              "face_occluded": {
                "type": "boolean"
              },
              "face_occluded_confidence": {
                "type": "number",
                "format": "double"
              },
              "detection": {
                "properties": {
                  "top": {
                    "type": "number",
                    "format": "double"
                  },
                  "left": {
                    "type": "number",
                    "format": "double"
                  },
                  "bottom": {
                    "type": "number",
                    "format": "double"
                  },
                  "right": {
                    "type": "number",
                    "format": "double"
                  }
                },
                "required": [
                  "top",
                  "left",
                  "bottom",
                  "right"
                ],
                "type": "object",
                "additionalProperties": true
              }
            },
            "required": [
              "size",
              "top_left"
            ],
            "type": "object",
            "additionalProperties": true
          },
          "webhook": {
            "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered",
            "example": "https://host.domain.tld/to/webhook",
            "type": "string",
            "pattern": "^(?:https):\\/\\/[\\S]+$"
          },
          "config": {
            "description": "Advanced configuration option",
            "properties": {
              "logo": {
                "anyOf": [
                  {
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                        "pattern": "((https|s3):\\/\\/.+)"
                      },
                      "position": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                        "example": [
                          0,
                          500
                        ],
                        "minItems": 2,
                        "maxItems": 2
                      }
                    },
                    "required": [
                      "url",
                      "position"
                    ],
                    "type": "object",
                    "additionalProperties": true
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "overlay": {
                "description": "URL to overlay video to add on the animated result",
                "type": "string",
                "example": "https://path.to.directory/movie.mp4",
                "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
              },
              "mute": {
                "type": "boolean",
                "description": "mutes the driver sound in the animated video result, defaults to true"
              },
              "stitch": {
                "type": "boolean",
                "description": "stitch back the animated result to the original image"
              },
              "max_animated_faces": {
                "type": "number",
                "format": "double",
                "description": "the amount of faces to animate when stitch: true. Defaults to 5",
                "minimum": 1,
                "maximum": 5
              },
              "result_format": {
                "description": "the file format of the animated video result",
                "type": "string",
                "enum": [
                  "mp4",
                  "gif",
                  "mov"
                ]
              }
            },
            "type": "object",
            "additionalProperties": true
          },
          "user_data": {
            "description": "Non-sensitive custom data that will be added to the animation response and webhook.",
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "pattern": "^(?!\\s*$).+$"
          }
        },
        "required": [
          "source_url"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "DriverError": {
        "properties": {
          "kind": {
            "type": "string",
            "default": "DriverError"
          },
          "description": {
            "type": "string",
            "default": "Driver provided is invalid or cannot be loaded"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "LogoError": {
        "properties": {
          "kind": {
            "type": "string",
            "default": "LogoError"
          },
          "description": {
            "type": "string",
            "default": "Could not load logo image or invalid format or position"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "SourceError": {
        "properties": {
          "kind": {
            "type": "string",
            "default": "SourceError"
          },
          "description": {
            "type": "string",
            "default": "Could not load source image or invalid format"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "FaceError": {
        "properties": {
          "kind": {
            "type": "string",
            "default": "FaceError"
          },
          "description": {
            "type": "string",
            "default": "face not detected"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "VideoEnhanceError": {
        "properties": {
          "kind": {
            "type": "string",
            "default": "VideoEnhanceError"
          },
          "description": {
            "type": "string",
            "default": "Failed to create enhanced video (logo, subsample)"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "UnknownError": {
        "properties": {
          "kind": {
            "type": "string",
            "default": "UnknownError"
          },
          "description": {
            "type": "string",
            "default": "Unknown internal error"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "AnimationError": {
        "anyOf": [
          {
            "properties": {
              "kind": {
                "type": "string",
                "default": "DriverError"
              },
              "description": {
                "type": "string",
                "default": "Driver provided is invalid or cannot be loaded"
              }
            },
            "type": "object",
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": {
                "type": "string",
                "default": "LogoError"
              },
              "description": {
                "type": "string",
                "default": "Could not load logo image or invalid format or position"
              }
            },
            "type": "object",
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": {
                "type": "string",
                "default": "SourceError"
              },
              "description": {
                "type": "string",
                "default": "Could not load source image or invalid format"
              }
            },
            "type": "object",
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": {
                "type": "string",
                "default": "FaceError"
              },
              "description": {
                "type": "string",
                "default": "face not detected"
              }
            },
            "type": "object",
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": {
                "type": "string",
                "default": "VideoEnhanceError"
              },
              "description": {
                "type": "string",
                "default": "Failed to create enhanced video (logo, subsample)"
              }
            },
            "type": "object",
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": {
                "type": "string",
                "default": "UnknownError"
              },
              "description": {
                "type": "string",
                "default": "Unknown internal error"
              }
            },
            "type": "object",
            "additionalProperties": true
          }
        ]
      },
      "GetAnimationResponseDto": {
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object"
          },
          "user_id": {
            "type": "string",
            "description": "Unique identifier of the user that submitted the animation"
          },
          "source_url": {
            "type": "string",
            "description": "The URL of the source image to be animated by the driver video. Image type of .jpg | .png"
          },
          "driver_url": {
            "type": "string",
            "description": "The URL of the driver video to drive the animation, if not provided a driver video will be selected for you from the predefined DriversBank"
          },
          "created_at": {
            "type": "string",
            "description": "Animation creation time as iso-8601 string"
          },
          "created_by": {
            "type": "string",
            "description": "The user id of the user that created the animation"
          },
          "started_at": {
            "type": "string",
            "description": "Animation start time as iso-8601 string"
          },
          "modified_at": {
            "type": "string",
            "description": "last modified time as iso-8601 string"
          },
          "status": {
            "description": "The status of the animation",
            "enum": [
              "created",
              "done",
              "error",
              "started"
            ],
            "type": "string"
          },
          "result_url": {
            "type": "string",
            "description": "s3 uri to the resulting video"
          },
          "metadata": {
            "description": "metadata that has been collected through the process",
            "properties": {},
            "type": "object"
          },
          "error": {
            "description": "The error that failed the animation",
            "anyOf": [
              {
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "DriverError"
                  },
                  "description": {
                    "type": "string",
                    "default": "Driver provided is invalid or cannot be loaded"
                  }
                },
                "type": "object",
                "additionalProperties": true
              },
              {
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "LogoError"
                  },
                  "description": {
                    "type": "string",
                    "default": "Could not load logo image or invalid format or position"
                  }
                },
                "type": "object",
                "additionalProperties": true
              },
              {
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "SourceError"
                  },
                  "description": {
                    "type": "string",
                    "default": "Could not load source image or invalid format"
                  }
                },
                "type": "object",
                "additionalProperties": true
              },
              {
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "FaceError"
                  },
                  "description": {
                    "type": "string",
                    "default": "face not detected"
                  }
                },
                "type": "object",
                "additionalProperties": true
              },
              {
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "VideoEnhanceError"
                  },
                  "description": {
                    "type": "string",
                    "default": "Failed to create enhanced video (logo, subsample)"
                  }
                },
                "type": "object",
                "additionalProperties": true
              },
              {
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "UnknownError"
                  },
                  "description": {
                    "type": "string",
                    "default": "Unknown internal error"
                  }
                },
                "type": "object",
                "additionalProperties": true
              }
            ]
          },
          "webhook": {
            "type": "string",
            "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
          },
          "config": {
            "description": "The configuration that used to process the animation",
            "properties": {
              "logo": {
                "anyOf": [
                  {
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                        "pattern": "((https|s3):\\/\\/.+)"
                      },
                      "position": {
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": "array",
                        "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                        "example": [
                          0,
                          500
                        ],
                        "minItems": 2,
                        "maxItems": 2
                      }
                    },
                    "required": [
                      "url",
                      "position"
                    ],
                    "type": "object",
                    "additionalProperties": true
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "overlay": {
                "description": "URL to overlay video to add on the animated result",
                "type": "string",
                "example": "https://path.to.directory/movie.mp4",
                "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
              },
              "mute": {
                "type": "boolean",
                "description": "mutes the driver sound in the animated video result, defaults to true"
              },
              "stitch": {
                "type": "boolean",
                "description": "stitch back the animated result to the original image"
              },
              "max_animated_faces": {
                "type": "number",
                "format": "double",
                "description": "the amount of faces to animate when stitch: true. Defaults to 5",
                "minimum": 1,
                "maximum": 5
              },
              "result_format": {
                "description": "the file format of the animated video result",
                "type": "string",
                "enum": [
                  "mp4",
                  "gif",
                  "mov"
                ]
              }
            },
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "user_id",
          "source_url",
          "created_at",
          "modified_at",
          "status"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "GetAnimationsResponseDto": {
        "properties": {
          "animations": {
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the object"
                },
                "user_id": {
                  "type": "string",
                  "description": "Unique identifier of the user that submitted the animation"
                },
                "source_url": {
                  "type": "string",
                  "description": "The URL of the source image to be animated by the driver video. Image type of .jpg | .png"
                },
                "driver_url": {
                  "type": "string",
                  "description": "The URL of the driver video to drive the animation, if not provided a driver video will be selected for you from the predefined DriversBank"
                },
                "created_at": {
                  "type": "string",
                  "description": "Animation creation time as iso-8601 string"
                },
                "created_by": {
                  "type": "string",
                  "description": "The user id of the user that created the animation"
                },
                "started_at": {
                  "type": "string",
                  "description": "Animation start time as iso-8601 string"
                },
                "modified_at": {
                  "type": "string",
                  "description": "last modified time as iso-8601 string"
                },
                "status": {
                  "description": "The status of the animation",
                  "enum": [
                    "created",
                    "done",
                    "error",
                    "started"
                  ],
                  "type": "string"
                },
                "result_url": {
                  "type": "string",
                  "description": "s3 uri to the resulting video"
                },
                "metadata": {
                  "description": "metadata that has been collected through the process",
                  "properties": {},
                  "type": "object"
                },
                "error": {
                  "description": "The error that failed the animation",
                  "anyOf": [
                    {
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "DriverError"
                        },
                        "description": {
                          "type": "string",
                          "default": "Driver provided is invalid or cannot be loaded"
                        }
                      },
                      "type": "object",
                      "additionalProperties": true
                    },
                    {
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "LogoError"
                        },
                        "description": {
                          "type": "string",
                          "default": "Could not load logo image or invalid format or position"
                        }
                      },
                      "type": "object",
                      "additionalProperties": true
                    },
                    {
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "SourceError"
                        },
                        "description": {
                          "type": "string",
                          "default": "Could not load source image or invalid format"
                        }
                      },
                      "type": "object",
                      "additionalProperties": true
                    },
                    {
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "FaceError"
                        },
                        "description": {
                          "type": "string",
                          "default": "face not detected"
                        }
                      },
                      "type": "object",
                      "additionalProperties": true
                    },
                    {
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "VideoEnhanceError"
                        },
                        "description": {
                          "type": "string",
                          "default": "Failed to create enhanced video (logo, subsample)"
                        }
                      },
                      "type": "object",
                      "additionalProperties": true
                    },
                    {
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "UnknownError"
                        },
                        "description": {
                          "type": "string",
                          "default": "Unknown internal error"
                        }
                      },
                      "type": "object",
                      "additionalProperties": true
                    }
                  ]
                },
                "webhook": {
                  "type": "string",
                  "description": "A webhook URL for sending the payload including animate details. In a case of empty value, the webhook will not be triggered"
                },
                "config": {
                  "description": "The configuration that used to process the animation",
                  "properties": {
                    "logo": {
                      "anyOf": [
                        {
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "https url to an ARGB jpg/png image, a default logo is used otherwise",
                              "pattern": "((https|s3):\\/\\/.+)"
                            },
                            "position": {
                              "items": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "type": "array",
                              "description": "position of the logo in pixels from the top left corner (w,h) negative values are subtracted from last pixel",
                              "example": [
                                0,
                                500
                              ],
                              "minItems": 2,
                              "maxItems": 2
                            }
                          },
                          "required": [
                            "url",
                            "position"
                          ],
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "type": "boolean"
                        }
                      ]
                    },
                    "overlay": {
                      "description": "URL to overlay video to add on the animated result",
                      "type": "string",
                      "example": "https://path.to.directory/movie.mp4",
                      "pattern": "(https|s3):.*\\.(?:mp4|mov|mpeg)"
                    },
                    "mute": {
                      "type": "boolean",
                      "description": "mutes the driver sound in the animated video result, defaults to true"
                    },
                    "stitch": {
                      "type": "boolean",
                      "description": "stitch back the animated result to the original image"
                    },
                    "max_animated_faces": {
                      "type": "number",
                      "format": "double",
                      "description": "the amount of faces to animate when stitch: true. Defaults to 5",
                      "minimum": 1,
                      "maximum": 5
                    },
                    "result_format": {
                      "description": "the file format of the animated video result",
                      "type": "string",
                      "enum": [
                        "mp4",
                        "gif",
                        "mov"
                      ]
                    }
                  },
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "required": [
                "id",
                "user_id",
                "source_url",
                "created_at",
                "modified_at",
                "status"
              ],
              "type": "object",
              "additionalProperties": true
            },
            "type": "array"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "animations"
        ],
        "type": "object",
        "additionalProperties": true
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      },
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}